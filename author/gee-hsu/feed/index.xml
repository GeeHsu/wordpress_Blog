<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>gee.hsu &#8211; wordpress_blog</title>
	<atom:link href="/wordpress_blog/author/gee-hsu/feed/" rel="self" type="application/rss+xml" />
	<link>/wordpress_blog</link>
	<description>This is a dynamic to static website.</description>
	<lastBuildDate>Sun, 03 Apr 2022 07:23:33 +0000</lastBuildDate>
	<language>zh-TW</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.9.2</generator>

<image>
	<url>/wordpress_blog/wp-content/uploads/2022/03/logo.png</url>
	<title>gee.hsu &#8211; wordpress_blog</title>
	<link>/wordpress_blog</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>JavaScript 必修篇 &#8211; 前端修練全攻略 (2)</title>
		<link>/wordpress_blog/javascript-compulsory-2/</link>
		
		<dc:creator><![CDATA[gee.hsu]]></dc:creator>
		<pubDate>Mon, 28 Mar 2022 07:23:00 +0000</pubDate>
				<category><![CDATA[六角學院]]></category>
		<guid isPermaLink="false">/wordpress_blog/?p=585</guid>

					<description><![CDATA[AJAX – 網路請求 什麼是 AJAX？它如何改善網頁使用體驗 [&#8230;]]]></description>
										<content:encoded><![CDATA[
<h2>AJAX – 網路請求</h2>



<h3>什麼是 AJAX？它如何改善網頁使用體驗？</h3>



<ul><li><a href="https://zh.wikipedia.org/wiki/AJAX" target="_blank" rel="noreferrer noopener">AJAX – 維基百科</a></li></ul>



<p>AJAX 是非同步 JavaScript 與 XML 技術。</p>



<h3>什麼是網路請求？</h3>



<ul><li>透過 Chrome 執行 Enter URL 動作，我傳送了一個網路請求，取得：get URL 網頁上的資訊</li><li>其他軟體也可以發出網路請求</li><li>透過 JS 發出網路請求</li></ul>



<h3>從網頁架構瞭解網頁請求 – 上集</h3>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;js-compulsory&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;h1&gt;js-compulsory&lt;/h1&gt;
  &lt;ul class="list"&gt;&lt;/ul&gt;
  &lt;img src="https://images.unsplash.com/photo-1630042111810-af23e1de9176?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=736&amp;q=80" alt="Photo by Lissete Laverde"&gt;

  &lt;script src="js/all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// all.js

console.log('1234');</code></pre>



<ul><li>Chrome Network – 開發人員工具</li></ul>



<h3>從網頁架構瞭解網頁請求 – 下集</h3>



<p>網頁請求先後分別是 index.html 的 HTML 結構、 img src、all.js，共發了3次網頁請求。</p>



<ul><li>Chrome get 取得請求 → 本地端伺服器</li><li>Chrome ← 本地端伺服器</li></ul>



<h3>網頁請求狀態碼</h3>



<ul><li><a rel="noreferrer noopener" href="https://developer.mozilla.org/zh-TW/docs/Web/HTTP/Status" target="_blank">HTTP 狀態碼 – MDN文件</a><ul><li>資訊回應 (Informational responses, 100 -199)</li><li>成功回應 (Successful responses, 200 – 299)</li><li>重定向 (Redirects , 300 – 399)</li><li>用戶端錯誤 (Client errors, 400 – 499)</li><li>伺服器端錯誤 (Server errors, 500 – 599)</li></ul></li></ul>



<h4>狀態碼(Status)有哪些</h4>



<ul><li>404 Not Found 伺服器找不到請求的資源</li><li>200 OK 請求成功</li><li>304 Not Modified</li><li>500 Internal Server Error 伺服器端發生未知或無法處理的錯誤</li></ul>



<h4>清除快取並強制重新載入 (開發人員工具要打開)</h4>



<ul><li>重新整理圖示長按左鍵後選取清除快取並強制重新載入</li><li>重新整理圖示右鍵後選取清除快取並強制重新載入</li></ul>



<h3>request、response 講解</h3>



<ul><li>Google Network → Name – index.html → Headers → Request Headers</li></ul>



<p>request(請求)：傳送給伺服器要什麼資料。</p>



<p>response(回傳)：回傳給瀏覽器資料，response header、response data</p>



<h3>用 Node.js 開啟伺服器，更加瞭解 request、response 的差異</h3>



<pre class="wp-block-code"><code>// app.js


const http = require('http');

http.createServer(function(request, response) {
  console.log(request);
  if(request.url == '/') {
    console.log('接收到網頁請求');
    response.writeHead(200, {'Content-Type': 'text/HTML'});
    response.write('&lt;h1&gt;index&lt;/h1&gt;');
    response.end();
  }

}).listen(process.env.PORT || 3000);
console.log('Server已開啟port: 3000.');</code></pre>



<h3>AJAX – 網路請求小節測驗</h3>



<h2>AJAX – axios 套件教學</h2>



<h3>各種發出網路請求的 JS 寫法種類介紹</h3>



<p>AJAX 透過 JS 發出網路請求。</p>



<h4>JavaScript 原生寫法</h4>



<ul><li>XMLHttpRequest –&nbsp;<a rel="noreferrer noopener" href="https://developer.mozilla.org/zh-TW/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest" target="_blank">連結</a></li><li>Fetch –&nbsp;<a href="https://developer.mozilla.org/zh-TW/docs/Web/API/Fetch_API/Using_Fetch" target="_blank" rel="noreferrer noopener">連結</a></li></ul>



<pre class="wp-block-code"><code>// XMLHttpRequest 範例

function reqListener () {
  console.log(this.responseText);
}

var oReq = new XMLHttpRequest();
oReq.addEventListener("load", reqListener);
oReq.open("GET", "http://www.example.org/example.txt");
oReq.send();</code></pre>



<pre class="wp-block-code"><code>// Fetch 範例

fetch('http://example.com/movies.json')
  .then(function(response) {
    return response.json();
  })
  .then(function(myJson) {
    console.log(myJson);
  });

</code></pre>



<h4>套件，需額外載入 JS</h4>



<ul><li>axios –&nbsp;<a href="https://github.com/axios/axios" target="_blank" rel="noreferrer noopener">連結</a>、Features</li></ul>



<h3>axios 環境安裝</h3>



<ul><li><a rel="noreferrer noopener" href="https://github.com/axios/axios" target="_blank">axios 套件連結</a></li></ul>



<h4>套件cdn 程式碼與自己撰寫載入的程式碼載入順序有差</h4>



<p>套件程式碼載入放在自己撰寫的程式碼之前。</p>



<h4>檢查套件載入有沒有成功</h4>



<ul><li>使用 Google Network 查看 Status</li><li>使用 console.log(axios);</li></ul>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;js-compulsory&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;h1&gt;js-compulsory&lt;/h1&gt;

  &lt;script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"&gt;&lt;/script&gt;
  &lt;script src="js/all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// all.js

// 測試套件有沒有載入成功
console.log(axios);</code></pre>



<h3>axios – 嘗試串接外部資料</h3>



<ul><li><a href="https://hexschool.github.io/ajaxHomework/data.json" target="_blank" rel="noreferrer noopener">練習用的 json 連結</a></li></ul>



<pre class="wp-block-code"><code>// 範例程式碼

axios.get('https://hexschool.github.io/ajaxHomework/data.json')
  .then(function (response) {
    console.log(response.data);
    console.log(response.status);
    console.log(response.statusText);
    console.log(response.headers);
    console.log(response.config);
  });</code></pre>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;js-compulsory&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;h1&gt;js-compulsory&lt;/h1&gt;

  &lt;script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"&gt;&lt;/script&gt;
  &lt;script src="js/all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// all.js

// 測試套件有沒有載入成功
// console.log(axios);

// https://hexschool.github.io/ajaxHomework/data.json

axios.get('https://hexschool.github.io/ajaxHomework/data.json')
  .then(function (response) {
    console.log(response.data);
    console.log(response.status);
    console.log(response.statusText);
    console.log(response.headers);
    console.log(response.config);
  });</code></pre>



<h3>axios – response 參數詳細講解</h3>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;js-compulsory&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;h1&gt;js-compulsory&lt;/h1&gt;

  &lt;script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"&gt;&lt;/script&gt;
  &lt;script src="js/all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// all.js

// 測試套件有沒有載入成功
// console.log(axios);

// https://hexschool.github.io/ajaxHomework/data.json

axios.get('https://hexschool.github.io/ajaxHomework/data.json')
  .then(function (response) {
    console.log(response);

    console.log(response.data);
    console.log(response.status);
    console.log(response.statusText);
    console.log(response.headers);
    console.log(response.config);
  });</code></pre>



<h3 class="has-background" style="background-color:#ff6663">axios – 將外部資料寫入到網頁上</h3>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;js-compulsory&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;h1&gt;js-compulsory&lt;/h1&gt;
  &lt;h2 class="title"&gt;&lt;/h2&gt;

  &lt;script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"&gt;&lt;/script&gt;
  &lt;script src="js/all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// all.js

// 測試套件有沒有載入成功
// console.log(axios);

// https://hexschool.github.io/ajaxHomework/data.json

axios.get('https://hexschool.github.io/ajaxHomework/data.json')
  .then(function (response) {
    let ary = response.data;
    console.log(ary&#91;0].name);
    const title = document.querySelector('.title');
    // title.innerHTML = '王小明';
    // title.innerHTML = ary&#91;0].name;
    title.textContent = ary&#91;0].name;
  });</code></pre>



<h4>我的提問，外部資料圖片抓取問題</h4>



<pre class="wp-block-code"><code>// index.html

&lt;ul class="list"&gt;&lt;/ul&gt;</code></pre>



<pre class="wp-block-code"><code>// style.css

img {
  width: 320px;
  height: 240px;
}
</code></pre>



<pre class="wp-block-code"><code>// script.js

// 外部資料
// https://ptx.transportdata.tw/MOTC/v2/Tourism/ScenicSpot?%24top=40&amp;%24format=JSON

// 資料模擬
let data = &#91;
  {
    name: "green mountain across body of water",
    pictureUrl:
      "https://images.unsplash.com/photo-1464822759023-fed622ff2c3b?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=870&amp;q=80"
  },
  {
    name: "mountains reflected on water"
    // 沒有 pictureUrl
  },
  {
    name: "brown field near tree during daytime",
    pictureUrl: "" // pictureUrl 為空值
  },
  {
    name: "花瓶岩",
    pictureUrl: "http://210.69.151.212/ptngis/files/photos/l/marks/C1-11501.jpg" // pictureUrl 圖片網址錯誤
  }
];
const list = document.querySelector(".list");

// 初始化狀態 - 渲染資料
function dataRender() {
  // 初始化一個空字串
  let str = "";

  data.forEach(function (item, index) {
    // let content = `&lt;li&gt;
    //   &lt;h2&gt;${item.name}&lt;/h2&gt;
    //   &lt;img src="${item.pictureUrl}" alt="圖片"&gt;
    // &lt;/li&gt;`;
    // str+=content;

    let content = `&lt;li&gt;
        &lt;h2&gt;${item.name}&lt;/h2&gt;
        &lt;img src="${item.pictureUrl}" alt="${item.name}" &gt;
      &lt;/li&gt;`;
    str += content;
    // }
  });

  list.innerHTML = str;
}
dataRender();

// 綁定監聽事件
// 最後一項錯誤的網址，瀏覽器會先去找看看有沒有，如果沒有才會觸發。所以可以看到最後一張比較慢才顯示
const images = document.querySelectorAll("img");
images.forEach((item) =&gt; {
  item.addEventListener("error", (e) =&gt; {
    // console.log(e.target);
    e.target.setAttribute(
      "src",
      "https://images.unsplash.com/photo-1561657819-51c0511e35ab?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=871&amp;q=80"
    );
  });
});

// 第一個資料正常：圖片正常
// 第二個沒有資料：使用取代圖片
// 第三個是空值
// 第四個是錯誤的圖片網址

// 關於陣列圖片抓取的問題
// 關於沒有資料、空值、錯誤的圖片網址，該怎麼處理、避免圖片區域是空白情形?
</code></pre>



<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/error_event" target="_blank" rel="noreferrer noopener">error event – MDN 文件連結</a></li></ul>



<h3 class="has-background" style="background-color:#ff6663">axios – 非同步觀念</h3>



<pre class="wp-block-code"><code>// all.js

// 測試套件有沒有載入成功
// console.log(axios);

// https://hexschool.github.io/ajaxHomework/data.json

let ary = &#91;];

axios.get('https://hexschool.github.io/ajaxHomework/data.json')
  .then(function (response) {
    console.log('資料有回傳了');
    ary = response.data;
    console.log(ary);
  });

  console.log(ary);</code></pre>



<pre class="wp-block-code"><code>// Google Console
   &#91;]           all.js:15
   資料有回傳了  all.js:10
   &#91;{...}]      all.js:12</code></pre>



<h3 class="has-background" style="background-color:#ff6663">透過函式設計處理非同步</h3>



<p>資料回傳後，再執行函式。</p>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;js-compulsory&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;h1&gt;js-compulsory&lt;/h1&gt;
  &lt;h2 class="title"&gt;&lt;/h2&gt;

  &lt;script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"&gt;&lt;/script&gt;
  &lt;script src="js/all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// all.js

// 測試套件有沒有載入成功
// console.log(axios);

// https://hexschool.github.io/ajaxHomework/data.json

let ary = &#91;];

axios.get('https://hexschool.github.io/ajaxHomework/data.json')
  .then(function(response) {
    console.log('資料有回傳了'); // 1
    ary = response.data;
    renderData();
  });

// 渲染資料
function renderData() {
  console.log(ary); // 2
  const title =  document.querySelector('.title');
  // title.textContent = '測試';
  title.textContent = ary&#91;0].name;
}
console.log(ary);  // 3

// 執行的先後順序 3 → 1 → 2</code></pre>



<h3>AJAX – axios 套件教學小節測驗</h3>



<h3 class="has-background" style="background-color:#ff6663">第五週總複習</h3>



<h2>網路請求補充知識 (還未觀看)</h2>



<h3>從 Wireshark、Fiddler 深入了解網路請求</h3>



<h3>計算機網路總結</h3>



<h2>AJAX POST API 講解</h2>



<h3>網路請求種類介紹</h3>



<ul><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/HTTP/Methods" target="_blank" rel="noreferrer noopener">HTTP 請求方法</a></li></ul>



<h3>post 網路請求文件介紹</h3>



<ul><li><a rel="noreferrer noopener" href="https://github.com/hexschool/nodejs_ajax_tutorial" target="_blank">本小節練習用 API 網址</a><ul><li>註冊</li><li>登入</li></ul></li></ul>



<h4>六角學院 AJAX 練習</h4>



<p>注意，此範例僅供練習，並不會儲存用戶資料至資料庫(僅緩存)。</p>



<h5>註冊</h5>



<p>新增一個帳號。</p>



<ul><li>Method: POST</li><li>URL: https://hexschool-tutorial.herokuapp.com/api/signup</li><li>Data:</li></ul>



<pre class="wp-block-code"><code>{
  email: 'lovef2e@hexschool.com',
  password: '12345678'
}</code></pre>



<ul><li>Success Response:</li></ul>



<pre class="wp-block-code"><code>{
  "success": true,
  "result": {},
  "message": "帳號註冊成功"
}</code></pre>



<ul><li>Error Response:</li></ul>



<pre class="wp-block-code"><code>{
  "success": false,
  "result": {},
  "message": "此帳號已被使用"
}</code></pre>



<h5>登入</h5>



<p>登入一個已存在的帳號。</p>



<ul><li>Method: POST</li><li>URL: https://hexschool-tutorial.herokuapp.com/api/signin</li><li>Data:</li></ul>



<pre class="wp-block-code"><code>{
  email: 'lovef2e@hexschool.com',
  password: '12345678'
}</code></pre>



<ul><li>Success Response:</li></ul>



<pre class="wp-block-code"><code>{
  "success": true,
  "result" {},
  "message": "登入成功"
}</code></pre>



<ul><li>Error Response:</li></ul>



<pre class="wp-block-code"><code>{
  "success": false,
  "result": {},
  "message": "此帳號不存在或帳號密碼錯誤"
}</code></pre>



<h3>四種常見的 POST 請求 content-type 介紹</h3>



<h4>請求資料格式 request header Content-Type</h4>



<ul><li>application/x-www-form-urlencoded</li><li>application/json</li><li>multipart/form-data</li><li>text/plain (記事本格式最少使用)</li></ul>



<p>axios 預設屬於第2種請求資料格式，支援其他格式、可以自己設定。</p>



<p>multipart/form-data，傳送檔案格式的時候，檔案：圖片、pdf、word、mp4。</p>



<h3>透過 axios 實作註冊 post 網路請求</h3>



<ul><li><a rel="noreferrer noopener" href="https://github.com/hexschool/nodejs_ajax_tutorial" target="_blank">本小節練習用 API 網址</a></li><li><a href="https://github.com/axios/axios" target="_blank" rel="noreferrer noopener">axios 文件連結</a></li></ul>



<pre class="wp-block-code"><code>// axios post 範例

axios.post('/user', {
    firstName: 'Fred',
    lastName: 'Flintstone'
  })
  .then(function (response) {
    console.log(response);
  })
  .catch(function (error) {
    console.log(error);
  });</code></pre>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;JS必修篇&lt;/title&gt;  
&lt;/head&gt;
&lt;body&gt;

  &lt;script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"&gt;&lt;/script&gt;
  &lt;script src="js/all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// all.js

// URL
// https://hexschool-tutorial.herokuapp.com/api/signup

let obj =  {
  email: 'hexschool2021@hexschool.com',
  password: '12345678'
}

axios.post('https://hexschool-tutorial.herokuapp.com/api/signup', obj)
.then(function (response) {
  console.log(response);
})
.catch(function (error) {
  console.log(error);
});</code></pre>



<pre class="wp-block-code"><code>// Google Console
   {data: {…}, status: 200, statusText: 'OK', headers: {…}, config: {…},&nbsp;…}
   XHR finished loading: POST "https://hexschool-tutorial.herokuapp.com/api/signup"
&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">從 chrome 觀察 post 請求</h3>



<ul><li>Chrome Network<ul><li>Name</li><li>Headers</li><li>Payload</li><li>Preview</li><li>Response</li></ul></li></ul>



<pre class="wp-block-code"><code>// all.js - 1

// URL
// https://hexschool-tutorial.herokuapp.com/api/signup

let obj =  {
  email: 'hexschool2021@hexschool.com',
  password: '12345678'
}

axios.post('https://hexschool-tutorial.herokuapp.com/api/signup', obj)
.then(function (response) {
  console.log(response);
})
.catch(function (error) {
  console.log(error);
});</code></pre>



<pre class="wp-block-code"><code>// index.html - 2

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;JS必修篇&lt;/title&gt;  
&lt;/head&gt;
&lt;body&gt;

  &lt;script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"&gt;&lt;/script&gt;
  &lt;script src="js/all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// all.js - 2

// URL
// https://hexschool-tutorial.herokuapp.com/api/signup

function callSignUp(){
  let obj =  {
    email: 'hexschool2021@hexschool.com',
    password: '12345678'
  }
  
  axios.post('https://hexschool-tutorial.herokuapp.com/api/signup', obj)
  .then(function (response) {
    console.log(response);
  })
  .catch(function (error) {
    console.log(error);
  });
}</code></pre>



<pre class="wp-block-code"><code>// Google Console - 2
&gt;  callSignUp();
&lt;  undefined
   {data: {…}, status: 200, statusText: 'OK', headers: {…}, config: {…},&nbsp;…}
   XHR finished loading: POST "https://hexschool-tutorial.herokuapp.com/api/signup"
&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">實作 axios DOM 表單註冊流程</h3>



<ul><li><a href="https://codepen.io/hexschool/pen/jOVgyPr?editors=1010" target="_blank" rel="noreferrer noopener">本小節 Codepen 範例程式碼</a></li></ul>



<pre class="wp-block-code"><code>// 範例程式碼 index.html

帳號：
  &lt;input type="text" class="account"&gt;
  &lt;br&gt;
  密碼：
  &lt;input type="text" class="password"&gt;
  &lt;br&gt;
  &lt;input type="button" value="送出" class="send"&gt;
  &lt;script src="https://unpkg.com/axios/dist/axios.min.js"&gt;&lt;/script&gt;</code></pre>



<pre class="wp-block-code"><code>// 範例程式碼 - script.js

const account = document.querySelector('.account');
const password = document.querySelector('.password');
const send = document.querySelector('.send');

send.addEventListener('click',function(e){
  callSingUp()
})
function callSingUp(){
  if (account.value == "" || password.value==""){
    alert("請填寫正確資訊");
    return;
  }
  let obj = {};
  obj.email = account.value;
  obj.password = password.value;
  axios.post('https://hexschool-tutorial.herokuapp.com/api/signup', obj)
    .then(function (response) {
      if (response.data.message=="帳號註冊成功"){
        alert("恭喜帳號註冊成功");
      }else{
        alert("帳號註冊失敗，有可能有人用你的email註冊！");
      }
      account.value = "";
      password.value="";
    })
    .catch(function (error) {
      console.log(error);
    });
}</code></pre>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;JS必修篇&lt;/title&gt; 
  &lt;link rel="stylesheet" href="style.css"&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;div class="container"&gt;
    &lt;form&gt;
      &lt;h2&gt;註冊帳號&lt;/h2&gt;
      &lt;label for="account"&gt;帳號：&lt;/label&gt;
      &lt;input id="account" type="text" class="account" placeholder="請輸入帳號"&gt;
      
      &lt;br&gt;&lt;br&gt;
      
      &lt;label for="password"&gt;密碼：&lt;/label&gt;
      &lt;input id="password" type="password" class="password" placeholder="請輸入密碼"&gt;
      
      &lt;br&gt;&lt;br&gt;
      
      &lt;input type="button" value="送出" class="send"&gt;
    &lt;/form&gt;
  &lt;/div&gt;

  &lt;script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"&gt;&lt;/script&gt;
  &lt;script src="js/all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// style.css

/* css reset start */
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}
/* css reset end */

/* css reset settings start */
*,*::before,*::after {
  box-sizing: border-box;
}

img {
  max-width: 100%;
  height: auto;
}
/* css reset settings end */

/* css styles start */
*,*:before,*:after {
  box-sizing: border-box;
}

.container {
  max-width: 940px;
  margin: 12% auto;
}

form {
  max-width: 375px;
  width: 100%;
  margin: 0 auto;
  background: #eee;
}

form h2 {
  font-size: 28px;
  text-align: center;
  padding-top: 16px;
  padding-bottom: 16px;
}

form label {
  width: 100%;
  display: block;
  margin-bottom: 16px;
  padding-left: 5%;
  font-size: 20px;
}

.account, .password {
  width: 90%;
  padding-top: 8px;
  padding-bottom: 8px;
  margin-left: 5%;
  margin-right: 5%;
  font-size: 20px;
}

.send {
  margin-left: 5%;
  margin-bottom: 16px;
  padding: 8px 16px;
  background: #353535;
  color: #fff;
  border-radius: 4px;
  border: 0;
  font-size: 20px;
}

.send:hover {
  background: #c9184a;
}

/* css styles end */</code></pre>



<pre class="wp-block-code"><code>// all.js

// URL
// https://hexschool-tutorial.herokuapp.com/api/signup

const account = document.querySelector('.account');
const password = document.querySelector('.password');
const send = document.querySelector('.send');

// console.log(account,password,send);

send.addEventListener('click',function(e){
  // console.log('是否被點擊');
  callSignUp();

});

function callSignUp(){
  // email: 'hexschool2021@hexschool.com',
  // password: '12345678'
  if(account.value == "" || password.value == ""){
    alert("請填寫正確資訊");
    return;
  }
  let obj =  {};
  obj.email = account.value;
  obj.password = password.value;
  console.log(obj);
  
  axios.post('https://hexschool-tutorial.herokuapp.com/api/signup', obj)
  .then(function (response) {
    // console.log(response);
    // alert(response.data.message);
    if(response.data.message == "帳號註冊成功"){
      alert("恭喜帳號註冊成功");
    }
    else {
      alert("此帳號註冊失敗，有可能有人用你的email註冊！");
    }
    account.value = "";
    password.value = "";
  })
  .catch(function (error) {
    console.log(error);
  });
}</code></pre>



<h3 class="has-background" style="background-color:#ff6663">AJAX POST 小節作業</h3>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;JS必修篇&lt;/title&gt; 
  &lt;link rel="stylesheet" href="style.css"&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;!-- 註冊帳號 --&gt;
  &lt;div class="container"&gt;
    &lt;form&gt;
      &lt;h2&gt;註冊帳號&lt;/h2&gt;
      &lt;label for="account-signup"&gt;帳號：&lt;/label&gt;
      &lt;input id="account-signup" type="text" class="account account-signup" placeholder="請輸入帳號"&gt;
      
      &lt;br&gt;&lt;br&gt;
      
      &lt;label for="password-signup"&gt;密碼：&lt;/label&gt;
      &lt;input id="password-signup" type="password" class="password password-signup" placeholder="請輸入密碼"&gt;
      
      &lt;br&gt;&lt;br&gt;
      
      &lt;input type="button" value="送出" class="send send-signup"&gt;
    &lt;/form&gt;
  &lt;/div&gt;

  &lt;!-- 登入帳號 --&gt;
  &lt;div class="container"&gt;
    &lt;form&gt;
      &lt;h2&gt;登入帳號&lt;/h2&gt;
      &lt;label for="account-signin"&gt;帳號：&lt;/label&gt;
      &lt;input id="account-signin" type="text" class="account account-signin" placeholder="請輸入帳號"&gt;
      
      &lt;br&gt;&lt;br&gt;
      
      &lt;label for="password-signin"&gt;密碼：&lt;/label&gt;
      &lt;input id="password-signin" type="password" class="password password-signin" placeholder="請輸入密碼"&gt;
      
      &lt;br&gt;&lt;br&gt;
      
      &lt;input type="button" value="送出" class="send send-signin"&gt;
    &lt;/form&gt;
  &lt;/div&gt;

  &lt;script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"&gt;&lt;/script&gt;
  &lt;script src="js/all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// style.css

/* css reset start */
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}
/* css reset end */

/* css reset settings start */
*,*::before,*::after {
  box-sizing: border-box;
}

img {
  max-width: 100%;
  height: auto;
}
/* css reset settings end */

/* css styles start */
.container {
  max-width: 940px;
  margin: 12% auto;
}

form {
  max-width: 375px;
  width: 100%;
  margin: 0 auto;
  background: #eee;
}

form h2 {
  font-size: 28px;
  text-align: center;
  padding-top: 16px;
  padding-bottom: 16px;
}

form label {
  width: 100%;
  display: block;
  margin-bottom: 16px;
  padding-left: 5%;
  font-size: 20px;
}

.account, .password {
  width: 90%;
  padding-top: 8px;
  padding-bottom: 8px;
  margin-left: 5%;
  margin-right: 5%;
  font-size: 20px;
}

.send {
  margin-left: 5%;
  margin-bottom: 16px;
  padding: 8px 16px;
  background: #353535;
  color: #fff;
  border-radius: 4px;
  border: 0;
  font-size: 20px;
}

.send:hover {
  background: #c9184a;
}

/* css styles end */</code></pre>



<pre class="wp-block-code"><code>// all.js

// URL
// https://hexschool-tutorial.herokuapp.com/api/signup

const accountSignup = document.querySelector('.account-signup');
const passwordSignup = document.querySelector('.password-signup');
const sendSignup = document.querySelector('.send-signup');

// console.log(accountSignup,passwordSignup,sendSignup);

sendSignup.addEventListener('click',function(e){
  // console.log('是否被點擊');
  callSignUp();

});

function callSignUp(){
  // email: 'hexschool2021@hexschool.com',
  // password: '12345678'
  if(accountSignup.value == "" || passwordSignup.value == ""){
    alert("請填寫正確資訊");
    return;
  }
  let objSignup =  {};
  objSignup.email = accountSignup.value;
  objSignup.password = passwordSignup.value;
  // console.log(objSignup);
  
  axios.post('https://hexschool-tutorial.herokuapp.com/api/signup', objSignup)
  .then(function (response) {
    // console.log(response);
    // alert(response.data.message);
    if(response.data.message == "帳號註冊成功"){
      alert("恭喜帳號註冊成功");
    }
    else {
      alert("此帳號註冊失敗，有可能有人用你的email註冊！");
    }
    accountSignup.value = "";
    passwordSignup.value = "";
  })
  .catch(function (error) {
    console.log(error);
  });
}

// URL
// https://hexschool-tutorial.herokuapp.com/api/signin

const accountSignin = document.querySelector('.account-signin');
const passwordSignin = document.querySelector('.password-signin');
const sendSignin = document.querySelector('.send-signin');

// console.log(accountSignin,passwordSignin,sendSignin);

sendSignin.addEventListener('click',function(e){
  // console.log('是否被點擊');
  callSignin();
});

function callSignin(){
  if(accountSignin.value == "" || passwordSignin.value == ""){
    alert("請填寫正確資訊");
    return;
  }
  let objSignin = {};
  objSignin.email = accountSignin.value;
  objSignin.password = passwordSignin.value;
  // console.log(objSignin);

  axios.post('https://hexschool-tutorial.herokuapp.com/api/signin', objSignin)
    .then(function (response) {
      // console.log(response);
      // alert(response.data.message);
      if(response.data.message == '登入成功'){
        alert("帳號登入成功");
      }
      else {
        alert('此帳號登入失敗，請重新登入帳號');
      }
      accountSignin.value = "";
      passwordSignin.value = "";
    })
    .catch(function (error) {
      console.log(error);
    })
}
</code></pre>



<h3>AJAX POST API 講解小節測驗</h3>



<h2>todolist 待辦事項</h2>



<h3>todolist 經典題目介紹</h3>



<ul><li><a href="https://codepen.io/hexschool/pen/OJWRqrN" target="_blank" rel="noreferrer noopener">todolist 範例程式碼</a></li></ul>



<h3>取值複習 getAttribute</h3>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;JS必修篇&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;h2 class="title"&gt;標題內容&lt;/h2&gt;
  
  &lt;script src="all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// all.js

const title = document.querySelector(".title");

// console.log(title);

title.addEventListener("click",function(e){
  // console.log(e.target);
  console.log(e.target.textContent);
  console.log(e.target.getAttribute("class"));
});</code></pre>



<h3>範圍內容取值</h3>



<h4>方法一</h4>



<pre class="wp-block-code"><code>// index.html - 1

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;JS必修篇&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;h2 class="title"&gt;
    &lt;span&gt;標題內容&lt;/span&gt;
    &lt;input type="button" value="檢視"&gt;
  &lt;/h2&gt;
  
  &lt;script src="all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// all.js - 1

const title = document.querySelector(".title");

// console.log(title);

title.addEventListener("click",function(e){
  // console.log(e.target);
  // console.log(e.target.textContent);
  // console.log(e.target.getAttribute("class"));
  
  // console.log(e.target.nodeName);
  if (e.target.nodeName!=="INPUT") {
    return;
  }
  // console.log('你有正確點到 input');
  console.log(e.target.getAttribute("value"));

});</code></pre>



<h4>方法二</h4>



<pre class="wp-block-code"><code>// index.html - 2

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;JS必修篇&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;h2 class="title"&gt;
    &lt;span&gt;標題內容&lt;/span&gt;
    &lt;input type="button" class="view" value="檢視"&gt;
  &lt;/h2&gt;
  
  &lt;script src="all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// all.js - 2

const title = document.querySelector(".title");

title.addEventListener("click",function(e){
  if (e.target.getAttribute("class")=="view") {
    console.log(e.target.getAttribute("value"));
  }

});</code></pre>



<h3>監聽大範圍內容取值</h3>



<pre class="wp-block-code"><code>// index.html - 1

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;JS必修篇&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;div class="box"&gt;
    &lt;h2 class="title"&gt;
      &lt;span&gt;標題1&lt;/span&gt;
      &lt;input type="button" class="view" value="檢視1"&gt;
    &lt;/h2&gt;
    &lt;h2 class="title"&gt;
      &lt;span&gt;標題2&lt;/span&gt;
      &lt;input type="button" class="view" value="檢視2"&gt;
    &lt;/h2&gt;
    &lt;h2 class="title"&gt;
      &lt;span&gt;標題3&lt;/span&gt;
      &lt;input type="button" class="view" value="檢視3"&gt;
    &lt;/h2&gt;
  &lt;/div&gt;

  
  
  &lt;script src="all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<h4>方法一 – class 比較直覺、不會犯錯</h4>



<pre class="wp-block-code"><code>// all.js - 1

const list = document.querySelector('.box');
// console.log(list);
list.addEventListener('click',function(e){
  // console.log(e.target.nodeName);
  if (e.target.getAttribute('class') == 'view'){
    console.log(e.target.getAttribute('value'));

  }
});

</code></pre>



<h4>方法二</h4>



<pre class="wp-block-code"><code>// all.js - 2

const list = document.querySelector('.box');
// console.log(list);
list.addEventListener('click',function(e){
  // console.log(e.target.nodeName);
  if (e.target.nodeName == "INPUT"){
    console.log(e.target.getAttribute('value'));

  }
});
</code></pre>



<h4>方法三</h4>



<pre class="wp-block-code"><code>// all.js - 3

const list = document.querySelector('.box');
// console.log(list);
list.addEventListener('click',function(e){
  // console.log(e.target.nodeName);
  if (e.target.nodeName !== "INPUT"){
    return;
  }
  console.log(e.target.getAttribute('value'));

});
</code></pre>



<h3>data- 屬性妙用</h3>



<ul><li>data- 屬性取值，data-自訂名稱=”值”<ul><li>例如：data-num=”3″、data-content=”標題內容”</li></ul></li></ul>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;JS必修篇&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;h2 class="title" data-content="標題內容" data-num="3"&gt;標題內容&lt;/h2&gt;
  
  &lt;script src="all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// all.js

const title = document.querySelector('.title');
// console.log(title);

console.log(title.getAttribute("data-content"));
console.log(title.getAttribute("data-num"));

let data = title.getAttribute("data-content");

console.log(data);</code></pre>



<h3>HTML 結構設計</h3>



<h4>畫面實作</h4>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;JS必修篇&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;input type="text" class="txt" placeholder="請輸入待辦事項"&gt;
  &lt;input type="button" class="save" value="儲存待辦"&gt;
  &lt;ul class="list"&gt;
    &lt;li&gt;待辦事項一 &lt;input class="delete" type="button" value="刪除待辦"&gt;&lt;/li&gt;
    &lt;li&gt;待辦事項二 &lt;input class="delete" type="button" value="刪除待辦"&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;script src="all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<h3>資料初始化渲染</h3>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;JS必修篇&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;input type="text" class="txt" placeholder="請輸入待辦事項"&gt;
  &lt;input type="button" class="save" value="儲存待辦"&gt;
  &lt;ul class="list"&gt;
    
  &lt;/ul&gt;
  &lt;script src="all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// all.js - 1

let data = &#91;
  {
    "content": "待辦事項一"
  },
  {
    "content": "今天記得刷牙"
  }
]

let str = '';
data.forEach(function(item){
  str+=`
  &lt;li&gt;${item.content} &lt;input class="delete" type="button" value="刪除待辦"&gt;&lt;/li&gt;
  `
});
// console.log(str);
const list = document.querySelector(".list");
list.innerHTML = str;</code></pre>



<pre class="wp-block-code"><code>// all.js - 2

let data = &#91;
  {
    "content": "待辦事項一"
  },
  {
    "content": "今天記得刷牙"
  }
]

function renderData(){
  let str = '';
  data.forEach(function(item){
    str+=`
    &lt;li&gt;${item.content} &lt;input class="delete" type="button" value="刪除待辦"&gt;&lt;/li&gt;
    `
  });
  // console.log(str);
  const list = document.querySelector(".list");
  list.innerHTML = str;
}

renderData();
</code></pre>



<h3 class="has-background" style="background-color:#ff6663">待辦新增功能</h3>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;JS必修篇&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;input type="text" class="txt" placeholder="請輸入待辦事項"&gt;
  &lt;input type="button" class="save" value="儲存待辦"&gt;
  &lt;ul class="list"&gt;
    
  &lt;/ul&gt;
  &lt;script src="all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// all.js

const txt = document.querySelector('.txt');
const save = document.querySelector('.save');
// console.log(txt);
// console.log(save);

let data = &#91;];

function renderData(){
  let str = '';
  data.forEach(function(item){
    str+=`
    &lt;li&gt;${item.content} &lt;input class="delete" type="button" value="刪除待辦"&gt;&lt;/li&gt;
    `
  });
  // console.log(str);
  const list = document.querySelector(".list");
  list.innerHTML = str;
}

save.addEventListener('click',function(e){
  // console.log('你點擊到了');

  if(txt.value==""){
    alert("請輸入內容");
    return;
  }
  // {
  //   "content": "待辦事項一"
  // }
  let obj = {};
  obj.content = txt.value;
  // console.log(txt.value);
  // console.log(obj);
  data.push(obj);
  renderData();
});

// renderData();</code></pre>



<h3>待辦刪除功能-前置解說</h3>



<ul><li>splice 刪除指定資料</li><li>forEach 會用到 index 索引值</li></ul>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;JS必修篇&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;input type="text" class="txt" placeholder="請輸入待辦事項"&gt;
  &lt;input type="button" class="save" value="儲存待辦"&gt;
  &lt;ul class="list"&gt;
    
  &lt;/ul&gt;
  &lt;script src="all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// all.js

const txt = document.querySelector('.txt');
const save = document.querySelector('.save');
// console.log(txt);
// console.log(save);

let data = &#91;];

function renderData(){
  let str = '';
  data.forEach(function(item,index){
    str+=`
    &lt;li&gt;${item.content} &lt;input class="delete" type="button" data-num="${index}" value="刪除待辦"&gt;&lt;/li&gt;
    `
  });
  // console.log(str);
  const list = document.querySelector(".list");
  list.innerHTML = str;
}

save.addEventListener('click',function(e){
  // console.log('你點擊到了');

  if(txt.value==""){
    alert("請輸入內容");
    return;
  }
  // {
  //   "content": "待辦事項一"
  // }
  let obj = {};
  obj.content = txt.value;
  // console.log(txt.value);
  // console.log(obj);
  data.push(obj);
  renderData();
});

// renderData();</code></pre>



<h3 class="has-background" style="background-color:#ff6663">待辦刪除功能</h3>



<ul><li><a href="https://codepen.io/hexschool/pen/OJWRqrN" target="_blank" rel="noreferrer noopener">待辦功能刪除範例程式碼</a></li></ul>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;JS必修篇&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;input type="text" class="txt" placeholder="請輸入待辦事項"&gt;
  &lt;input type="button" class="save" value="儲存待辦"&gt;
  &lt;ul class="list"&gt;
    
  &lt;/ul&gt;
  &lt;script src="all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// all.js

const txt = document.querySelector('.txt');
const save = document.querySelector('.save');
const list = document.querySelector('.list');
// console.log(txt);
// console.log(save);
// console.log(list);

let data = &#91;];

function renderData(){
  let str = '';
  data.forEach(function(item,index){
    str+=`
    &lt;li&gt;${item.content} &lt;input class="delete" type="button" data-num="${index}" value="刪除待辦"&gt;&lt;/li&gt;
    `
  });
  // console.log(str);
  const list = document.querySelector(".list");
  list.innerHTML = str;
}

// 新增待辦功能
save.addEventListener('click',function(e){
  // console.log('你點擊到了');

  if(txt.value==""){
    alert("請輸入內容");
    return;
  }
  // {
  //   "content": "待辦事項一"
  // }
  let obj = {};
  obj.content = txt.value;
  // console.log(txt.value);
  // console.log(obj);
  data.push(obj);
  renderData();
});

// 刪除待辦功能
list.addEventListener('click',function(e){
  // console.log(e.target.nodeName);
  if(e.target.getAttribute('class',"delete")!=="delete"){
    alert('你目前不是點擊到按鈕');
    return;
  }
  // alert('你目前有確實點到刪除按鈕');
  let num = e.target.getAttribute("data-num");
  console.log(num);
  data.splice(num,1);
  renderData();
});

// renderData();</code></pre>



<h3>todolist 待辦事項小節測驗</h3>



<h2>陣列資料操作</h2>



<h3>陣列操作 – map</h3>



<h4>JS array map</h4>



<ol><li>能將原始陣列運算後，重新組合回傳一個新陣列</li><li>不會影響到原陣列</li></ol>



<pre class="wp-block-code"><code>// all.js - 1

// 第一個範例
const arr = &#91;1,5,10];
const newArr = arr.map(function(item){
  return item*item;
});

console.log(newArr);
console.log(arr);

// 第二個範例
const data = &#91;1,8,13,20];
const newData = data.map(function(item){
  return item&gt;10;
});

console.log(data);
console.log(newData);</code></pre>



<pre class="wp-block-code"><code>// Google Console - 1
   (3) &#91;1, 25, 100]
   (3) &#91;1, 5, 10]
   (4) &#91;1, 8, 13, 20]
   (4) &#91;false, false, true, true]
&gt;</code></pre>



<pre class="wp-block-code"><code>// all.js -2

// 第三個範例
const data = &#91;1,8,13,20];
const newData = data.map(function(item){
  let obj = {};
  obj.checkNum = item &gt; 10;
  return obj;
});

console.log(data);
console.log(newData);

// {
//   checkNum: true;
// }</code></pre>



<pre class="wp-block-code"><code>// Google Console - 2
   (4) &#91;1, 8, 13, 20]
   (4) &#91;{...},{...},{...},{...}]
&gt;</code></pre>



<h3>陣列操作 – map 補充</h3>



<ul><li>map 觀念補充</li><li>map、forEach 差異</li></ul>



<pre class="wp-block-code"><code>// all.js - 1

// map 觀念補充、map,forEach 差異

const arr = &#91;1,5,10];
const newArr = arr.map(function(item){
  // return item*item;
});

console.log(newArr);
console.log(arr);</code></pre>



<pre class="wp-block-code"><code>// Google Console - 1
   (3) &#91;undefined, undefined, undefined]
   (3) &#91;1, 5, 10]
&gt;</code></pre>



<pre class="wp-block-code"><code>// all.js - 2

// map 觀念補充、map,forEach 差異

const arr = &#91;1,5,10];
const newArr = arr.forEach(function(item){
  return item*item;
});

console.log(newArr);
console.log(arr);</code></pre>



<pre class="wp-block-code"><code>// Google Console - 2
   undefined
   (3) &#91;1, 5, 10]
&gt;</code></pre>



<p>forEach 並沒有回傳一個新陣列的特性、也沒辦法用 return 回傳值。forEach 使用時機，裡面資料都跑一次，加總、額外處理、空陣列組出要的資料。</p>



<pre class="wp-block-code"><code>// all.js - 3

// map 觀念補充、map,forEach 差異

const arr = &#91;1,5,10];
let total = 0;
arr.forEach(function(item){
  total+=item;
});

console.log(arr);
console.log(total);</code></pre>



<pre class="wp-block-code"><code>// Google Console - 3
   (3) &#91;1, 5, 10]
   16
&gt;</code></pre>



<p>map 使用情境，新變數要拿原始變數回傳一個陣列的時候，處理陣列、回傳一個組合好的陣列，map 就比較合適。</p>



<ul><li>有無 return，forEach 沒有 return、map 有 return</li></ul>



<h3 class="has-background" style="background-color:#ff6663">陣列操作 – filter 資料篩選</h3>



<h4>JS array filter 篩選</h4>



<ol><li>篩選出符合條件的內容</li><li>不會影響到原陣列</li></ol>



<p>常用於比價、下拉選擇市區、有誰有及格。</p>



<pre class="wp-block-code"><code>// all.js - 1

// JS array filter 篩選
// 1.篩選出符合條件的內容，組合後回傳新陣列。
// 2.不會影響到原陣列
// 常用於比價、下拉選擇市區

const arr = &#91;1,5,10];
const newArr = arr.filter(function(item){
  return item &gt;= 5;
});

console.log(newArr);</code></pre>



<pre class="wp-block-code"><code>// Google Console - 1
   (2) &#91;5, 10]
&gt;</code></pre>



<pre class="wp-block-code"><code>// all.js - 2

// JS array filter 篩選
// 1.篩選出符合條件的內容，組合後回傳新陣列。
// 2.不會影響到原陣列
// 常用於比價、下拉選擇市區、有誰有及格

// 分數
const scoreData = &#91;
  {
    name: "小明",
    score: 88
  },
  {
    name: "小英",
    score: 62
  },
  {
    name: "小花",
    score: 53
  }
];

const filterScore = scoreData.filter(function(item){
  return item.score &gt;= 60;
});

console.log(filterScore);</code></pre>



<pre class="wp-block-code"><code>// Google Console - 2
   (2) &#91;{...},{...}]
&gt;</code></pre>



<h3>陣列操作 – find 尋找頭一筆資料</h3>



<pre class="wp-block-code"><code>// all.js

// JS array find 尋找頭一筆資料

const arr = &#91;1,2,3,5,10,20,30,40];

const newArr = arr.find(function(item){
  console.log(item);
  return item &gt;= 5;
});

console.log(newArr);

// 分數
const scoreData = &#91;
  {
    name: "小明",
    score: 88
  },
  {
    name: "小英",
    score: 62
  },
  {
    name: "小花",
    score: 53
  }
];

const filterScore = scoreData.find(function(item){
  return item.score &gt;= 60;
});

console.log(filterScore);</code></pre>



<pre class="wp-block-code"><code>// Google Console
   1
   2
   3
   5
   5
   {name: '小明', score: 88}
&gt;</code></pre>



<h3>陣列操作 – findindex 尋找資料索引</h3>



<pre class="wp-block-code"><code>// all.js

// find 值提取出來
// findIndex 索引 編號

const colors = &#91;'red','blue','black'];

const blueIndex = colors.findIndex(function(item){
  return item == "blue";
});

console.log(blueIndex);

// 訂單編號

const orders = &#91;
  {
    name: '小廖',
    orderId: '12384955'
  },
  {
    name: '小華',
    orderId: '12384945'
  },
  {
    name: '小美',
    orderId: '12314955'
  },
];

const huaId = orders.findIndex(function(item){
  return item.orderId == "12384945";
});

console.log(huaId);
console.log(`這個訂單編號是${orders&#91;huaId].name}`);</code></pre>



<pre class="wp-block-code"><code>// Google Console

   1
   1
   這個訂單編號是小華
&gt;</code></pre>



<h3>陣列資料操作小節測驗</h3>



<h2>箭頭函式</h2>



<h3>函式陳述式與函式表達式差異</h3>



<pre class="wp-block-code"><code>// all.js - 1

// 箭頭函式

// 函式陳述式
function numA (x){
  return x * x;
}

// 函式表達式
const numB = function(x){
  return x * x;
}

const numC = (x) =&gt; {
  return x * x;
}</code></pre>



<pre class="wp-block-code"><code>// Google Console - 1
&gt;  numA(3)
&lt;  9
&gt;  numB(3)
&lt;  9
&gt;  numC(3)
&lt;  9
&gt;</code></pre>



<pre class="wp-block-code"><code>// Google Console - 1
&gt;  numB
&lt;  f (x){
     return x * x;
   }
&gt;  numB(3)
&lt;  9
&gt;</code></pre>



<p>函式陳述式有提升的特性，函式表達式沒有提升的特性。</p>



<pre class="wp-block-code"><code>// all.js - 2

console.log(numA(3));
// 函式陳述式
function numA (x){
  return x * x;
}
console.log(numA(3));

</code></pre>



<pre class="wp-block-code"><code>// Google Console - 2
   9
   9
&gt;</code></pre>



<pre class="wp-block-code"><code>// all.js - 3

console.log(numB(3));
// 函式表達式
const numB = function(x){
  return x * x;
}
// console.log(numB(3));

</code></pre>



<pre class="wp-block-code"><code>// Google Console - 3
x  Uncaught ReferenceError: Cannot access 'numB' before initialization at xxx
&gt;</code></pre>



<h3>箭頭函式基本寫法</h3>



<pre class="wp-block-code"><code>// all.js

// 函式表達式
const numA = function(x){
  return x * x;
}

console.log(numA(3));

// 箭頭函式
const numB = (x) =&gt;{
  return x * x * x;
}

console.log(numB(4));</code></pre>



<pre class="wp-block-code"><code>// Google Console
   9
   64
&gt;</code></pre>



<h3>箭頭函式再縮寫</h3>



<h4>縮寫寫法</h4>



<ol><li>如果函式搭配到 return</li><li>如果只有一個參數，可以省略括號</li><li>沒有參數，還是要有空括號</li></ol>



<pre class="wp-block-code"><code>// all.js

// 箭頭函式
// 縮寫寫法
// 1.如果函式搭配到 return
// 2.如果只有一個參數，可以省略括號
// 3.沒有參數，還是要有空括號

const numA = (x) =&gt; {
  return `數字相乘 ${x*x}`;
};
console.log(numA(3));

const numB = (x) =&gt; `數字相乘 ${x*x}`;
console.log(numB(4));

const numC = x =&gt; `數字相乘 ${x*x}`;
console.log(numC(5));

const num = () =&gt; `數字相乘 ${9}`;
console.log(num());</code></pre>



<pre class="wp-block-code"><code>// Google Console
   數字相乘 9
   數字相乘 16
   數字相乘 25
   數字相乘 9
&gt;</code></pre>



<h3>陣列 map 搭配箭頭函式寫法</h3>



<pre class="wp-block-code"><code>// all.js - 1

// 陣列操作 map、filter

// const data = &#91;1,8,13,20];

// const newData = data.map(function(item){
//   return item + 2;
// });

// console.log(newData);

const data = &#91;1,8,13,20];

const newData = data.map(item =&gt; item + 3);

console.log(newData);</code></pre>



<pre class="wp-block-code"><code>// Google Console - 1
   (4) &#91;4, 11, 16, 23]
&gt;</code></pre>



<p>單行可以使用箭頭函式再縮寫，多行還是建議需要加上大括號。</p>



<h3>箭頭函式小節測驗</h3>



<h3 class="has-background" style="background-color:#ff6663">第六週總複習</h3>



<h2 class="has-background" style="background-color:#ff6663">最終關卡 – todolist 待辦事項 (未製作)</h2>



<h2>JS – 彩蛋課程 – NPM 管理</h2>



<h3>NPM 介紹</h3>



<p>NPM 套件管理工具。</p>



<h3>Node.js、NPM 環境安裝</h3>



<h4>資源連結</h4>



<ul><li><a href="https://www.npmjs.com/" target="_blank" rel="noreferrer noopener">NPM 官網</a></li><li><a href="https://nodejs.org/en/" target="_blank" rel="noreferrer noopener">Node.js 官網</a></li></ul>



<p>Node.js 安裝選擇 LTS(長期支援)版本安裝，比較穩定。</p>



<h3>VSCode 終端機教學</h3>



<h4>版本檢查</h4>



<ol><li>檢查 Node.js 版本： node -v</li><li>檢查 NPM 版本： npm -v</li></ol>



<h4>開啟資料夾方式</h4>



<ul><li>直接拖曳資料夾到 VSCode</li><li>從 VSCode 選單 File → Open Folder</li></ul>



<h4>開啟終端機</h4>



<ul><li>從 VSCode 選單 View → Terminal 開啟終端機面板</li><li>終端機 – 輸入指令</li><li>node -v</li><li>npm-v</li><li>都有回報版本號就有安裝成功</li></ul>



<h3>npm init – 專案環境初始化</h3>



<h4>指令</h4>



<ul><li>專案初始化：npm init</li><li>專案初始化，並提供預設值：npm init -y</li></ul>



<h4>開啟 Terminal 介面</h4>



<ul><li>View → Terminal、或者快捷鍵 Ctrl + `</li><li>確認是否在專案位置</li><li>輸入指令 npm init</li><li>完成設定後會產生 package.json</li></ul>



<p>各種套件，都會同步記錄在 package.json。</p>



<h3>npm install – 環境安裝教學</h3>



<ul><li>NPM 官網</li><li>安裝模組指令：npm install 模組名稱</li></ul>



<p>備註：若您是 Mac 電腦，有時可能會因為權限不夠而出現紅字 err 出錯，此時請嘗試將指令改為：sudo npm install 模組名稱</p>



<ul><li>bootstrap – npm i bootstrap 或者 npm install bootstrap</li><li>vue – npm i vue 或者 npm install vue</li></ul>



<h3>npm 全域安裝 -g</h3>



<p>NPM 安裝範圍。</p>



<ul><li>package.json 檔案裡面的 dependencies 的套件，可以使用 npm install 指令安裝</li><li>node_modules 不會進到 git 版本控制，通常來說只放開發的 Code</li><li>package.json 裡面的 dependencies 可以安裝自己想要安裝的套件版本號</li><li>全域空間 – npm install jquery -g<ul><li>建議還是先把套案安裝在專案資料夾</li><li>可能會運用在 jest, mocha, express…等</li><li>Mac 的話會安裝在 /usr/local/lib/node_modules</li></ul></li></ul>



<h4>練習</h4>



<ul><li>把專案資料夾裡面 node_modules 刪除、然後使用 npm install 安裝回來</li><li>可以練習使用全域空間 npm install 模組名稱 -g</li></ul>



<h3>–save、–save-dev 指令差異</h3>



<ul><li>production (上線)依賴模組：npm install 模組名稱 –save</li><li>development (開發)依賴模組：npm install 模組名稱 –save-dev</li></ul>



<h4>Webpack套件</h4>



<ul><li><a rel="noreferrer noopener" href="https://webpack.js.org/" target="_blank">Webpack 官網</a></li><li>安裝套件指令 npm install webpack –save-dev</li></ul>



<h4>練習</h4>



<ul><li>npm install bootstrap –save 套件安裝是在 dependencies (上線階段)</li><li>npm install bootstrap –save-dev 套件安裝是在 devDependencies (開發階段)</li><li>npm install bootstrap 套件安裝是在 dependencies (上線階段)</li></ul>



<h3>常見指令補充</h3>



<ul><li>更新套件：npm update 模組名稱</li><li>移除套件：npm uninstall 模組名稱</li></ul>



<h4>舉例</h4>



<ul><li>npm uninstall jquery</li><li>npm uninstall webpack</li><li>npm uninstall vue</li><li>npm uninstall bootstrap</li><li>npm uninstall bootstrap -g</li><li>npm update vue</li></ul>



<p>也可以從 package.json 修改套件的名稱、版本號，再使用 npm install 安裝套件。</p>



<h2 class="has-background" style="background-color:#ff6663">webpack 壓縮打包工具管理</h2>



<h3>為什麼要學 webpack?</h3>



<ul><li><a href="https://webpack.js.org/" target="_blank" rel="noreferrer noopener">webpack 官網</a></li></ul>



<p>前端壓縮打包工具。</p>



<h4>舉例</h4>



<ul><li>vue</li><li>react</li><li>前端應用</li><li>spa (單頁面應用)</li></ul>



<h3>webpack 環境建立</h3>



<ul><li>安裝 Webpack 套件指令：npm install webpack webpack-cli –save-dev</li></ul>



<h4>環境建立步驟</h4>



<ul><li>建立一個專案資料夾 – webpack-demo</li><li>開啟終端機</li><li>專案環境初始化 – npm init、快速初始化 npm init -y</li><li>webpack 套件指令：npm install webpack webpack-cli –save-dev，這裡會安裝在開發環境</li><li>在 package.json 的 devDependencies 裡面會產生webpack、webpack-cli 名稱、版本號就代表 Webpack 環境建立好了</li></ul>



<h4>Webpack Guides</h4>



<ul><li><a href="https://webpack.js.org/guides/getting-started/#basic-setup" target="_blank" rel="noreferrer noopener">Basic Setup</a></li></ul>



<h3 class="has-background" style="background-color:#ff6663">進入點(entry)、輸出點(output) 觀念建立</h3>



<h4>Download</h4>



<ul><li><a href="https://cdn.fs.teachablecdn.com/AQBQsgbuQoWCRWSPxGnm" target="_blank" rel="noreferrer noopener">webpack-entry.zip</a></li></ul>



<h4>Webpack Concepts</h4>



<ul><li><a href="https://webpack.js.org/concepts/#entry" target="_blank" rel="noreferrer noopener">Entry</a></li><li><a href="https://webpack.js.org/concepts/#output" target="_blank" rel="noreferrer noopener">Output</a></li></ul>



<h4>Webpack 官網圖片講解</h4>



<ul><li>MODULES WITH DEPENDENCIES→bundle your scripts→STATIC ASSETS</li></ul>



<ul><li>進入點 – MODULES WITH DEPENDENCIES</li><li>輸出點 – STATIC ASSETS</li></ul>



<h4>操作步驟</h4>



<ul><li>建立 src 資料夾 – 這個就是進入點、然後在裡面建立 index.js 檔案</li><li>建立 dist 資料夾 – 這個就是輸出點</li><li>在 package.json 新增 “build”: “webpack” 名稱、值</li><li>在終端機輸入指令：npm run build，build 叫做編譯，<br>在 dist 資料夾就會新增一個 main.js 檔案</li></ul>



<pre class="wp-block-code"><code>// src/index.js

let a = 1;
let b = 2;
console.log("hello");
function hello(a,b){
  console.log(a+b);
}
hello(1,2);</code></pre>



<pre class="wp-block-code"><code>// package.json - 新增 "build": "webpack"

{
  "name": "webpack-demo",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" &amp;&amp; exit 1",
    "build": "webpack"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "webpack": "^5.65.0",
    "webpack-cli": "^4.9.1"
  }
}
</code></pre>



<pre class="wp-block-code"><code>// dist/main.js

console.log("hello"),console.log(3);</code></pre>



<h3 class="has-background" style="background-color:#ff6663">webpack.config.js 環境建立</h3>



<ul><li><a href="https://cdn.fs.teachablecdn.com/K7qUetNLTxvbXG6KduwG" target="_blank" rel="noreferrer noopener">webpack-config.zip</a></li></ul>



<p>客製化進入點、輸出點資料夾名稱、以及裡面的檔案。</p>



<ul><li><a rel="noreferrer noopener" href="https://webpack.js.org/concepts/#entry" target="_blank">Webpack Concepts Entry</a></li><li><a href="https://webpack.js.org/concepts/#output" target="_blank" rel="noreferrer noopener">Webpack Concepts Output</a></li></ul>



<h4>操作步驟</h4>



<ul><li>新增 webpack.config.js 檔案</li><li>客製化進入點路徑、輸出點檔案名稱</li><li>移除輸出點 main.js 檔案</li><li>開啟終端機執行指令：npm run build</li></ul>



<pre class="wp-block-code"><code>// webpack.config.js - 範例

const path = require('path');

module.exports = {
  entry: './path/to/my/entry/file.js',
  output: {
    path: path.resolve(__dirname, 'dist'),
    filename: 'my-first-webpack.bundle.js',
  },
};</code></pre>



<pre class="wp-block-code"><code>// webpack.config.js - 客製化

const path = require('path');

module.exports = {
  entry: './src/index.js',
  output: {
    path: path.resolve(__dirname, 'dist'),
    filename: 'bundle.js',
  },
};</code></pre>



<h4>講解</h4>



<ul><li>path.resolve(__dirname, ‘dist’)，可以使用 console.log 查看</li></ul>



<h3>NPM script 講解</h3>



<p>可以自訂、客製化指令。</p>



<h4>操作步驟講解</h4>



<ul><li>在根目錄上新增 hello.js 檔案</li><li>透過 package.json 的 “scripts” 的指令</li><li>在 “scripts” 新增 “hello”: “node hello.js”</li><li>打開終端機輸入指令：npm run hello</li></ul>



<pre class="wp-block-code"><code>// hello.js

console.log("hello1");
console.log("hello2");
console.log("hello3");</code></pre>



<pre class="wp-block-code"><code>// package.json

{
  "name": "webpack-demo",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" &amp;&amp; exit 1",
    "hello": "node hello.js",
    "build": "webpack"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "webpack": "^5.65.0",
    "webpack-cli": "^4.9.1"
  }
}
</code></pre>



<h3>開發、上線模式 mode 切換</h3>



<ul><li><a href="https://cdn.fs.teachablecdn.com/oBB2rUUORAGMUk9NDxm7" target="_blank" rel="noreferrer noopener">webpack-mode.zip</a></li></ul>



<p>終端機執行指令npm run build”，出現的訊息 “mode” option has not been set、”mode” option to ‘development’ or ‘production’ 該如何調整、差異在哪裡。</p>



<h4>操作步驟</h4>



<ul><li>在 package.json 把原本 “build”: “webpack” 改寫成開發模式 “dev”: “webpack –mode development”</li><li>在 package.json 新增一個上線模式 “deploy”: “webpack –mode production”</li><li>最後的結果會影響到 dist/bundle.js 檔案，他的狀況會有些差異</li></ul>



<pre class="wp-block-code"><code>// package.json

{
  "name": "webpack-demo",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" &amp;&amp; exit 1",
    "hello": "node hello.js",
    "dev": "webpack --mode development",
    "deploy": "webpack --mode production"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "webpack": "^5.65.0",
    "webpack-cli": "^4.9.1"
  }
}
</code></pre>



<pre class="wp-block-code"><code>// dist/bundle.js - 開發模式

/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() =&gt; { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() =&gt; {

eval("let a = 1;\r\nlet b = 2;\r\nconsole.log(\"hello\");\r\nfunction hello(a,b){\r\n  console.log(a+b);\r\n}\r\nhello(1,2);\n\n//# sourceURL=webpack://webpack-demo/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__&#91;"./src/index.js"]();
/******/ 	
/******/ })()
;</code></pre>



<pre class="wp-block-code"><code>// dits/bundle.js - 上線模式

console.log("hello"),console.log(3);</code></pre>



<p>開發模式產生的 bundle.js 幫助除錯、狀況條列，通常開發的時候都會用開發模式。</p>



<p>上線模式產生的 bundle.js 比較精簡、把程式碼壓縮成一行、做各種優化。</p>



<h4>第二種寫法 (比較少寫在這裡)</h4>



<ul><li>在 webpack.config.js 寫上 mode: ‘production’</li></ul>



<pre class="wp-block-code"><code>// webpack.config.js

const path = require('path');

module.exports = {
  mode: 'production',
  entry: './src/index.js',
  output: {
    path: path.resolve(__dirname, 'dist'),
    filename: 'bundle.js',
  },
};</code></pre>



<p>比較少寫在 webpack.config.js 原因是通常會透過 package.json 用下指令的方式去做開發。</p>



<h3 class="has-background" style="background-color:#ff6663">export、import 語法教學</h3>



<ul><li>JavaScript 模組化 –&nbsp;<a rel="noreferrer noopener" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Modules" target="_blank">JavaScript modules 模塊</a><ul><li>import</li><li>export</li></ul></li><li>JS 模組化又稱作 ES Module</li></ul>



<figure class="wp-block-image size-full"><img width="603" height="438" src="/wordpress_blog/wp-content/uploads/2022/04/JS-模組化.png" alt="" class="wp-image-587"/><figcaption>JS &#8211; 模組化</figcaption></figure>



<h4>預設匯出 – 操作步驟</h4>



<ul><li>新增資料夾 ESModule 放 modules 做練習</li><li>使用 VSCode 開啟 ESModule 專案</li><li>新增一個 index.js 檔案</li><li>新增一個 export1.js 檔案</li><li>新增一個 index.html 檔案、並載入 &lt;script&gt; index.js、用 ESModule 要加上 type=”module” 這樣子 import export 語法才會生效</li></ul>



<pre class="wp-block-code"><code>// index.js - 1

import data from "./export1.js";

console.log(data);</code></pre>



<pre class="wp-block-code"><code>// export1.js - 1
export default 1;

// 預設匯出</code></pre>



<pre class="wp-block-code"><code>// index.html - 1

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Document&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  

  &lt;script src="index.js" type="module"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// Google Console - 1
   1
&gt;</code></pre>



<pre class="wp-block-code"><code>// index.js - 2

import data from "./export1.js";

console.log(data.a);</code></pre>



<pre class="wp-block-code"><code>// export1.js - 2

let a = 1;
let b = 2;
let c = a+b;

export default {
  a: 5,
  content: b
};

// 預設匯出 default export</code></pre>



<pre class="wp-block-code"><code>// Google Console - 2
   5
&gt;</code></pre>



<h4>其他常見做法 – 具名匯出</h4>



<ul><li>新增 export2.js 檔案</li><li>匯入 index.js 檔案</li><li>使用 * 匯入、代表全部都載入，通常不建議這樣使用，會不好除錯，使用 * 的時候要搭配 as 自訂名稱</li></ul>



<pre class="wp-block-code"><code>// export2.js - 1

// 具名匯出

export const c = 1;

export function add(x,y){
  return x+y;
}</code></pre>



<pre class="wp-block-code"><code>// index.js - 1

import data from "./export1.js";
import {c,add} from "./export2.js";
console.log(data.a);

console.log(c);
console.log(add(2,9));</code></pre>



<pre class="wp-block-code"><code>// Google Console - 1
   5
   1
   11
&gt;</code></pre>



<pre class="wp-block-code"><code>// index.js - 2

import data from "./export1.js";
import {add} from "./export2.js";
console.log(data.a);

// console.log(c);
console.log(add(2,9));</code></pre>



<pre class="wp-block-code"><code>// Google Console - 2
   5
   11
&gt;</code></pre>



<pre class="wp-block-code"><code>// index.js - 3

import data from "./export1.js";
import * as data2 from "./export2.js";
console.log(data.a);

// console.log(c);
console.log(data2.add(3,88));</code></pre>



<pre class="wp-block-code"><code>// Google Console - 3
   5
   91
&gt;</code></pre>



<h4>匯出做法</h4>



<ul><li>預設匯出</li><li>具名匯出</li></ul>



<p>依照專案團隊開發共同討論出共識要使用那種做法。</p>



<p>依老師來說會使用預設匯出的做法。</p>



<h4>補充做法(冷門)</h4>



<pre class="wp-block-code"><code>// export3.js

function a(){
  console.log(88);
}

a();</code></pre>



<pre class="wp-block-code"><code>// index.js

import "./export3.js"</code></pre>



<pre class="wp-block-code"><code>// Google Console
   88
&gt;</code></pre>



<h4>預設匯出、具名匯出混用</h4>



<pre class="wp-block-code"><code>// export2.js

// 具名匯出

export const c = 1;

export function add(x,y){
  return x+y;
}

export default 8;</code></pre>



<pre class="wp-block-code"><code>// index.js

import data from "./export1.js";
import total, {c,add} from "./export2.js";
console.log(data.a);

// console.log(c);
console.log(add(3,88));
console.log(total);

// import "./export3.js"</code></pre>



<pre class="wp-block-code"><code>// Google Console
   5
   91
   8
&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">webpack import 載入流程</h3>



<h4>Download</h4>



<ul><li><a href="https://cdn.fs.teachablecdn.com/fFV1N49cRc6qjZW9opCZ" target="_blank" rel="noreferrer noopener">webpack-esmodule.zip</a></li></ul>



<h4>操作步驟</h4>



<ul><li>新增一個 c.js 在 src 資料夾裡</li><li>在 src/index.js 匯入 c.js</li><li>使用終端機執行指令(從 package.json 的指令) npm run dev</li><li>如果要看編譯模式執行指令 npm run deploy</li></ul>



<pre class="wp-block-code"><code>// src/c.js

export default 333;</code></pre>



<pre class="wp-block-code"><code>// src/index.js

import c from './c.js';
let a = 1;
let b = 2;
console.log("hello");
function hello(a,b){
  console.log(a+b);
}
hello(1,2);
console.log(c);</code></pre>



<h3>加入 index.html 顯示 bundle.js 結果</h3>



<h4>Download</h4>



<ul><li><a rel="noreferrer noopener" href="https://cdn.fs.teachablecdn.com/Ud1OulECStCppEMymIWB" target="_blank">webpack-addindexhtml.zip</a></li><li><a rel="noreferrer noopener" href="https://webpack.js.org/loaders/css-loader/" target="_blank">Webpack Loaders CSS css-loader</a></li></ul>



<h4>操作講解</h4>



<ul><li>在 dist 資料夾裡新增 index.html</li><li>載入 &lt;script&gt; bundle.js</li><li>打開 dist/index.html 看 Google Console 有無資料顯示、正確載入 bundle.js</li></ul>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Document&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;標題&lt;/h1&gt;

  &lt;script src="./bundle.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">載入 CSS-loader 流程</h3>



<h4>Download</h4>



<ul><li><a rel="noreferrer noopener" href="https://cdn.fs.teachablecdn.com/lcfOSjGEQCK2BgC5jpRh" target="_blank">webpack-cssLoader.zip</a></li><li><a href="https://github.com/webpack-contrib/css-loader" target="_blank" rel="noreferrer noopener">CSS-Loader 文件</a></li></ul>



<h4>操作講解</h4>



<ul><li>安裝 css-loader 指令：npm install –save-dev css-loader</li><li>新增一個 css 檔案：style.css 放在 src 資料夾裡面</li><li>環境設定，在 webpack.config.js</li><li>在 index.js 匯入 import css from “./style.css”;</li><li>執行 npm run deploy</li></ul>



<pre class="wp-block-code"><code>// src/style.css

h1 {
  color: red;
}</code></pre>



<pre class="wp-block-code"><code>// webpack.config.js

const path = require('path');

module.exports = {
  entry: './src/index.js',
  output: {
    path: path.resolve(__dirname, 'dist'),
    filename: 'bundle.js',
  },
  module: {
    rules: &#91;
      {
        test: /\.css$/i,
        use: &#91;"style-loader", "css-loader"],
      },
    ],
  },
};</code></pre>



<pre class="wp-block-code"><code>// index.js

import c from './c.js';
import css from "./style.css";
let a = 1;
let b = 2;
console.log("hello");
function hello(a,b){
  console.log(a+b);
}
hello(1,2);
console.log(c);</code></pre>



<h4>出現錯誤</h4>



<ul><li>缺少 style-loader 套件安裝，npm install style-loader –save-dev</li><li>再執行 npm run deploy</li><li>打開 dist/index.html 看標題是否有變紅色</li></ul>



<h3>載入 Sass-loader 流程</h3>



<h4>Download</h4>



<ul><li><a rel="noreferrer noopener" href="https://cdn.fs.teachablecdn.com/h2zQRfVQvmclsDYrtKHA" target="_blank">webpack-scss.zip</a></li><li><a rel="noreferrer noopener" href="https://github.com/webpack-contrib/sass-loader" target="_blank">Sass-loader 文件</a></li></ul>



<p>Sass 是 SCSS 預處理器</p>



<h4>操作步驟</h4>



<ul><li>安裝 sass-loader、指令：npm install sass-loader sass webpack –save-dev，有安裝的可以不用再安裝、sass 或者 node-sass 這兩個都可以擇一即可，這裡選擇 node-sass 使用</li><li>進入點 src/index.js 依照文件範例去修改 import “./style.scss”;</li><li>把 src/style.css 改成 src/style.scss、然後把程式碼貼上、調整</li><li>webpack.config.js 調整成 sass-loader 文件上範例的程式碼</li><li>執行 npm run deploy</li><li>打開 dist/index.html 查看標題是否有正確載入變粉紅色</li></ul>



<pre class="wp-block-code"><code>// src/index.js

import c from './c.js';
import css from "./style.scss";
let a = 1;
let b = 2;
console.log("hello");
function hello(a,b){
  console.log(a+b);
}
hello(1,2);
console.log(c);</code></pre>



<pre class="wp-block-code"><code>// src/style.scss

$body-color: pink;

h1 {
  color: $body-color;
}</code></pre>



<pre class="wp-block-code"><code>// webpack.config.js

const path = require('path');

module.exports = {
  entry: './src/index.js',
  output: {
    path: path.resolve(__dirname, 'dist'),
    filename: 'bundle.js',
  },
  module: {
    rules: &#91;
      {
        test: /\.s&#91;ac]ss$/i,
        use: &#91;
          // Creates `style` nodes from JS strings
          "style-loader",
          // Translates CSS into CommonJS
          "css-loader",
          // Compiles Sass to CSS
          "sass-loader",
        ],
      },
    ],
  },
};</code></pre>



<h3 class="has-background" style="background-color:#ff6663">載入 webpack 測試伺服器</h3>



<p>即時更新、監聽。</p>



<h4>Download</h4>



<ul><li><a rel="noreferrer noopener" href="https://cdn.fs.teachablecdn.com/rlnVC0vRbqEJ6cnik0oQ" target="_blank">webpack-devServer.zip</a></li><li><a href="https://webpack.js.org/configuration/dev-server/" target="_blank" rel="noreferrer noopener">webpack 官網文件</a></li><li><a href="https://github.com/webpack/webpack-dev-server" target="_blank" rel="noreferrer noopener">webpack server GitHub 文件</a></li></ul>



<h4>更新說明</h4>



<p>由於 dev server 版本更新（v3 -&gt; v4）因此設定方式的寫法也有些差異</p>



<p>v3 版本寫法</p>



<pre class="wp-block-code"><code>devServer: {
    contentBase: path.join(__dirname, "dist"),
}</code></pre>



<p>v4 版本寫法</p>



<pre class="wp-block-code"><code>devServer: {
    static: {
      directory: path.join(__dirname, 'dist'),
    },
}</code></pre>



<h4>操作步驟</h4>



<ul><li>安裝模組指令：npm install webpack-dev-server –save-dev</li><li>使用上用 CLI，指令是：npx webpack serve，npx 可以不用只需要 webpack serve 這個指令就可以</li><li>NPM Scripts，”scripts” 指令要加上 “serve”: “webpack serve”</li><li>webpack.config.js 也需要做些資料夾設定，從 Webpack devServer 找到 webpack.config.js 範例程式碼複製貼上</li><li>把 package.json “scripts” 的 “dev” 改成 “dev”: “webpack serve –mode development”</li><li>執行 npm run dev</li><li>網址可以輸入 127.0.0.1:9000</li></ul>



<pre class="wp-block-code"><code>// package.json

{
  "name": "webpack-demo",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" &amp;&amp; exit 1",
    "hello": "node hello.js",
    "dev": "webpack --mode development",
    "deploy": "webpack --mode production",
    "serve": "webpack serve"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "css-loader": "^6.5.1",
    "node-sass": "^7.0.1",
    "sass-loader": "^12.4.0",
    "style-loader": "^3.3.1",
    "webpack": "^5.65.0",
    "webpack-cli": "^4.9.1",
    "webpack-dev-server": "^4.7.2"
  }
}
</code></pre>



<pre class="wp-block-code"><code>// webpack.config.js

const path = require('path');

module.exports = {
  entry: './src/index.js',
  output: {
    path: path.resolve(__dirname, 'dist'),
    filename: 'bundle.js',
  },
  module: {
    rules: &#91;
      {
        test: /\.s&#91;ac]ss$/i,
        use: &#91;
          // Creates `style` nodes from JS strings
          "style-loader",
          // Translates CSS into CommonJS
          "css-loader",
          // Compiles Sass to CSS
          "sass-loader",
        ],
      },
    ],
  },
  devServer: {
    static: {
      directory: path.join(__dirname, 'public'),
    },
    compress: true,
    port: 9000,
  },
};</code></pre>



<pre class="wp-block-code"><code>// package.json

{
  "name": "webpack-demo",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" &amp;&amp; exit 1",
    "hello": "node hello.js",
    "dev": "webpack serve --mode development",
    "deploy": "webpack --mode production",
    "serve": "webpack serve"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "css-loader": "^6.5.1",
    "node-sass": "^7.0.1",
    "sass-loader": "^12.4.0",
    "style-loader": "^3.3.1",
    "webpack": "^5.65.0",
    "webpack-cli": "^4.9.1",
    "webpack-dev-server": "^4.7.2"
  }
}
</code></pre>



<h4>出現錯誤</h4>



<ul><li>webpack.config.js 的 devServer ‘public’ 改成 ‘dist’</li><li>終止批次工作</li><li>重新執行 npm run dev</li></ul>



<pre class="wp-block-code"><code>// webpack.config.js

const path = require('path');

module.exports = {
  entry: './src/index.js',
  output: {
    path: path.resolve(__dirname, 'dist'),
    filename: 'bundle.js',
  },
  module: {
    rules: &#91;
      {
        test: /\.s&#91;ac]ss$/i,
        use: &#91;
          // Creates `style` nodes from JS strings
          "style-loader",
          // Translates CSS into CommonJS
          "css-loader",
          // Compiles Sass to CSS
          "sass-loader",
        ],
      },
    ],
  },
  devServer: {
    static: {
      directory: path.join(__dirname, 'dist'),
    },
    compress: true,
    port: 9000,
  },
};</code></pre>



<h4>自動開啟伺服器網頁</h4>



<ul><li>webpack.config.js 的 devServer 新增 open: true</li><li>終止批次工作 Ctrl + c</li><li>重新執行 npm run dev</li><li>在 style.scss 把 pink 改成 blue 看是否有即時更新</li></ul>



<pre class="wp-block-code"><code>// webpack.config.js

const path = require('path');

module.exports = {
  entry: './src/index.js',
  output: {
    path: path.resolve(__dirname, 'dist'),
    filename: 'bundle.js',
  },
  module: {
    rules: &#91;
      {
        test: /\.s&#91;ac]ss$/i,
        use: &#91;
          // Creates `style` nodes from JS strings
          "style-loader",
          // Translates CSS into CommonJS
          "css-loader",
          // Compiles Sass to CSS
          "sass-loader",
        ],
      },
    ],
  },
  devServer: {
    static: {
      directory: path.join(__dirname, 'dist'),
    },
    compress: true,
    port: 9000,
    open: true
  },
};</code></pre>



<h3 class="has-background" style="background-color:#ff6663">載入第三方套件 axios – 以 import 為例</h3>



<h4>Download</h4>



<ul><li><a rel="noreferrer noopener" href="https://cdn.fs.teachablecdn.com/dpwk4BOaSE2B5PdrKHoj" target="_blank">webpack-axios.zip</a></li><li><a rel="noreferrer noopener" href="https://www.npmjs.com/package/axios" target="_blank">axios 官網</a></li><li><a href="https://hexschool.github.io/ajaxHomework/data.json" target="_blank" rel="noreferrer noopener">練習用的 json 連結</a></li></ul>



<h4>操作步驟</h4>



<ul><li>安裝 axios 套件：npm install axios –save</li><li>在進入點 src/index.js 寫 import axios from “axios”;，會從 node_modules 找、看有沒有載入的檔案</li><li>撰寫 axios get</li><li>執行 npm run dev 看是否有載入成功</li></ul>



<pre class="wp-block-code"><code>// src/index.js

import c from './c.js';
import css from "./style.scss";
import axios from "axios";
axios.get("https://hexschool.github.io/ajaxHomework/data.json")
.then(function(response){
  console.log(response);
});
let a = 1;
let b = 2;
console.log("hello");
function hello(a,b){
  console.log(a+b);
}
hello(1,2);
console.log(c);</code></pre>



<h2>JavaScript 總複習題</h2>



<h3 class="has-background" style="background-color:#ff6663">第七週總複習</h3>



<h3>JS 百題斬 (未練習)</h3>



<h2>JavaScript 加碼直播 (未觀看)</h2>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Bootstrap 5 網頁切版整合術(2)</title>
		<link>/wordpress_blog/bs5-weblayout-2/</link>
		
		<dc:creator><![CDATA[gee.hsu]]></dc:creator>
		<pubDate>Mon, 28 Mar 2022 07:15:00 +0000</pubDate>
				<category><![CDATA[六角學院]]></category>
		<guid isPermaLink="false">/wordpress_blog/?p=401</guid>

					<description><![CDATA[課程學習：六角學院 CH9 – 使用 Bootstrap 完成  [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p>課程學習：<a rel="noreferrer noopener" href="https://courses.hexschool.com/p/bootstrap-5" target="_blank">六角學院</a></p>



<h2>CH9 – 使用 Bootstrap 完成 Blog 版型</h2>



<h3>Blog 版型 – 簡介</h3>



<pre class="wp-block-code"><code>// index.html - Blog 版型 - 簡介

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Blog Live&lt;/title&gt;
  &lt;!-- CSS only --&gt;
  &lt;link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous"&gt;
  &lt;style&gt;
    :root {
      --bs-font-sans-serif: system-ui,-apple-system,'Microsoft JhengHei',微軟正黑體,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans","Liberation Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  這裡是一段文字
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<ul><li><a href="https://getbootstrap.com/docs/5.1/examples/blog/" target="_blank" rel="noreferrer noopener">參考 Bootstrap examples Blog 版型</a></li></ul>



<h3>Blog 版型 – 導覽列</h3>



<pre class="wp-block-code"><code>// index.html - Blog 版型 - 導覽列

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Blog Live&lt;/title&gt;
  &lt;!-- CSS only --&gt;
  &lt;link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous"&gt;
  &lt;style&gt;
    :root {
      --bs-font-sans-serif: system-ui,-apple-system,'Microsoft JhengHei',微軟正黑體,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans","Liberation Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;div class="container"&gt;
    &lt;header class="py-3 text-center border-bottom"&gt;
      &lt;a href="#" class="h2 link-dark text-decoration-none"&gt;Gee Hsu 的 Blog&lt;/a&gt;
    &lt;/header&gt;

    &lt;div class="overflow-auto py-1"&gt;
      &lt;nav class="nav justify-content-between flex-nowrap text-nowrap"&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;HTML&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;CSS&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;jQuery&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;JavaScript&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;RWD&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;Bootstrap&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;Vue&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;Git&amp;GitHub&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;NodeJs&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;Adobe XD&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;Sass&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;VSCode&lt;/a&gt;
      &lt;/nav&gt;
    &lt;/div&gt;
  &lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;</code></pre>



<p>垂直圈選：<br>Mac: option + 左鍵<br>Windows: 滑鼠中鍵</p>



<h3>Blog 版型 – 首圖背景</h3>



<pre class="wp-block-code"><code>// index.html - Blog 版型 - 首圖背景

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Blog Live&lt;/title&gt;
  &lt;!-- CSS only --&gt;
  &lt;link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous"&gt;
  &lt;style&gt;
    :root {
      --bs-font-sans-serif: system-ui,-apple-system,'Microsoft JhengHei',微軟正黑體,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans","Liberation Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
    }
    .bg-cover {
      background-position: center center;
      background-size: cover;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;div class="container"&gt;
    &lt;header class="py-3 text-center border-bottom"&gt;
      &lt;a href="#" class="h2 link-dark text-decoration-none"&gt;Gee Hsu 的 Blog&lt;/a&gt;
    &lt;/header&gt;

    &lt;!-- Blog 版型 - 導覽列 start --&gt;
    &lt;div class="overflow-auto py-1"&gt;
      &lt;nav class="nav justify-content-between flex-nowrap text-nowrap"&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;HTML&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;CSS&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;jQuery&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;JavaScript&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;RWD&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;Bootstrap&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;Vue&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;Git&amp;GitHub&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;NodeJs&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;Adobe XD&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;Sass&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;VSCode&lt;/a&gt;
      &lt;/nav&gt;
    &lt;/div&gt;

    &lt;!-- Blog 版型 - 導覽列 end --&gt;

    &lt;!-- Blog 版型 - 首圖背景 start --&gt;
    &lt;div class="p-4 p-md-5 text-white rounded-3 bg-cover" style="background-image: url(https://images.unsplash.com/photo-1545641203-7d072a14e3b2?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1033&amp;q=80);"&gt;
      &lt;div class="col-md-6"&gt;
        &lt;h1 class="display-4 fst-italic"&gt;雨水經由高山地形匯流成溪河&lt;/h1&gt;
        &lt;p class="lead my-3"&gt;一個河流需要時間的積累才能形成，知識的累積也是從少到多。&lt;/p&gt;
        &lt;p class="lead mb-0"&gt;&lt;a class="text-white" href="#"&gt;繼續閱讀&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;!-- Blog 版型 - 首圖背景 end --&gt;

  &lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;</code></pre>



<ul><li><a href="https://unsplash.com/" target="_blank" rel="noreferrer noopener">Unsplash</a></li></ul>



<h3 class="has-background" style="background-color:#ff6663">Blog 版型 – 水平卡片排版技巧</h3>



<p>這個地方算是這個網站配置最為複雜。</p>



<pre class="wp-block-code"><code>// index.html - Blog 版型 - 水平卡片排版技巧

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Blog Live&lt;/title&gt;
  &lt;!-- CSS only --&gt;
  &lt;link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous"&gt;
  &lt;style&gt;
    :root {
      --bs-font-sans-serif: system-ui,-apple-system,'Microsoft JhengHei',微軟正黑體,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans","Liberation Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
    }
    .bg-cover {
      background-position: center center;
      background-size: cover;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;div class="container"&gt;
    &lt;header class="py-3 text-center border-bottom"&gt;
      &lt;a href="#" class="h2 link-dark text-decoration-none"&gt;Gee Hsu 的 Blog&lt;/a&gt;
    &lt;/header&gt;

    &lt;!-- Blog 版型 - 導覽列 start --&gt;
    &lt;div class="overflow-auto py-1"&gt;
      &lt;nav class="nav justify-content-between flex-nowrap text-nowrap"&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;HTML&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;CSS&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;jQuery&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;JavaScript&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;RWD&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;Bootstrap&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;Vue&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;Git&amp;GitHub&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;NodeJs&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;Adobe XD&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;Sass&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;VSCode&lt;/a&gt;
      &lt;/nav&gt;
    &lt;/div&gt;

    &lt;!-- Blog 版型 - 導覽列 end --&gt;

    &lt;!-- Blog 版型 - 首圖背景 start --&gt;
    &lt;div class="p-4 p-md-5 mb-4 text-white rounded-3 bg-cover" style="background-image: url(https://images.unsplash.com/photo-1545641203-7d072a14e3b2?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1033&amp;q=80);"&gt;
      &lt;div class="col-md-6"&gt;
        &lt;h1 class="display-4 fst-italic"&gt;雨水經由高山地形匯流成溪河&lt;/h1&gt;
        &lt;p class="lead my-3"&gt;一個河流需要時間的積累才能形成，知識的累積也是從少到多。&lt;/p&gt;
        &lt;p class="lead mb-0"&gt;&lt;a class="text-white" href="#"&gt;繼續閱讀&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;!-- Blog 版型 - 首圖背景 end --&gt;

    &lt;!-- Blog 版型 - 水平卡片排版技巧 start --&gt;
    &lt;div class="row row-cols-1 row-cols-lg-2"&gt;
      &lt;div class="col"&gt;
        &lt;div class="card  row g-0 flex-row h-100"&gt;
          &lt;div class="col"&gt;
            &lt;div class="p-4 d-flex flex-column h-100"&gt;
              &lt;strong class="d-inline-block mb-2 text-primary"&gt;Bootstrap&lt;/strong&gt;
              &lt;h3 class="mb-0"&gt;Blog 版型&lt;/h3&gt;
              &lt;div class="mb-1 text-muted"&gt;三月 7 日&lt;/div&gt;
              &lt;p class="card-text mb-auto"&gt;使用 Bootstrap 完成 Blog 版型。&lt;/p&gt;
              &lt;a href="#" class="stretched-link"&gt;繼續閱讀&lt;/a&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="col-4 d-none d-lg-block bg-cover" style="background-image: url(https://images.unsplash.com/photo-1600656801344-b1ec70d4058d?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=870&amp;q=80);"&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="col"&gt;
        &lt;div class="card  row g-0 flex-row h-100"&gt;
          &lt;div class="col"&gt;
            &lt;div class="p-4"&gt;
              &lt;strong class="d-inline-block mb-2 text-primary"&gt;Bootstrap&lt;/strong&gt;
              &lt;h3 class="mb-0"&gt;Blog 版型&lt;/h3&gt;
              &lt;div class="mb-1 text-muted"&gt;三月 7 日&lt;/div&gt;
              &lt;p class="card-text mb-auto"&gt;使用 Bootstrap 完成 Blog 版型。學習的內容有：Blog 版型 - 簡介、Blog 版型 - 導覽列、Blog 版型 - 首圖背景...等&lt;/p&gt;
              &lt;a href="#" class="stretched-link"&gt;繼續閱讀&lt;/a&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="col-4 d-none d-lg-block bg-cover" style="background-image: url(https://images.unsplash.com/photo-1600656801344-b1ec70d4058d?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=870&amp;q=80);"&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;!-- Blog 版型 - 水平卡片排版技巧 end --&gt;

  &lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;</code></pre>



<h3>Blog 版型 – 內文及側欄安排</h3>



<pre class="wp-block-code"><code>// index.html - Blog 版型 - 內文及側欄安排

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Blog Live&lt;/title&gt;
  &lt;!-- CSS only --&gt;
  &lt;link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous"&gt;
  &lt;style&gt;
    :root {
      --bs-font-sans-serif: system-ui,-apple-system,'Microsoft JhengHei',微軟正黑體,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans","Liberation Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
    }
    .bg-cover {
      background-position: center center;
      background-size: cover;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;div class="container"&gt;
    &lt;header class="py-3 text-center border-bottom"&gt;
      &lt;a href="#" class="h2 link-dark text-decoration-none"&gt;Gee Hsu 的 Blog&lt;/a&gt;
    &lt;/header&gt;

    &lt;!-- Blog 版型 - 導覽列 start --&gt;
    &lt;div class="overflow-auto py-1"&gt;
      &lt;nav class="nav justify-content-between flex-nowrap text-nowrap"&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;HTML&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;CSS&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;jQuery&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;JavaScript&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;RWD&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;Bootstrap&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;Vue&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;Git&amp;GitHub&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;NodeJs&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;Adobe XD&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;Sass&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;VSCode&lt;/a&gt;
      &lt;/nav&gt;
    &lt;/div&gt;

    &lt;!-- Blog 版型 - 導覽列 end --&gt;

    &lt;!-- Blog 版型 - 首圖背景 start --&gt;
    &lt;div class="p-4 p-md-5 mb-4 text-white rounded-3 bg-cover" style="background-image: url(https://images.unsplash.com/photo-1545641203-7d072a14e3b2?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1033&amp;q=80);"&gt;
      &lt;div class="col-md-6"&gt;
        &lt;h1 class="display-4 fst-italic"&gt;雨水經由高山地形匯流成溪河&lt;/h1&gt;
        &lt;p class="lead my-3"&gt;一個河流需要時間的積累才能形成，知識的累積也是從少到多。&lt;/p&gt;
        &lt;p class="lead mb-0"&gt;&lt;a class="text-white" href="#"&gt;繼續閱讀&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;!-- Blog 版型 - 首圖背景 end --&gt;

    &lt;!-- Blog 版型 - 水平卡片排版技巧 start --&gt;
    &lt;div class="row row-cols-1 row-cols-lg-2 mb-5"&gt;
      &lt;div class="col"&gt;
        &lt;div class="card  row g-0 flex-row h-100"&gt;
          &lt;div class="col"&gt;
            &lt;div class="p-4 d-flex flex-column h-100"&gt;
              &lt;strong class="d-inline-block mb-2 text-primary"&gt;Bootstrap&lt;/strong&gt;
              &lt;h3 class="mb-0"&gt;Blog 版型&lt;/h3&gt;
              &lt;div class="mb-1 text-muted"&gt;三月 7 日&lt;/div&gt;
              &lt;p class="card-text mb-auto"&gt;使用 Bootstrap 完成 Blog 版型。&lt;/p&gt;
              &lt;a href="#" class="stretched-link"&gt;繼續閱讀&lt;/a&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="col-4 d-none d-lg-block bg-cover" style="background-image: url(https://images.unsplash.com/photo-1600656801344-b1ec70d4058d?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=870&amp;q=80);"&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="col"&gt;
        &lt;div class="card  row g-0 flex-row h-100"&gt;
          &lt;div class="col"&gt;
            &lt;div class="p-4"&gt;
              &lt;strong class="d-inline-block mb-2 text-primary"&gt;Bootstrap&lt;/strong&gt;
              &lt;h3 class="mb-0"&gt;Blog 版型&lt;/h3&gt;
              &lt;div class="mb-1 text-muted"&gt;三月 7 日&lt;/div&gt;
              &lt;p class="card-text mb-auto"&gt;使用 Bootstrap 完成 Blog 版型。學習的內容有：Blog 版型 - 簡介、Blog 版型 - 導覽列、Blog 版型 - 首圖背景...等&lt;/p&gt;
              &lt;a href="#" class="stretched-link"&gt;繼續閱讀&lt;/a&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="col-4 d-none d-lg-block bg-cover" style="background-image: url(https://images.unsplash.com/photo-1600656801344-b1ec70d4058d?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=870&amp;q=80);"&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;!-- Blog 版型 - 水平卡片排版技巧 end --&gt;

    &lt;!-- Blog 版型 - 內文及側欄安排 start --&gt;
    &lt;div class="row g-md-5"&gt;
      &lt;div class="col-md-8"&gt;
        &lt;article&gt;
          &lt;h2&gt;使用 Bootstrap 完成 Blog 版型&lt;/h2&gt;
          &lt;p&gt;2022 年三月 &lt;a href="#"&gt;Gee Hsu&lt;/a&gt;&lt;/p&gt;
      
          &lt;p&gt;&lt;img class="img-fluid" src="https://firebasestorage.googleapis.com/v0/b/hexschool-api.appspot.com/o/blog%2F2021%2F10%2F25%2Fog.png?alt=media&amp;amp;token=787ab669-10c4-4456-b8d1-9354814a43d4" alt=""&gt;&lt;/p&gt;
          &lt;p&gt;文章擷取來自卡斯柏老師~&lt;/p&gt;
          &lt;p&gt;請問你切版時，是用哪一個方式在進行呢？&lt;/p&gt;
          &lt;ul&gt;
          &lt;li&gt;手刻至上，不使用框架或任何工具&lt;/li&gt;
          &lt;li&gt;使用 Sass 等工具，透過相關方法優化結構&lt;/li&gt;
          &lt;li&gt;使用框架作為基底，並自行撰寫 CSS 調整樣式&lt;/li&gt;
          &lt;li&gt;使用框架搭配 Sass 進行整合，大幅加速開發速度&lt;/li&gt;
          &lt;/ul&gt;
          &lt;h2 id="從純-CSS-轉至工具至上的開發型態"&gt;&lt;a href="#從純-CSS-轉至工具至上的開發型態" class="headerlink" title="從純 CSS 轉至工具至上的開發型態"&gt;&lt;/a&gt;從純 CSS 轉至工具至上的開發型態&lt;/h2&gt;&lt;p&gt;過去，我也是使用純 CSS 的方式在撰寫網頁，不過隨著工具越來越豐富，我也從純 CSS 慢慢轉變為 Sass 及 Bootstrap 整合的方式進行開發，明顯的差異點在於：&lt;/p&gt;
          &lt;ul&gt;
          &lt;li&gt;&lt;b&gt;CSS 行數大幅減少&lt;/b&gt;：以前動輒上千行的 CSS，現在只需要調整變數就能完成，可以專注在新功能的開發&lt;/li&gt;
          &lt;li&gt;&lt;b&gt;協作更為容易&lt;/b&gt;：每個人撰寫的習慣不同，就如 “按鈕” 有人習慣稱為 &lt;code&gt;button&lt;/code&gt; 有些人則習慣使用 &lt;code&gt;btn&lt;/code&gt; ，甚至同一個人每個階段的撰寫方式都不一樣。透過框架命名、架構的習慣會更有一致性。&lt;/li&gt;
          &lt;li&gt;&lt;b&gt;不需要每次撰寫相同的模組&lt;/b&gt;：同樣的按鈕每個網站都需要用到，如果每次都重新撰寫將會花去不少時間，就算是 copy &amp;amp; paste 都有可能出錯，與其如此不如就直接引入，快速又可減少錯誤～&lt;/li&gt;
          &lt;/ul&gt;
          &lt;p&gt;許多細微的差異下，從過去一個網站需花費兩週，到現在只需要 1 ~ 2 天就可完成相同品質的網站，剩下的時間可以用來優化更進階的視覺效果，長時間累積下來自然能夠有超越其他人的表現。&lt;/p&gt;
          &lt;p&gt;來自一段學長姐的話：&lt;br&gt;
          &lt;/p&gt;&lt;p class="border-left border-dark pl-3"&gt;切版一定要快，如果連 CSS 都搞不定怎麼能做好專業的前端工程師呢？&lt;/p&gt;
          &lt;p&gt;&lt;/p&gt;
          
          &lt;img class="img-fluid" src="https://firebasestorage.googleapis.com/v0/b/hexschool-api.appspot.com/o/blog%2F2021%2F10%2F25%2Fblock.jpg?alt=media&amp;amp;token=5bbcb44d-3982-4128-9452-6309c31c23b9" class="mx-auto" style="width: 60%"&gt;
          
          &lt;h2 id="Bootstrap-5-網頁開發整合術"&gt;&lt;a href="#Bootstrap-5-網頁開發整合術" class="headerlink" title="Bootstrap 5 網頁開發整合術"&gt;&lt;/a&gt;Bootstrap 5 網頁開發整合術&lt;/h2&gt;&lt;ul&gt;
          &lt;li&gt;聽說 Bootstrap 都長一樣，怎麼可能符合每個網站的需求？&lt;br&gt;→ 實戰都會透過變數客製化，調整成符合每個網站樣式及需求啦&lt;/li&gt;
          &lt;li&gt;Sass 環境好像很難搞，學的時間該不會就抵掉之後節省的時間？&lt;br&gt;→ 課程中只花 3 分鐘介紹如何安裝 Sass 環境，只要文字編輯器不須另外安裝工具，相信你用一次就上癮&lt;/li&gt;
          &lt;li&gt;上述介紹了 Bootstrap 5 的一些特點，但這個工具真的有這麼好嗎？&lt;br&gt;→ 來參加活動，我現場示範給你看&lt;/li&gt;
          &lt;/ul&gt;
          &lt;p&gt;接下來，我們預計在 10/27 進行「 Bootstrap 5 網頁開發整合術」的課程介紹，歡迎你提前發問，我將在直播過程中一一回覆。&lt;/p&gt;
          
        &lt;/article&gt;
      &lt;/div&gt;
      &lt;div class="col-md-4 d-none d-md-block"&gt;
        &lt;div class="sticky-top" style="top: 16px;"&gt;
          &lt;div class="p-4 bg-light rounded"&gt;
            &lt;h4&gt;關於我&lt;/h4&gt;
            &lt;p class="mb-0"&gt;學習製作網站，關於網頁開發相關技巧。&lt;br&gt;開發技巧有：HTML、CSS、JAVASCRIPT、JQUERY、RWD、BOOTSTRAP、VUE、GIT&amp;GITHUB...等相關技巧。&lt;/p&gt;
          &lt;/div&gt;
          &lt;div class="p-4"&gt;
            &lt;h4&gt;封存&lt;/h4&gt;
            &lt;ol class="list-unstyled"&gt;
              &lt;li&gt;&lt;a href="#"&gt;2022年 三月&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#"&gt;2022年 二月&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#"&gt;2022年 一月&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#"&gt;2021年 十二月&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#"&gt;2021年 十一月&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#"&gt;2021年 月&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#"&gt;2021年 月&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#"&gt;2021年 月&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#"&gt;2021年 月&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#"&gt;2021年 月&lt;/a&gt;&lt;/li&gt;
            &lt;/ol&gt;
          &lt;/div&gt;
          &lt;div class="p-4"&gt;
            &lt;h4&gt;追蹤我&lt;/h4&gt;
            &lt;ul class="list-unstyled"&gt;
              &lt;li&gt;&lt;a href="#"&gt;Github&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#"&gt;Facebook&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;!-- Blog 版型 - 內文及側欄安排 end --&gt;

  &lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;</code></pre>



<h3>Blog 版型 – Footer 製作</h3>



<pre class="wp-block-code"><code>// index.html - Blog 版型 - Footer 製作

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Blog Live&lt;/title&gt;
  &lt;!-- CSS only --&gt;
  &lt;link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous"&gt;
  &lt;style&gt;
    :root {
      --bs-font-sans-serif: system-ui,-apple-system,'Microsoft JhengHei',微軟正黑體,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans","Liberation Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
    }
    .bg-cover {
      background-position: center center;
      background-size: cover;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;div class="container"&gt;
    &lt;header class="py-3 text-center border-bottom"&gt;
      &lt;a href="#" class="h2 link-dark text-decoration-none"&gt;Gee Hsu 的 Blog&lt;/a&gt;
    &lt;/header&gt;

    &lt;!-- Blog 版型 - 導覽列 start --&gt;
    &lt;div class="overflow-auto py-1"&gt;
      &lt;nav class="nav justify-content-between flex-nowrap text-nowrap"&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;HTML&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;CSS&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;jQuery&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;JavaScript&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;RWD&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;Bootstrap&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;Vue&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;Git&amp;GitHub&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;NodeJs&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;Adobe XD&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;Sass&lt;/a&gt;
        &lt;a href="#" class="nav-link link-secondary"&gt;VSCode&lt;/a&gt;
      &lt;/nav&gt;
    &lt;/div&gt;

    &lt;!-- Blog 版型 - 導覽列 end --&gt;

    &lt;!-- Blog 版型 - 首圖背景 start --&gt;
    &lt;div class="p-4 p-md-5 mb-4 text-white rounded-3 bg-cover" style="background-image: url(https://images.unsplash.com/photo-1545641203-7d072a14e3b2?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1033&amp;q=80);"&gt;
      &lt;div class="col-md-6"&gt;
        &lt;h1 class="display-4 fst-italic"&gt;雨水經由高山地形匯流成溪河&lt;/h1&gt;
        &lt;p class="lead my-3"&gt;一個河流需要時間的積累才能形成，知識的累積也是從少到多。&lt;/p&gt;
        &lt;p class="lead mb-0"&gt;&lt;a class="text-white" href="#"&gt;繼續閱讀&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;!-- Blog 版型 - 首圖背景 end --&gt;

    &lt;!-- Blog 版型 - 水平卡片排版技巧 start --&gt;
    &lt;div class="row row-cols-1 row-cols-lg-2 mb-5"&gt;
      &lt;div class="col"&gt;
        &lt;div class="card  row g-0 flex-row h-100"&gt;
          &lt;div class="col"&gt;
            &lt;div class="p-4 d-flex flex-column h-100"&gt;
              &lt;strong class="d-inline-block mb-2 text-primary"&gt;Bootstrap&lt;/strong&gt;
              &lt;h3 class="mb-0"&gt;Blog 版型&lt;/h3&gt;
              &lt;div class="mb-1 text-muted"&gt;三月 7 日&lt;/div&gt;
              &lt;p class="card-text mb-auto"&gt;使用 Bootstrap 完成 Blog 版型。&lt;/p&gt;
              &lt;a href="#" class="stretched-link"&gt;繼續閱讀&lt;/a&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="col-4 d-none d-lg-block bg-cover" style="background-image: url(https://images.unsplash.com/photo-1600656801344-b1ec70d4058d?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=870&amp;q=80);"&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="col"&gt;
        &lt;div class="card  row g-0 flex-row h-100"&gt;
          &lt;div class="col"&gt;
            &lt;div class="p-4"&gt;
              &lt;strong class="d-inline-block mb-2 text-primary"&gt;Bootstrap&lt;/strong&gt;
              &lt;h3 class="mb-0"&gt;Blog 版型&lt;/h3&gt;
              &lt;div class="mb-1 text-muted"&gt;三月 7 日&lt;/div&gt;
              &lt;p class="card-text mb-auto"&gt;使用 Bootstrap 完成 Blog 版型。學習的內容有：Blog 版型 - 簡介、Blog 版型 - 導覽列、Blog 版型 - 首圖背景...等&lt;/p&gt;
              &lt;a href="#" class="stretched-link"&gt;繼續閱讀&lt;/a&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="col-4 d-none d-lg-block bg-cover" style="background-image: url(https://images.unsplash.com/photo-1600656801344-b1ec70d4058d?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=870&amp;q=80);"&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;!-- Blog 版型 - 水平卡片排版技巧 end --&gt;

    &lt;!-- Blog 版型 - 內文及側欄安排 start --&gt;
    &lt;div class="row g-md-5"&gt;
      &lt;div class="col-md-8"&gt;
        &lt;article&gt;
          &lt;h2&gt;使用 Bootstrap 完成 Blog 版型&lt;/h2&gt;
          &lt;p&gt;2022 年三月 &lt;a href="#"&gt;Gee Hsu&lt;/a&gt;&lt;/p&gt;
      
          &lt;p&gt;&lt;img class="img-fluid" src="https://firebasestorage.googleapis.com/v0/b/hexschool-api.appspot.com/o/blog%2F2021%2F10%2F25%2Fog.png?alt=media&amp;amp;token=787ab669-10c4-4456-b8d1-9354814a43d4" alt=""&gt;&lt;/p&gt;
          &lt;p&gt;文章擷取來自卡斯柏老師~&lt;/p&gt;
          &lt;p&gt;請問你切版時，是用哪一個方式在進行呢？&lt;/p&gt;
          &lt;ul&gt;
            &lt;li&gt;手刻至上，不使用框架或任何工具&lt;/li&gt;
            &lt;li&gt;使用 Sass 等工具，透過相關方法優化結構&lt;/li&gt;
            &lt;li&gt;使用框架作為基底，並自行撰寫 CSS 調整樣式&lt;/li&gt;
            &lt;li&gt;使用框架搭配 Sass 進行整合，大幅加速開發速度&lt;/li&gt;
          &lt;/ul&gt;
          &lt;h2 class="mb-2"&gt;&lt;a href="#" title="從純 CSS 轉至工具至上的開發型態"&gt;&lt;/a&gt;從純 CSS 轉至工具至上的開發型態&lt;/h2&gt;
          &lt;p&gt;過去，我也是使用純 CSS 的方式在撰寫網頁，不過隨著工具越來越豐富，我也從純 CSS 慢慢轉變為 Sass 及 Bootstrap 整合的方式進行開發，明顯的差異點在於：&lt;/p&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;b&gt;CSS 行數大幅減少&lt;/b&gt;：以前動輒上千行的 CSS，現在只需要調整變數就能完成，可以專注在新功能的開發&lt;/li&gt;
            &lt;li&gt;&lt;b&gt;協作更為容易&lt;/b&gt;：每個人撰寫的習慣不同，就如 “按鈕” 有人習慣稱為 &lt;code&gt;button&lt;/code&gt; 有些人則習慣使用 &lt;code&gt;btn&lt;/code&gt; ，甚至同一個人每個階段的撰寫方式都不一樣。透過框架命名、架構的習慣會更有一致性。&lt;/li&gt;
            &lt;li&gt;&lt;b&gt;不需要每次撰寫相同的模組&lt;/b&gt;：同樣的按鈕每個網站都需要用到，如果每次都重新撰寫將會花去不少時間，就算是 copy &amp;amp; paste 都有可能出錯，與其如此不如就直接引入，快速又可減少錯誤～&lt;/li&gt;
          &lt;/ul&gt;
          &lt;p&gt;許多細微的差異下，從過去一個網站需花費兩週，到現在只需要 1 ~ 2 天就可完成相同品質的網站，剩下的時間可以用來優化更進階的視覺效果，長時間累積下來自然能夠有超越其他人的表現。&lt;/p&gt;
          &lt;p&gt;來自一段學長姐的話：&lt;br&gt;&lt;/p&gt;
          &lt;p class="border-left border-dark pl-3"&gt;切版一定要快，如果連 CSS 都搞不定怎麼能做好專業的前端工程師呢？&lt;/p&gt;
          
          &lt;img class="img-fluid mx-auto d-block mb-3" src="https://firebasestorage.googleapis.com/v0/b/hexschool-api.appspot.com/o/blog%2F2021%2F10%2F25%2Fblock.jpg?alt=media&amp;amp;token=5bbcb44d-3982-4128-9452-6309c31c23b9" style="width: 60%"&gt;
          
          &lt;h2 class="mb-2"&gt;&lt;a href="#" title="Bootstrap 5 網頁開發整合術"&gt;&lt;/a&gt;Bootstrap 5 網頁開發整合術&lt;/h2&gt;
          &lt;ul&gt;
            &lt;li&gt;聽說 Bootstrap 都長一樣，怎麼可能符合每個網站的需求？&lt;br&gt;→ 實戰都會透過變數客製化，調整成符合每個網站樣式及需求啦&lt;/li&gt;
            &lt;li&gt;Sass 環境好像很難搞，學的時間該不會就抵掉之後節省的時間？&lt;br&gt;→ 課程中只花 3 分鐘介紹如何安裝 Sass 環境，只要文字編輯器不須另外安裝工具，相信你用一次就上癮&lt;/li&gt;
            &lt;li&gt;上述介紹了 Bootstrap 5 的一些特點，但這個工具真的有這麼好嗎？&lt;br&gt;→ 來參加活動，我現場示範給你看&lt;/li&gt;
          &lt;/ul&gt;
          &lt;p&gt;接下來，我們預計在 10/27 進行「 Bootstrap 5 網頁開發整合術」的課程介紹，歡迎你提前發問，我將在直播過程中一一回覆。&lt;/p&gt;
          
        &lt;/article&gt;
      &lt;/div&gt;
      &lt;div class="col-md-4 d-none d-md-block"&gt;
        &lt;div class="sticky-top" style="top: 16px;"&gt;
          &lt;div class="p-4 bg-light rounded"&gt;
            &lt;h4&gt;關於我&lt;/h4&gt;
            &lt;p class="mb-0"&gt;學習製作網站，關於網頁開發相關技巧。&lt;br&gt;開發技巧有：HTML、CSS、JAVASCRIPT、JQUERY、RWD、BOOTSTRAP、VUE、GIT&amp;GITHUB...等相關技巧。&lt;/p&gt;
          &lt;/div&gt;
          &lt;div class="p-4"&gt;
            &lt;h4&gt;封存&lt;/h4&gt;
            &lt;ol class="list-unstyled"&gt;
              &lt;li&gt;&lt;a href="#"&gt;2022年 三月&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#"&gt;2022年 二月&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#"&gt;2022年 一月&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#"&gt;2021年 十二月&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#"&gt;2021年 十一月&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#"&gt;2021年 十月&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#"&gt;2021年 九月&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#"&gt;2021年 八月&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#"&gt;2021年 七月&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#"&gt;2021年 六月&lt;/a&gt;&lt;/li&gt;
            &lt;/ol&gt;
          &lt;/div&gt;
          &lt;div class="p-4"&gt;
            &lt;h4&gt;追蹤我&lt;/h4&gt;
            &lt;ul class="list-unstyled"&gt;
              &lt;li&gt;&lt;a href="#"&gt;Github&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#"&gt;Facebook&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;!-- Blog 版型 - 內文及側欄安排 end --&gt;

  &lt;/div&gt;

  &lt;!-- Blog 版型 - Footer 製作 start --&gt;
  &lt;footer class="bg-light border-top py-4 mt-5 text-center"&gt;
    &lt;p&gt;Bootstrap 5 練習作業&lt;/p&gt;
    &lt;p&gt;
      &lt;a href="#"&gt;Back to top&lt;/a&gt;
    &lt;/p&gt;
  &lt;/footer&gt;
  &lt;!-- Blog 版型 - Footer 製作 end --&gt;

&lt;/body&gt;
&lt;/html&gt;</code></pre>



<h3>Blog 版型 – 作業說明</h3>



<h3>Blog 版型 – 作業範例下載</h3>



<p>注意：</p>



<ul><li>此檔案僅用來參考，請勿複製程式碼</li></ul>



<h2 class="has-background" style="background-color:#ff6663">CH10 – Bootstrap 與神奇的 Sass</h2>



<h3>Bootstrap 與 Sass 的關係</h3>



<h4>CSS 預處理器</h4>



<p>以 SASS 為主的說明。</p>



<p>Bootstrap 就是使用 Sass 預處理器開發的喔。</p>



<h4>什麼是預處理器？</h4>



<p>以 Bootstrap 來說這麼大的框架原始碼檔案會是由許多小元件組成。<br>但是這個別的檔案並無法被瀏覽器所解析，透過 Sass 編譯器能夠將這些小元件組成完整的 CSS，並且能夠在瀏覽器上運行。</p>



<h4>.scss 與 .sass 差在哪裡？</h4>



<pre class="wp-block-code"><code>// .sass
.btn
  display: inline-block
  font-weight: $btn-font-weight
  text-align: center
  +transition($btn-transition}</code></pre>



<p>.sass<br>是原始的 sass 格式，特點是沒有<strong>花括號</strong>及<strong>分號</strong>，讓程式碼呈現極簡的風格。</p>



<pre class="wp-block-code"><code>// .scss
.btn {
  display: inline-block;
  font-weight: $btn-font-weight;
  text-align: center;
  @include transition($btn-transition);
}</code></pre>



<p>.scss<br>特點是與 CSS 相當類似，所以<strong>大多網頁設計師都可以無痛使用</strong>。</p>



<h4>為什麼要學預處理器</h4>



<p><strong>優點：變數輕鬆改，樣式千變萬化</strong><br>只要修改些微的變數，就可以讓原有的模組有更多的延伸變化，不僅有效減少開發時間，更能應付多變需求。</p>



<p><strong>優點：相同結構重複利用</strong><br>每次專案都有許多可重複運用的元件、樣式，與其這樣不如每次都收集起來，不再重複造輪子，輕鬆愜意創造新花樣。<br><br>按鈕、字體、邊線、圖片滿版都是以前做的。</p>



<p>-webkit-、-moz-、-o-、-ms-<br><strong>優點：自動化修正</strong><br>哪一個 CSS 在目前還需要前綴詞呢？<br>算了，那一點都不重要，Sass 可搭配 PostCSS 自動完成此功能，假設未來都不需要前綴詞，當然也可以自動移除。<br>所謂工程師，就是能自動就讓他自動阿。</p>



<h4>開始學習 Sass 吧</h4>



<ol><li>如何安裝 Sass 開發環境</li><li>如何匯入 Bootstrap 模組及調整情境色</li><li>開啟 Bootstrap 隱藏樣式</li><li>客製化模組</li><li>自定義模組心法分享</li></ol>



<h3 class="has-background" style="background-color:#ff6663">在 VSCode 中加入 Sass 環境</h3>



<h4>操作步驟</h4>



<ol><li>點擊 Extensions、輸入 Live Sass Compiler 後安裝此套件</li><li>在專案中新增 stylesheets 資料夾、在裡面新增 all.scss 檔案後就會在 VSCode 下面看到出現 Watch Sass 功能</li><li>如果沒有就把 VSCode 關閉然後再以專案的形式打開</li><li>按下 Watch Sass 會發現新增 css 資料夾以及兩個檔案 al.css、all.css.map</li><li>all.css 都是透過 all.scss 編譯而成，因此我們都只會在 all.scss 撰寫我們的程式碼</li><li>在 all.scss 檔案撰寫程式碼、存檔後會立即編譯，在 all.css 檔案就可以看到編譯完成的檔案</li><li>在 index.html 檔案載入 all.css，並在文字內套用 .filter 樣式</li><li>到瀏覽器看是否有套用樣式成功</li></ol>



<pre class="wp-block-code"><code>// all.scss - 6

$primary: blue;

.filter {
  filter: blur(1px);
  color: $primary;
}</code></pre>



<p>自我補充：如何調整編譯後檔案位置、名稱<br>File &gt; Preferences &gt; Settings &gt; Extensions &gt; JSON &gt; JSON: Schemas &gt; Edit in settings.json</p>



<pre class="wp-block-code"><code>// settings.json

"liveSassCompile.settings.formats": &#91;
    // 調整
    // {
    //     "format": "compressed",
    //     "extensionName": ".min.css",
    //     "savePath": "/css"
    // }
    // 預設
    {
        "format": "expanded",
        "extensionName": ".css",
        "savePath": null
    }</code></pre>



<h3 class="has-background" style="background-color:#ff6663">匯入 Bootstrap 並調整樣式</h3>



<h4>操作步驟</h4>



<ol><li>把 Bootstrap 加入到我們的專案</li><li>Bootstrap 加入進來的方式有兩種<ul><li>直接到 Bootstrap 文件下載、選擇原始檔案下載</li><li>使用 npm 下載 (必需先安裝 Node.js)，課程會介紹這個方法</li></ul></li><li>在 VSCode 按下 Ctrl + ` 開啟終端機</li><li>輸入指令 npm init 進行初始化設定，建立 package.json 檔案</li><li>輸入指令安裝 Bootstrap：npm install bootstrap</li><li>開啟 Bootstrap 官方文件，到自定義 &gt; Sass &gt; 匯入的地方找到引入的方法，然後貼到 all.scss 檔案中存檔，編譯完成後會在下方出現 Success 的字眼</li><li>在 index.html 試著把一些元件加到畫面上</li><li>調整 Sass 的變數，在官方有介紹使用的方法，在這個地方使用比較簡單的一個方式，點開 node_modules &gt; bootstrap &gt; scss &gt; 找到 _varialbes.scss 檔案使用另存新檔到 stylesheet 資料夾裡面，老師個人比較習慣會再另外建立一個資料夾 helpers、然後按下存檔</li><li>在 helpers 資料夾中就有一個 _variables.scss 檔案，這邊就有 Bootstrap 所有的變數，在 all.scss 就可以把 helpers/_variables.scss 檔案引入，直接引入會產生錯誤，引此我們要先載入 functions，然後再載入 helpers/variables，存檔之後就會再次編譯並套用裡面的變數</li><li>打開終端機、然後跳到輸出這個分頁，再 helpers/variables 的 $theme-colors 的地方(大概81行左右的地方)，我們要把 primary 的地方改成 purple、然後儲存，在 OUTPUT 的地方看是否有更動，如果沒有更動就重開 VSCode 再來試試看</li><li>回到瀏覽器看一下是否有套用上紫色的樣式</li></ol>



<pre class="wp-block-code"><code>// all.scss - 6

@import "../node_modules/bootstrap/scss/bootstrap";</code></pre>



<pre class="wp-block-code"><code>// index.html - 7

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Document&lt;/title&gt;
  &lt;link rel="stylesheet" href="stylesheets/all.css"&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;a href="#" class="btn btn-primary"&gt;我是按鈕&lt;/a&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// all.scss - 9


// required functions
@import "../node_modules/bootstrap/scss/functions";
// helpers/variables
@import "./helpers/variables";

@import "../node_modules/bootstrap/scss/bootstrap";</code></pre>



<pre class="wp-block-code"><code>// helpers/_variables - 10

// scss-docs-start theme-colors-map
$theme-colors: (
  "primary":    $purple,
  "secondary":  $secondary,
  "success":    $success,
  "info":       $info,
  "warning":    $warning,
  "danger":     $danger,
  "light":      $light,
  "dark":       $dark
) !default;</code></pre>



<ul><li><a rel="noreferrer noopener" href="https://getbootstrap.com/docs/5.1/getting-started/download/" target="_blank">Getting started &gt; Download &gt; Source files &gt; Download</a></li><li><a rel="noreferrer noopener" href="https://getbootstrap.com/docs/5.1/customize/sass/" target="_blank">Customize &gt; Sass</a></li><li><a href="https://getbootstrap.com/docs/5.1/customize/sass/#variable-defaults" target="_blank" rel="noreferrer noopener">Customize &gt; Sass &gt; Variable defaults</a></li></ul>



<h3>讓 Bootstrap 不要那麼肥，手動匯入元件</h3>



<h4>操作步驟</h4>



<ol><li>在自定義 &gt; 優化 &gt; 匯入 Sass 樣式從 @import “mixins”; 以下開始複製並貼到 all.scss、把原本匯入的 bootstrap 取代，這個路徑是錯誤的</li><li>修正路徑，可以使用垂直圈選、或者使用 ctrl + d 圈選，把路徑修改後，就可以刪除部分元件，前三個要保留起來，是 Bootstrap 的預設值，後面的就可以進行一些選用，我們現在就把大部分的元件註解掉，編譯完成後可以看檔案大小變成多少</li><li>比較常用到的元件有 images, containers, grid, tables, forms, buttons, helpers, utilities，其他沒用到建議可以不用載入</li></ol>



<pre class="wp-block-code"><code>// all.scss - 3

// required functions
@import "../node_modules/bootstrap/scss/functions";
// helpers/variables
@import "./helpers/variables";

@import "../node_modules/bootstrap/scss/mixins";
@import "../node_modules/bootstrap/scss/utilities";

// Layout &amp; components
@import "../node_modules/bootstrap/scss/root";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";

@import "../node_modules/bootstrap/scss/images";
@import "../node_modules/bootstrap/scss/containers";
@import "../node_modules/bootstrap/scss/grid";
@import "../node_modules/bootstrap/scss/tables";
@import "../node_modules/bootstrap/scss/forms";
@import "../node_modules/bootstrap/scss/buttons";
// @import "../node_modules/bootstrap/scss/transitions";
// @import "../node_modules/bootstrap/scss/dropdown";
// @import "../node_modules/bootstrap/scss/button-group";
// @import "../node_modules/bootstrap/scss/nav";
// @import "../node_modules/bootstrap/scss/navbar";
// @import "../node_modules/bootstrap/scss/card";
// @import "../node_modules/bootstrap/scss/accordion";
// @import "../node_modules/bootstrap/scss/breadcrumb";
// @import "../node_modules/bootstrap/scss/pagination";
// @import "../node_modules/bootstrap/scss/badge";
// @import "../node_modules/bootstrap/scss/alert";
// @import "../node_modules/bootstrap/scss/progress";
// @import "../node_modules/bootstrap/scss/list-group";
// @import "../node_modules/bootstrap/scss/close";
// @import "../node_modules/bootstrap/scss/toasts";
// @import "../node_modules/bootstrap/scss/modal";
// @import "../node_modules/bootstrap/scss/tooltip";
// @import "../node_modules/bootstrap/scss/popover";
// @import "../node_modules/bootstrap/scss/carousel";
// @import "../node_modules/bootstrap/scss/spinners";
// @import "../node_modules/bootstrap/scss/offcanvas";
// @import "../node_modules/bootstrap/scss/placeholders";

// // Helpers
@import "../node_modules/bootstrap/scss/helpers";

// // Utilities
@import "../node_modules/bootstrap/scss/utilities/api";</code></pre>



<p>垂直圈選：<br>Mac: option + 左鍵<br>Windows: 滑鼠中鍵</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/customize/optimize/" target="_blank" rel="noreferrer noopener">自定義 &gt; 優化 (Optimize)</a></li></ul>



<h3 class="has-background" style="background-color:#ff6663">修改特定的元件的變數</h3>



<p>介紹 Bootstrap 中的 Sass 變數有哪些是可以做調整的。</p>



<h4>操作步驟</h4>



<ol><li>第一種方法是在文件中看到有哪些變數是可以調整的，像是格線系統，我們可以從排版 &gt; 網格 &gt; Sass，是在說明 Bootstrap 的 Sass 是如何建構、提供哪些變數可以做調整，在 helpers/_variables.scss 檔案中找到 $grid-columns，把它改成16、然後存檔。</li><li>第二種方式直接搜尋變數名稱，例如 radius。另外我們也可以直接搜尋模組，例如 btn、card。</li><li>直接調整全部的圓角設定。在自己在設定變數的時候常會把原本的註解起來，然後把自己的變數設定加在前面。方便自己之後搜尋自己自定義變數的設定可以在後面註解加上 custom。存檔之後就會發現所有的元件都會加上大圓角。</li><li>不希望所有元件都加上大圓角，就可以到特定的元件做調整，像是按鈕的元件。在習慣上會把按鈕和 input 共用相同的設定值。</li><li>關於 utilities 調整方式就不太一樣，示範 spacing。可以在 helpers/_variables.scss 檔案搜尋 spacing 或者搜尋 spacer 也可以。</li></ol>



<pre class="wp-block-code"><code>// all.scss - 設定
// 需要 functions
@import "../node_modules/bootstrap/scss/functions";

// 自定義 helpers/variables
@import "./helpers/variables";

// Configuration
@import "../node_modules/bootstrap/scss/mixins";
@import "../node_modules/bootstrap/scss/utilities";

// 排版 &amp; 元件
// 基本預設
@import "../node_modules/bootstrap/scss/root";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";
// 常用
@import "../node_modules/bootstrap/scss/root";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";
@import "../node_modules/bootstrap/scss/images";
@import "../node_modules/bootstrap/scss/containers";
@import "../node_modules/bootstrap/scss/grid";
@import "../node_modules/bootstrap/scss/tables";
@import "../node_modules/bootstrap/scss/forms";
@import "../node_modules/bootstrap/scss/buttons";
// 會用到
@import "../node_modules/bootstrap/scss/card";

// 工具 Helpers
@import "../node_modules/bootstrap/scss/helpers";

// 通用類別 Utilities
@import "../node_modules/bootstrap/scss/utilities/api";</code></pre>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Live Sass&lt;/title&gt;
  &lt;link rel="stylesheet" href="stylesheets/all.css"&gt;
  &lt;style&gt;
    .box {
      height: 100px;
      background-color: var(--bs-primary);
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;div class="container my-3"&gt;
    &lt;div class="row"&gt;
      &lt;div class="col-6"&gt;&lt;div class="box"&gt;&lt;/div&gt;&lt;/div&gt;
      &lt;div class="col-6"&gt;&lt;div class="box"&gt;&lt;/div&gt;&lt;/div&gt;
      &lt;div class="col-4"&gt;&lt;div class="box"&gt;&lt;/div&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;hr&gt;
    &lt;a href="#" class="btn btn-primary me-7"&gt;我是按鈕&lt;/a&gt;
    &lt;a href="#" class="btn btn-primary"&gt;我是按鈕&lt;/a&gt;
    &lt;hr&gt;
    &lt;div class="mb-3"&gt;
      &lt;label for="exampleFormControlInput1" class="form-label"&gt;Email address&lt;/label&gt;
      &lt;input type="email" class="form-control" id="exampleFormControlInput1" placeholder="name@example.com"&gt;
    &lt;/div&gt;
    &lt;div class="mb-3"&gt;
      &lt;label for="exampleFormControlTextarea1" class="form-label"&gt;Example textarea&lt;/label&gt;
      &lt;textarea class="form-control" id="exampleFormControlTextarea1" rows="3"&gt;&lt;/textarea&gt;
    &lt;/div&gt;
    &lt;hr&gt;
    &lt;div class="card" style="width: 18rem;"&gt;
      &lt;div class="card-body"&gt;
        &lt;h5 class="card-title"&gt;Card title&lt;/h5&gt;
        &lt;h6 class="card-subtitle mb-2 text-muted"&gt;Card subtitle&lt;/h6&gt;
        &lt;p class="card-text"&gt;Some quick example text to build on the card title and make up the bulk of the card's content.&lt;/p&gt;
        &lt;a href="#" class="card-link"&gt;Card link&lt;/a&gt;
        &lt;a href="#" class="card-link"&gt;Another link&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// helpers/_variables.scss - 3

// Grid columns
//
// Set the number of columns and specify the width of the gutters.

$grid-columns:                16; // 12 !default;
$grid-gutter-width:           1.5rem !default;
$grid-row-columns:            6 !default;

$gutters: $spacers !default;

// scss-docs-start border-radius-variables
$border-radius:               1rem; // .25rem !default; custom
$border-radius-sm:            .2rem !default;
$border-radius-lg:            .3rem !default;
$border-radius-pill:          50rem !default;
// scss-docs-end border-radius-variables

</code></pre>



<pre class="wp-block-code"><code>// helpers/_variables.scss - 4

// Allows for customizing button radius independently from global border radius
$btn-border-radius:           1rem; // $border-radius !default; custom
$btn-border-radius-sm:        $border-radius-sm !default;
$btn-border-radius-lg:        $border-radius-lg !default;

// scss-docs-start form-input-variables
$input-border-radius:                   1rem; //$border-radius !default; custom
$input-border-radius-sm:                $border-radius-sm !default;
$input-border-radius-lg:                $border-radius-lg !default;

// Cards

// scss-docs-start card-variables
$card-spacer-y:                     $spacer !default;
$card-spacer-x:                     $spacer !default;
$card-title-spacer-y:               $spacer * .5 !default;
$card-border-width:                 $border-width !default;
$card-border-color:                 rgba($black, .125) !default;
$card-border-radius:                0; // $border-radius !default; custom
$card-box-shadow:                   null !default;
$card-inner-border-radius:          subtract($card-border-radius, $card-border-width) !default;
$card-cap-padding-y:                $card-spacer-y * .5 !default;
$card-cap-padding-x:                $card-spacer-x !default;
$card-cap-bg:                       rgba($black, .03) !default;
$card-cap-color:                    null !default;
$card-height:                       null !default;
$card-color:                        null !default;
$card-bg:                           $white !default;
$card-img-overlay-padding:          $spacer !default;
$card-group-margin:                 $grid-gutter-width * .5 !default;
// scss-docs-end card-variables</code></pre>



<pre class="wp-block-code"><code>// helpers/_variables.scss - 5

// Spacing
//
// Control the default styling of most Bootstrap elements by modifying these
// variables. Mostly focused on spacing.
// You can add more entries to the $spacers map, should you need more variation.

// scss-docs-start spacer-variables-maps
$spacer: 1rem !default;
$spacers: (
  0: 0,
  1: $spacer * .25,
  2: $spacer * .5,
  3: $spacer,
  4: $spacer * 1.5,
  5: $spacer * 3,
  6: $spacer * 4.5,
  7: $spacer * 6,
) !default;

$negative-spacers: if($enable-negative-margins, negativify-map($spacers), null) !default;
// scss-docs-end spacer-variables-maps</code></pre>



<ul><li><a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.1/layout/grid/#sass" target="_blank">排版 &gt; 網格 &gt; Sass</a></li><li><a href="https://getbootstrap.com/docs/5.1/utilities/spacing/#sass" target="_blank" rel="noreferrer noopener">通用類別 &gt; 間距 (Spacing) &gt; Sass</a></li></ul>



<h3>Bootstrap 隱藏功能開關！</h3>



<h4>操作步驟</h4>



<ol><li>我們可以到自定義 &gt; 選項找到 $enable-gradients 是關於背景漸層變數的名稱，然後到 helpers/_variables.scss 搜尋該變數做修改、儲存。</li><li>啟用的方式是我們先加上原本的變數名稱，然後在加上一個 bg-gradient 就可以套用。加上之後，他其實不是只有背景加上漸層色，是所有的元件都加上漸層色、視覺效果。</li><li>還有另外一個陰影的設定 $enable-shadows</li></ol>



<pre class="wp-block-code"><code>// helpers/_variables.scss - 1

// Options
//
// Quickly modify global styling by enabling or disabling optional features.

$enable-caret:                true !default;
$enable-rounded:              true !default;
$enable-shadows:              false !default;
$enable-gradients:            true; // false !default; custom
$enable-transitions:          true !default;
$enable-reduced-motion:       true !default;
$enable-smooth-scroll:        true !default;
$enable-grid-classes:         true !default;
$enable-cssgrid:              false !default;
$enable-button-pointers:      true !default;
$enable-rfs:                  true !default;
$enable-validation-icons:     true !default;
$enable-negative-margins:     false !default;
$enable-deprecation-messages: true !default;
$enable-important-utilities:  true !default;</code></pre>



<pre class="wp-block-code"><code>// index.html - 2

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Live Sass&lt;/title&gt;
  &lt;link rel="stylesheet" href="stylesheets/all.css"&gt;
  &lt;style&gt;
    .box {
      height: 100px;
      background-color: var(--bs-primary);
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;div class="container my-3"&gt;
    &lt;div class="row"&gt;
      &lt;div class="col-6"&gt;&lt;div class="box bg-primary bg-gradient"&gt;&lt;/div&gt;&lt;/div&gt;
      &lt;div class="col-6"&gt;&lt;div class="box"&gt;&lt;/div&gt;&lt;/div&gt;
      &lt;div class="col-4"&gt;&lt;div class="box"&gt;&lt;/div&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;hr&gt;
    &lt;a href="#" class="btn btn-primary me-7"&gt;我是按鈕&lt;/a&gt;
    &lt;a href="#" class="btn btn-primary"&gt;我是按鈕&lt;/a&gt;
    &lt;hr&gt;
    &lt;div class="mb-3"&gt;
      &lt;label for="exampleFormControlInput1" class="form-label"&gt;Email address&lt;/label&gt;
      &lt;input type="email" class="form-control" id="exampleFormControlInput1" placeholder="name@example.com"&gt;
    &lt;/div&gt;
    &lt;div class="mb-3"&gt;
      &lt;label for="exampleFormControlTextarea1" class="form-label"&gt;Example textarea&lt;/label&gt;
      &lt;textarea class="form-control" id="exampleFormControlTextarea1" rows="3"&gt;&lt;/textarea&gt;
    &lt;/div&gt;
    &lt;hr&gt;
    &lt;div class="card" style="width: 18rem;"&gt;
      &lt;div class="card-body"&gt;
        &lt;h5 class="card-title"&gt;Card title&lt;/h5&gt;
        &lt;h6 class="card-subtitle mb-2 text-muted"&gt;Card subtitle&lt;/h6&gt;
        &lt;p class="card-text"&gt;Some quick example text to build on the card title and make up the bulk of the card's content.&lt;/p&gt;
        &lt;a href="#" class="card-link"&gt;Card link&lt;/a&gt;
        &lt;a href="#" class="card-link"&gt;Another link&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// helpers/_variables.scss - 3

// Options
//
// Quickly modify global styling by enabling or disabling optional features.

$enable-caret:                true !default;
$enable-rounded:              true !default;
$enable-shadows:              true; // false !default; custom
$enable-gradients:            true; // false !default; custom
$enable-transitions:          true !default;
$enable-reduced-motion:       true !default;
$enable-smooth-scroll:        true !default;
$enable-grid-classes:         true !default;
$enable-cssgrid:              false !default;
$enable-button-pointers:      true !default;
$enable-rfs:                  true !default;
$enable-validation-icons:     true !default;
$enable-negative-margins:     false !default;
$enable-deprecation-messages: true !default;
$enable-important-utilities:  true !default;</code></pre>



<ul><li><a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.1/utilities/background/#background-gradient" target="_blank">通用類別 &gt; 背景 &gt; 背景漸層</a></li><li><a href="https://bootstrap5.hexschool.com/docs/5.1/customize/options/" target="_blank" rel="noreferrer noopener">自定義 &gt; 選項</a></li></ul>



<h3>響應式文字縮放功能</h3>



<p>如果不喜歡這個功能，可以在 helpers/_variables.scss 檔案把 $enable-rfs 關閉</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/getting-started/rfs/" target="_blank" rel="noreferrer noopener">快速開始 &gt; RFS</a></li></ul>



<h3 class="has-background" style="background-color:#ff6663">自定義通用類別</h3>



<h4>操作步驟</h4>



<ol><li>製作範例、接下來再透過指定的通用類別讓這個畫面呈現更加完善</li><li>要使用 utilities 該怎麼做，進入 node_modules &gt; bootstrap &gt; scss &gt;_utilities.scss，另存新檔到 helpers 資料夾裡面</li><li>到官方文件了解到底要怎樣去定義，然後在官方這裡有提供一個範例，在官方的範例我們可以加入到 helpers/_utilities.scss 最後面</li><li>要記得把 helpers/utilities 匯入到 all.scss 裡面來</li><li>因為圖片裡面的物品並不是放在正中央，我們需要加入第二組自訂定位的 utilities</li><li>增加額外的選項，就是響應式的選項，可以在 helpers/utilities.scss 加上 responsive 的屬性</li></ol>



<pre class="wp-block-code"><code>// helpers/_utilites.scss - 第一組自訂背景的 utilities

    // custom background
    "background-size": (
      property: background-size,
      class: bg-s,
      values: (
        cover: cover,
        contain: contain,
        50: 50%
      )
    )</code></pre>



<pre class="wp-block-code"><code>// all.scss

// 需要 functions
@import "../node_modules/bootstrap/scss/functions";

// 自定義 helpers/variables
@import "./helpers/variables";

// 自定義 helpers/utilities
@import "./helpers/utilities";

// Configuration
@import "../node_modules/bootstrap/scss/mixins";
@import "../node_modules/bootstrap/scss/utilities";

// 排版 &amp; 元件
// 基本預設
@import "../node_modules/bootstrap/scss/root";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";
// 常用
@import "../node_modules/bootstrap/scss/root";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";
@import "../node_modules/bootstrap/scss/images";
@import "../node_modules/bootstrap/scss/containers";
@import "../node_modules/bootstrap/scss/grid";
@import "../node_modules/bootstrap/scss/tables";
@import "../node_modules/bootstrap/scss/forms";
@import "../node_modules/bootstrap/scss/buttons";
// 會用到
@import "../node_modules/bootstrap/scss/card";

// 工具 Helpers
@import "../node_modules/bootstrap/scss/helpers";

// 通用類別 Utilities
@import "../node_modules/bootstrap/scss/utilities/api";</code></pre>



<pre class="wp-block-code"><code>// helpers/utilities.scss - 第二組自訂定位的 utilities

    // custom background
    "background-size": (
      property: background-size,
      class: bg-s,
      values: (
        cover: cover,
        contain: contain,
        50: 50%
      )
    ),
    "background-position": (
      property: background-position,
      class: bg-p,
      values: (
        center: center center,
      )
    )</code></pre>



<pre class="wp-block-code"><code>// helpers/utilities - 6

    // custom background
    "background-size": (
      property: background-size,
      class: bg-s,
      values: (
        cover: cover,
        contain: contain,
        50: 50%
      )
    ),
    "background-position": (
      property: background-position,
      responsive: true,
      class: bg-p,
      values: (
        center: center center,
      )
    )</code></pre>



<pre class="wp-block-code"><code>// utilities.html

&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Live Sass&lt;/title&gt;
  &lt;link rel="stylesheet" href="stylesheets/all.css"&gt;
  &lt;style&gt;
    .box {
      height: 100px;
      background-color: var(--bs-primary);
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body class="vh-100 bg-s-cover bg-p-lg-center" style="background-image: url(https://images.unsplash.com/photo-1458966480358-a0ac42de0a7a?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1170&amp;q=80);"&gt;
  
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/utilities/api/" target="_blank" rel="noreferrer noopener">通用類別 &gt; API</a></li></ul>



<h3 class="has-background" style="background-color:#ff6663">使用 Bootstrap 方法，產生獨立元件</h3>



<h4>操作步驟</h4>



<ol><li>在 helpers/utilities.scss 的 $theme-colors 加上 “hex: #69F8AE，存檔之後過一會就會套用自訂的樣式，這個方式會套用到所有的地方</li><li>有些情況只想在特定的元件下才啟用這個樣式的話，我們就可以使用 Bootstrap 另外提供的方法，我們先把剛才的 hex 註解起來</li><li>到官方文件找到文件 &gt; 元件 &gt; 按鈕 &gt; Mixins，Mixins 提供非常多的方法，那這些方法在套用之後，就可以產生一個新的色彩。這邊就有提供關於按鈕產生的 Mixins button-variant 的方法，這個方法可以傳入部分色彩，就可以產生一個新的按鈕，這個按鈕就不是透過變數的方式所產生，而是透過額外的方法。具體的話，該如何運用它，我們可以再往下可以看到他有一個套用的方式，他是使用 @include 的方式把這個方法給引入進來，那後面會載入兩個色彩</li><li>在 stylesheets 裡面新增一個資料夾，這也算是個人的習慣，會使用一個新的資料夾來存放所有的元件，那這個資料夾名稱就叫 components。那在這個資料夾內可以再產生一個新的檔案，這個檔案叫做 _custom-buttons.scss，這 _(下底線)就會讓這個 sass 檔案不會被實際編譯一個獨立的檔案。</li><li>我們把 all.scss 打開，在最下方的地方我們把這隻檔案給引入進來</li><li>在 _custom-buttons.scss 開始編輯這支檔案，</li></ol>



<pre class="wp-block-code"><code>// component.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Live Sass&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
&lt;/head&gt;
&lt;style&gt;
  .box {
    height: 100px;
    background-color: var(--bs-primary);
  }
&lt;/style&gt;
&lt;body&gt;
  &lt;button type="button" class="btn btn-primary"&gt;這是按鈕&lt;/button&gt;
  &lt;button type="button" class="btn btn-hex"&gt;這是按鈕&lt;/button&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// helpers/_variables.scss - 5.引入獨立元件

// scss-docs-start theme-colors-map
$theme-colors: (
  "primary":    $purple,
  "hex":        #69F0AE,
  "secondary":  $secondary,
  "success":    $success,
  "info":       $info,
  "warning":    $warning,
  "danger":     $danger,
  "light":      $light,
  "dark":       $dark
) !default;
// scss-docs-end theme-colors-map</code></pre>



<pre class="wp-block-code"><code>// all.scss

// 需要 functions
@import "../node_modules/bootstrap/scss/functions";

// 自定義 helpers/variables
@import "./helpers/variables";

// 自定義 helpers/utilities
@import "./helpers/utilities";

// Configuration
@import "../node_modules/bootstrap/scss/mixins";
@import "../node_modules/bootstrap/scss/utilities";

// 排版 &amp; 元件
// 基本預設
@import "../node_modules/bootstrap/scss/root";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";
// 常用
@import "../node_modules/bootstrap/scss/root";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";
@import "../node_modules/bootstrap/scss/images";
@import "../node_modules/bootstrap/scss/containers";
@import "../node_modules/bootstrap/scss/grid";
@import "../node_modules/bootstrap/scss/tables";
@import "../node_modules/bootstrap/scss/forms";
@import "../node_modules/bootstrap/scss/buttons";
// 會用到
@import "../node_modules/bootstrap/scss/card";

// 工具 Helpers
@import "../node_modules/bootstrap/scss/helpers";

// 通用類別 Utilities
@import "../node_modules/bootstrap/scss/utilities/api";

// 獨立元件
@import "./components/custom-buttons";</code></pre>



<pre class="wp-block-code"><code>// _custom-buttons.scss - 6


.btn-custom-hex {
  @include button-variant(#69F0AE, #69F0AE)
}

.btn-outline-hex {
  @include button-outline-variant(#69F0AE)
}</code></pre>



<pre class="wp-block-code"><code>// components.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Live Sass&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
&lt;/head&gt;
&lt;style&gt;
  .box {
    height: 100px;
    background-color: var(--bs-primary);
  }
&lt;/style&gt;
&lt;body&gt;
  &lt;button type="button" class="btn btn-primary"&gt;這是按鈕&lt;/button&gt;
  &lt;button type="button" class="btn btn-custom-hex"&gt;這是按鈕&lt;/button&gt;
  &lt;button type="button" class="btn btn-outline-hex"&gt;這是按鈕&lt;/button&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/buttons/#mixins" target="_blank" rel="noreferrer noopener">元件 &gt; 按鈕 (Buttons) &gt; Mixins</a></li></ul>



<h3 class="has-background" style="background-color:#ff6663">在 Sass 中，自訂高可用性的元件</h3>



<h4>操作步驟</h4>



<ol><li>自訂元件的概念就是當你引入 Bootstrap 的時候，你的元件不夠使用需要自行做開發的時候，會怎麼做比較好，那這一段沒有一個絕對的做法，在此只是分享在實作中會怎麼樣去自訂元件。</li><li>使用方式過去到現在差異不大，這是 Bootstrap 4 進行開發的時候會定義 all.scss、components、helpers，那跟目前版本的 Bootstrap 5 介紹的內容其實差異不大，helpers 資料夾裡面會放 _variables.scss、_utilities.scss 這兩個變數檔，各種元件會把它放在 components 資料夾裡面。在定義元件的時候，盡可能維持一個概念，在定義元件的時候預期這個元件就是可以被重複利用的，所以不管它是放在哪個頁面預期就是可以把它拿過來使用，所以它才會叫做元件。</li><li>透過元件範例進行介紹，我們在建立元件的過程中可以給它一個名稱，名稱可以用它的外觀來進行命名，比如說它就是一個進度條的外觀，那就可以給它一個 stepbar，這種命名沒有絕對的對錯，最外層的部分會一個叫做 stepbar，那內層的話在命名的過程中就會延續這個 stepbar 的名稱做開頭，後面再依它的需求進行調整，比如說這是 stepbar 的各個子項目，那它就叫做 stepbar-item。</li><li>當我們建立完 stepbar 這個元件之後，在 all.scss 把 components/_stepbar.scss 把它引入進來。在每個元件檔名前面都會有一個下底線避免編譯成獨立的檔案。</li><li>在 components/_stepbar.scss 開發上面盡可能維持一些原則，如果是個 sass 新手的話，建議把整個 CSS 檔案寫進來就好、然後套用一些變數。</li><li>如果是有經驗的 sass 開發者的話，以下事項要稍微注意一下，第一個就是許多 sass 開發者會過度的利用 sass 的層級功能，像是在 .stepbar-item 這邊如果你有子項目的時候，許多新手 sass 開發者，他會不斷的用巢狀寫下去，這是一個非常不好的寫法。如果當你遇到多個層級的時候，建議把它改成使用這種方式去做撰寫，當你的巢狀寫法跟這種寫法的結果是一模一樣的時候，請不要過度巢狀。過度巢狀是一個非常不好的寫法，除非它有特別的用意。在 Bootstrap 裡面也會避免過度巢狀，那如果它使用巢狀，那是有它的意義在，如果沒有它的意義在，請不要過度巢狀。第二點是盡可能使用變數，變數的話可以看這個範例，在 background-color 這裡有使用 $primary 的顏色，這個 $primary 是來自 Bootstrap 的變數，透過這種方式就可以確保當前的元件是符合 Bootstrap 的色彩。在這個元件下需要自訂屬於這個元件自訂的變數，當有這個需求可以把變數定義在 _variables.scss 這支檔案。另一種方式就是把變數定義在當前的元件內，這個變數就只會給予這個元件所使用，所以在這個地方有個 $size，那它就是給後面這個 $size 所套用，我們在畫面上就會看到這個元件大小是 1.5 rem。如果覺得 size 太小就可以統一使用變數來做調整，這樣的好處是說，當有許多地方跟這個尺寸、變數有連動的時候，只要調整一個地方，所有地方就會跟著統一做修改。</li><li>除此之外還有一個叫做狀態，我們在開發一個元件，它可能有不同的主題色彩或者不同的狀態，像是 hover、active 都是屬於狀態，會習慣統一把狀態往後放。所以在這邊會有個 stepbar，往後找就會找到一個 stepbar-item.active 當它啟用的時候就可以加上 active 的樣式，就會統一放在同一個區塊，好處就是當它有其他狀態的時候，就可以在狀態這個片段程式碼來進行調整。剛剛有把 $size 改成 3rem，所以我們再回到瀏覽器來看一下，就可以看到進度條它的尺寸變大了許多。</li><li>這個章就是介紹 sass 跟 Bootstrap 的混合運用方式。</li></ol>



<pre class="wp-block-code"><code>// custom-components.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Live Sass&lt;/title&gt;
  &lt;link rel="stylesheet" href="stylesheets/all.css"&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;div class="container"&gt;
    &lt;h1&gt;自訂元件&lt;/h1&gt;

    &lt;div class="stepbar my-3"&gt;
      &lt;span class="stepbar-item"&gt;1&lt;/span&gt;
      &lt;span class="stepbar-item active"&gt;2&lt;/span&gt;
      &lt;span class="stepbar-item"&gt;3&lt;/span&gt;
    &lt;/div&gt;

    &lt;div class="stepbar my-3"&gt;
      &lt;span class="stepbar-item"&gt;1&lt;/span&gt;
      &lt;span class="stepbar-item"&gt;2&lt;/span&gt;
      &lt;span class="stepbar-item active"&gt;3&lt;/span&gt;
      &lt;span class="stepbar-item"&gt;4&lt;/span&gt;
      &lt;span class="stepbar-item"&gt;5&lt;/span&gt;
    &lt;/div&gt;

    &lt;div class="stepbar my-3"&gt;
      &lt;span class="stepbar-item"&gt;1&lt;/span&gt;
      &lt;span class="stepbar-item"&gt;2&lt;/span&gt;
      &lt;span class="stepbar-item"&gt;3&lt;/span&gt;
    &lt;/div&gt;

  &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// all.scss - 4

// 需要 functions
@import "../node_modules/bootstrap/scss/functions";

// 自定義 helpers/variables
@import "./helpers/variables";

// 自定義 helpers/utilities
@import "./helpers/utilities";

// Configuration
@import "../node_modules/bootstrap/scss/mixins";
@import "../node_modules/bootstrap/scss/utilities";

// 排版 &amp; 元件
// 基本預設
@import "../node_modules/bootstrap/scss/root";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";
// 常用
@import "../node_modules/bootstrap/scss/root";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";
@import "../node_modules/bootstrap/scss/images";
@import "../node_modules/bootstrap/scss/containers";
@import "../node_modules/bootstrap/scss/grid";
@import "../node_modules/bootstrap/scss/tables";
@import "../node_modules/bootstrap/scss/forms";
@import "../node_modules/bootstrap/scss/buttons";
// 會用到
@import "../node_modules/bootstrap/scss/card";

// 工具 Helpers
@import "../node_modules/bootstrap/scss/helpers";

// 通用類別 Utilities
@import "../node_modules/bootstrap/scss/utilities/api";

// 獨立元件
@import "./components/custom-buttons";
@import "./components/stepbar";</code></pre>



<pre class="wp-block-code"><code>// components/stepbar

.stepbar {
  // 原則 1：避免過多層級
  // 原則 2：盡可能使用變數
  $size: 3rem;

  display: flex;
  justify-content: space-between;
  position: relative;
  &amp;::after {
    content: "";
    top: 50%;
    left: 0;
    right: 0;
    height: 1px;
    background-color: lighten($primary, 20%);
    transform: translateY(-50%);
    position: absolute;
    z-index: -1;
  }

  // level 1 外層
  .stepbar-item {
    background-color: $primary;
    width: $size;
    height: $size;
    border-radius: $size;
    border: 1px solid white;

    color: white;
    display: flex;
    justify-content: center;
    align-items: center;

  }

  // 2
  // ...
  .stepbar-inner {

  }

  // 狀態
  .stepbar-item.active {
    box-shadow: 0 0 0 1px $primary;
  }
  .stepbar-item.active ~ .stepbar-item {
    background-color: $gray-500;
  }

}</code></pre>



<h2>CH11 – 學員專屬：Bootstrap 額外元件範例</h2>



<h3>學員專屬：Bootstrap 額外範例說明</h3>



<h3>額外元件範例資源下載</h3>



<p>下載請參考附近</p>



<p>此資源僅提供給予註冊「Bootstrap 5 網頁切版整合術」的學員使用。</p>



<h2>CH12 – 個人簡歷 – 練習使用 Sass 變數開發網頁</h2>



<h3>個人簡歷：匯入 Sass</h3>



<ol><li>安裝 package.json 檔案 – npm init</li><li>安裝 Bootstrap 套件 npm install bootstrap</li><li>建立 stylesheets 資料夾，在裡面建立 helpers 資料夾，從 node_modules 資料夾複製 _utilities.scss、_variables.scss 檔案到 helpers 資料夾裡面</li><li>建立 all.scss 檔案把 Bootstrap 匯入進來，可參考 Bootstrap 文件檔案，匯入 helpers 資料夾的 variables、utilities 檔案</li><li>使用 Watch Sass 把 all.scss 檔案編譯成 all.css 檔案</li><li>建立 index.html 檔案與內容、載入 all.css</li><li>修改 helpers/_variables.scss 檔案的 theme-color-variables，$primary: #9b5d42;、$secondary: #2a2e22;，主色彩和次色彩可以從圖片經由 Chrome Console 用吸取工具吸取調整，然後儲存</li><li>使用 VSCode 用 Live Server 開啟網頁</li></ol>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;個人簡歷-Sass開發&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;div class="container"&gt;
    &lt;img src="https://images.unsplash.com/photo-1501002138038-06806ed23bce?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=870&amp;q=80" alt=""&gt;
    &lt;a href="#" class="btn btn-primary"&gt;按鈕&lt;/a&gt;
    &lt;a href="#" class="btn btn-secondary"&gt;按鈕&lt;/a&gt;
  &lt;/div&gt;
  
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// all.scss

// Configuration
@import "../node_modules/bootstrap/scss/functions";
@import "./helpers/variables";
@import "./helpers/utilities";

@import "../node_modules/bootstrap/scss/mixins";

// Layout &amp; components
@import "../node_modules/bootstrap/scss/root";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";

@import "../node_modules/bootstrap/scss/images";
@import "../node_modules/bootstrap/scss/containers";
@import "../node_modules/bootstrap/scss/grid";
@import "../node_modules/bootstrap/scss/tables";
@import "../node_modules/bootstrap/scss/forms";
@import "../node_modules/bootstrap/scss/buttons";
@import "../node_modules/bootstrap/scss/transitions";
@import "../node_modules/bootstrap/scss/dropdown";
@import "../node_modules/bootstrap/scss/button-group";
@import "../node_modules/bootstrap/scss/nav";
@import "../node_modules/bootstrap/scss/navbar";
@import "../node_modules/bootstrap/scss/card";
@import "../node_modules/bootstrap/scss/accordion";
@import "../node_modules/bootstrap/scss/breadcrumb";
@import "../node_modules/bootstrap/scss/pagination";
@import "../node_modules/bootstrap/scss/badge";
@import "../node_modules/bootstrap/scss/alert";
@import "../node_modules/bootstrap/scss/progress";
@import "../node_modules/bootstrap/scss/list-group";
@import "../node_modules/bootstrap/scss/close";
@import "../node_modules/bootstrap/scss/toasts";
@import "../node_modules/bootstrap/scss/modal";
@import "../node_modules/bootstrap/scss/tooltip";
@import "../node_modules/bootstrap/scss/popover";
@import "../node_modules/bootstrap/scss/carousel";
@import "../node_modules/bootstrap/scss/spinners";
@import "../node_modules/bootstrap/scss/offcanvas";
@import "../node_modules/bootstrap/scss/placeholders";

// Helpers
@import "../node_modules/bootstrap/scss/helpers";

// Utilities
@import "../node_modules/bootstrap/scss/utilities/api";</code></pre>



<pre class="wp-block-code"><code>// stylesheets/helpers/_variables.scss

// scss-docs-start theme-color-variables
$primary:       #9b5d42; // $blue !default;
$secondary:     #2a2e22;  // $gray-600 !default;
$success:       $green !default;
$info:          $cyan !default;
$warning:       $yellow !default;
$danger:        $red !default;
$light:         $gray-100 !default;
$dark:          $gray-900 !default;
// scss-docs-end theme-color-variables</code></pre>



<ul><li><a href="https://getbootstrap.com/docs/5.1/customize/sass/" target="_blank" rel="noreferrer noopener">Customize &gt; Sass</a></li><li><a rel="noreferrer noopener" href="https://getbootstrap.com/docs/5.1/customize/optimize/" target="_blank">Customize &gt; Optimize</a></li></ul>



<h3>個人簡歷：課程相關資源</h3>



<p>本章節運用的大頭照連結 (課練習抽取色彩)：</p>



<ul><li><a href="https://unsplash.com/photos/70LUMmAw3L0" target="_blank" rel="noreferrer noopener">連結一</a></li><li><a href="https://unsplash.com/photos/G0yOf-OF-SA" target="_blank" rel="noreferrer noopener">連結二</a></li></ul>



<p>個人練習採用圖片</p>



<ul><li><a rel="noreferrer noopener" href="https://unsplash.com/photos/e5pqjD85NRg" target="_blank">Photo by Omar Lopez – 1</a></li><li><a href="https://unsplash.com/photos/LUPnb7e-4VQ" target="_blank" rel="noreferrer noopener">Photo by Omar Lopez – 2</a></li></ul>



<h3>個人簡歷：Header 首圖製作</h3>



<pre class="wp-block-code"><code>// index.html - 個人簡歷: Header 首圖製作

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;個人簡歷-Sass開發&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;style&gt;
    .bg-cover {
      background-size: cover;
      background-position: center center;
      background-repeat: no-repeat;
    }
    .bg-attachment-fixed {
      background-attachment: fixed;
    }
    .deco-box {
      height: 240px;
      width: 240px;
      background-color: var(--bs-secondary);
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;header class="min-vh-100 position-relative"&gt;
    &lt;div class="deco-box position-absolute top-0 start-0"&gt;&lt;/div&gt;
    &lt;div class="deco-box position-absolute bottom-0 end-0"&gt;&lt;/div&gt;
    &lt;div class="position-absolute bg-cover bg-attachment-fixed" style="top: 30px; left: 30px; right: 30px; bottom: 30px; background-image: url(https://images.unsplash.com/photo-1501002138038-06806ed23bce?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=870&amp;q=80)"&gt;&lt;/div&gt;
    &lt;div class="position-absolute top-50 start-50 translate-middle text-center text-success"&gt;
      &lt;h1 class="display-1 fw-bold"&gt;背包客&lt;/h1&gt;
      &lt;hr class="mb-1 mx-n3"&gt;
      &lt;h2&gt;Backpacker&lt;/h2&gt;
      &lt;p&gt;在對的道路上迷失是件多麼美好的事情。&lt;/p&gt;
    &lt;/div&gt;
  &lt;/header&gt;

&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// all.scss

// Configuration
@import "../node_modules/bootstrap/scss/functions";
@import "./helpers/variables";
@import "./helpers/utilities";

@import "../node_modules/bootstrap/scss/mixins";

// Layout &amp; components
@import "../node_modules/bootstrap/scss/root";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";

@import "../node_modules/bootstrap/scss/images";
@import "../node_modules/bootstrap/scss/containers";
@import "../node_modules/bootstrap/scss/grid";
@import "../node_modules/bootstrap/scss/tables";
@import "../node_modules/bootstrap/scss/forms";
@import "../node_modules/bootstrap/scss/buttons";
@import "../node_modules/bootstrap/scss/transitions";
@import "../node_modules/bootstrap/scss/dropdown";
@import "../node_modules/bootstrap/scss/button-group";
@import "../node_modules/bootstrap/scss/nav";
@import "../node_modules/bootstrap/scss/navbar";
@import "../node_modules/bootstrap/scss/card";
@import "../node_modules/bootstrap/scss/accordion";
@import "../node_modules/bootstrap/scss/breadcrumb";
@import "../node_modules/bootstrap/scss/pagination";
@import "../node_modules/bootstrap/scss/badge";
@import "../node_modules/bootstrap/scss/alert";
@import "../node_modules/bootstrap/scss/progress";
@import "../node_modules/bootstrap/scss/list-group";
@import "../node_modules/bootstrap/scss/close";
@import "../node_modules/bootstrap/scss/toasts";
@import "../node_modules/bootstrap/scss/modal";
@import "../node_modules/bootstrap/scss/tooltip";
@import "../node_modules/bootstrap/scss/popover";
@import "../node_modules/bootstrap/scss/carousel";
@import "../node_modules/bootstrap/scss/spinners";
@import "../node_modules/bootstrap/scss/offcanvas";
@import "../node_modules/bootstrap/scss/placeholders";

// Helpers
@import "../node_modules/bootstrap/scss/helpers";

// Utilities
@import "../node_modules/bootstrap/scss/utilities/api";</code></pre>



<pre class="wp-block-code"><code>// helpers/_variables.scss

// scss-docs-start theme-color-variables
$primary:       #9b5d42; // $blue !default;
$secondary:     #2a2e22;  // $gray-600 !default;
$success:       $green !default;
$info:          $cyan !default;
$warning:       $yellow !default;
$danger:        $red !default;
$light:         $gray-100 !default;
$dark:          $gray-900 !default;
// scss-docs-end theme-color-variables

// Options
//
// Quickly modify global styling by enabling or disabling optional features.

$enable-caret:                true !default;
$enable-rounded:              true !default;
$enable-shadows:              false !default;
$enable-gradients:            false !default;
$enable-transitions:          true !default;
$enable-reduced-motion:       true !default;
$enable-smooth-scroll:        true !default;
$enable-grid-classes:         true !default;
$enable-cssgrid:              false !default;
$enable-button-pointers:      true !default;
$enable-rfs:                  true !default;
$enable-validation-icons:     true !default;
$enable-negative-margins:     true; // false !default;
$enable-deprecation-messages: true !default;
$enable-important-utilities:  true !default;</code></pre>



<h3>個人簡歷：自我介紹區塊</h3>



<pre class="wp-block-code"><code>// index.html - 個人簡歷: 自我介紹區塊

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;個人簡歷-Sass開發&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;style&gt;
    .bg-cover {
      background-size: cover;
      background-position: center center;
      background-repeat: no-repeat;
    }
    .bg-attachment-fixed {
      background-attachment: fixed;
    }
    .object-fit-cover {
      object-fit: cover;
    }
    .deco-box {
      height: 240px;
      width: 240px;
      background-color: var(--bs-secondary);
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;!-- 個人簡歷: Header 首圖製作 start --&gt;
  &lt;header class="min-vh-100 position-relative"&gt;
    &lt;div class="deco-box position-absolute top-0 start-0"&gt;&lt;/div&gt;
    &lt;div class="deco-box position-absolute bottom-0 end-0"&gt;&lt;/div&gt;
    &lt;div class="position-absolute bg-cover bg-attachment-fixed" style="top: 30px; left: 30px; right: 30px; bottom: 30px; background-image: url(https://images.unsplash.com/photo-1501002138038-06806ed23bce?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=870&amp;q=80)"&gt;&lt;/div&gt;
    &lt;div class="position-absolute top-50 start-50 translate-middle text-center text-success"&gt;
      &lt;h1 class="display-1 fw-bold"&gt;背包客&lt;/h1&gt;
      &lt;hr class="mb-1 mx-n3"&gt;
      &lt;h2&gt;Backpacker&lt;/h2&gt;
      &lt;p&gt;在對的道路上迷失是件多麼美好的事情。&lt;/p&gt;
    &lt;/div&gt;
  &lt;/header&gt;
  &lt;!-- 個人簡歷: Header 首圖製作 end --&gt;

  &lt;!-- 個人簡歷: 自我介紹區塊 start --&gt;
  &lt;div class="container py-5"&gt;
    &lt;div class="row gy-3 justify-content-center flex-md-row-reverse"&gt;
      &lt;div class="col-md-4"&gt;
        &lt;img src="https://images.unsplash.com/photo-1509467283235-ad1568d50691?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=774&amp;q=80" class="w-100 object-fit-cover" height="500" alt=""&gt;
      &lt;/div&gt;
      &lt;div class="col-md-5 d-flex align-items-center"&gt;
        &lt;div&gt;
          &lt;h2 class="display-4"&gt;我的旅遊類型：&lt;/h2&gt;
          &lt;p&gt;背包客（英語：backpacker，衍生自backpacking一詞），就是背著背包做長途自助旅行的人，被稱呼為背包客的旅行者往往是在有限的預算下進行旅行活動，所以他們對於旅行的規劃、景點的獨到之處也常有自成一派的見解。&lt;/p&gt;
          &lt;p&gt;在旅遊界裡，擁有豐富經驗的背包客往往相當受人關注，此外，目前背包客也能泛指登山、露營、冒險活動的戶外活動參與者。類似旅遊形式還有沙發客，以低預算甚至免費的形式進行旅遊。&lt;/p&gt;
          &lt;a href="#" class="btn btn-outline-primary mt-4 w-100"&gt;
            看更多我的旅遊類型
          &lt;/a&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;!-- 個人簡歷: 自我介紹區塊 end --&gt;

&lt;/body&gt;
&lt;/html&gt;</code></pre>



<h3>個人簡歷：三欄式卡片運用</h3>



<p>在實作中建議先做其中一個就好了，因為在製作過程中會不斷調整，等到第一張卡片確定都沒有問題之後，再複製到下一張卡片。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/card/#image-overlays" target="_blank" rel="noreferrer noopener">元件 &gt; 卡片 (Card) &gt; 圖片 overlay</a></li></ul>



<h4>個人練習採用圖片</h4>



<ul><li><a rel="noreferrer noopener" href="https://unsplash.com/photos/7XAM0J3dNQM" target="_blank">Photo by Chris Galbraith</a></li><li><a rel="noreferrer noopener" href="https://unsplash.com/photos/xCiXro2avNI" target="_blank">Photo by Mathias P.R. Reding</a></li><li><a href="https://unsplash.com/photos/QldMpmrmWuc" target="_blank" rel="noreferrer noopener">Photo by Todd Trapani</a></li></ul>



<pre class="wp-block-code"><code>// index.html - 個人簡歷: 三欄式卡片運用

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;個人簡歷-Sass開發&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;style&gt;
    .bg-cover {
      background-size: cover;
      background-position: center center;
      background-repeat: no-repeat;
    }
    .bg-attachment-fixed {
      background-attachment: fixed;
    }
    .object-fit-cover {
      object-fit: cover;
    }
    .deco-box {
      height: 240px;
      width: 240px;
      background-color: var(--bs-secondary);
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;!-- 個人簡歷: Header 首圖製作 start --&gt;
  &lt;header class="min-vh-100 position-relative"&gt;
    &lt;div class="deco-box position-absolute top-0 start-0"&gt;&lt;/div&gt;
    &lt;div class="deco-box position-absolute bottom-0 end-0"&gt;&lt;/div&gt;
    &lt;div class="position-absolute bg-cover bg-attachment-fixed" style="top: 30px; left: 30px; right: 30px; bottom: 30px; background-image: url(https://images.unsplash.com/photo-1501002138038-06806ed23bce?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=870&amp;q=80)"&gt;&lt;/div&gt;
    &lt;div class="position-absolute top-50 start-50 translate-middle text-center text-success"&gt;
      &lt;h1 class="display-1 fw-bold"&gt;背包客&lt;/h1&gt;
      &lt;hr class="mb-1 mx-n3"&gt;
      &lt;h2&gt;Backpacker&lt;/h2&gt;
      &lt;p&gt;在對的道路上迷失是件多麼美好的事情。&lt;/p&gt;
    &lt;/div&gt;
  &lt;/header&gt;
  &lt;!-- 個人簡歷: Header 首圖製作 end --&gt;

  &lt;!-- 個人簡歷: 自我介紹區塊 start --&gt;
  &lt;div class="container py-5"&gt;
    &lt;div class="row gy-3 justify-content-center flex-md-row-reverse"&gt;
      &lt;div class="col-md-4"&gt;
        &lt;img src="https://images.unsplash.com/photo-1509467283235-ad1568d50691?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=774&amp;q=80" class="w-100 object-fit-cover" height="500" alt=""&gt;
      &lt;/div&gt;
      &lt;div class="col-md-5 d-flex align-items-center"&gt;
        &lt;div&gt;
          &lt;h2 class="display-4"&gt;我的旅遊類型：&lt;/h2&gt;
          &lt;p&gt;背包客（英語：backpacker，衍生自backpacking一詞），就是背著背包做長途自助旅行的人，被稱呼為背包客的旅行者往往是在有限的預算下進行旅行活動，所以他們對於旅行的規劃、景點的獨到之處也常有自成一派的見解。&lt;/p&gt;
          &lt;p&gt;在旅遊界裡，擁有豐富經驗的背包客往往相當受人關注，此外，目前背包客也能泛指登山、露營、冒險活動的戶外活動參與者。類似旅遊形式還有沙發客，以低預算甚至免費的形式進行旅遊。&lt;/p&gt;
          &lt;a href="#" class="btn btn-outline-primary mt-4 w-100"&gt;
            看更多我的旅遊類型
          &lt;/a&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;!-- 個人簡歷: 自我介紹區塊 end --&gt;

  &lt;!-- 個人簡歷: 三欄式卡片運用 start --&gt;
  &lt;div class="bg-light py-5 m-md-5"&gt;
    &lt;div class="container"&gt;
      &lt;h2 class="display-4 text-center mb-4"&gt;
        我的旅遊景點：
      &lt;/h2&gt;
      &lt;div class="row row-cols-1 row-cols-lg-3 g-4"&gt;
        &lt;div class="col"&gt;
          &lt;div class="card bg-dark text-white"&gt;
            &lt;img src="..." class="card-img" alt="..."&gt;
            &lt;div class="card-img-overlay"&gt;
              &lt;h5 class="card-title"&gt;Card title&lt;/h5&gt;
              &lt;p class="card-text"&gt;This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.&lt;/p&gt;
              &lt;p class="card-text"&gt;Last updated 3 mins ago&lt;/p&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="col"&gt;
          &lt;div class="card bg-dark text-white"&gt;
            &lt;img src="..." class="card-img" alt="..."&gt;
            &lt;div class="card-img-overlay"&gt;
              &lt;h5 class="card-title"&gt;Card title&lt;/h5&gt;
              &lt;p class="card-text"&gt;This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.&lt;/p&gt;
              &lt;p class="card-text"&gt;Last updated 3 mins ago&lt;/p&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="col"&gt;
          &lt;div class="card bg-dark text-white"&gt;
            &lt;img src="..." class="card-img" alt="..."&gt;
            &lt;div class="card-img-overlay"&gt;
              &lt;h5 class="card-title"&gt;Card title&lt;/h5&gt;
              &lt;p class="card-text"&gt;This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.&lt;/p&gt;
              &lt;p class="card-text"&gt;Last updated 3 mins ago&lt;/p&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;!-- 個人簡歷: 三欄式卡片運用 end --&gt;

&lt;/body&gt;
&lt;/html&gt;</code></pre>



<h3>個人簡歷：卡片樣式調整</h3>



<pre class="wp-block-code"><code>// index.html - 卡片樣式調整

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;個人簡歷-Sass開發&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;style&gt;
    .bg-cover {
      background-size: cover;
      background-position: center center;
      background-repeat: no-repeat;
    }
    .bg-attachment-fixed {
      background-attachment: fixed;
    }
    .bg-dark-gradient {
      /* linear-gradient(方向性, 色彩); */
      background-image: linear-gradient(180deg, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.8));
    }
    .object-fit-cover {
      object-fit: cover;
    }
    .deco-box {
      height: 240px;
      width: 240px;
      background-color: var(--bs-secondary);
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;!-- 個人簡歷: Header 首圖製作 start --&gt;
  &lt;header class="min-vh-100 position-relative"&gt;
    &lt;div class="deco-box position-absolute top-0 start-0"&gt;&lt;/div&gt;
    &lt;div class="deco-box position-absolute bottom-0 end-0"&gt;&lt;/div&gt;
    &lt;div class="position-absolute bg-cover bg-attachment-fixed" style="top: 30px; left: 30px; right: 30px; bottom: 30px; background-image: url(https://images.unsplash.com/photo-1501002138038-06806ed23bce?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=870&amp;q=80)"&gt;&lt;/div&gt;
    &lt;div class="position-absolute top-50 start-50 translate-middle text-center text-success"&gt;
      &lt;h1 class="display-1 fw-bold"&gt;背包客&lt;/h1&gt;
      &lt;hr class="mb-1 mx-n3"&gt;
      &lt;h2&gt;Backpacker&lt;/h2&gt;
      &lt;p&gt;在對的道路上迷失是件多麼美好的事情。&lt;/p&gt;
    &lt;/div&gt;
  &lt;/header&gt;
  &lt;!-- 個人簡歷: Header 首圖製作 end --&gt;

  &lt;!-- 個人簡歷: 自我介紹區塊 start --&gt;
  &lt;div class="container py-5"&gt;
    &lt;div class="row gy-3 justify-content-center flex-md-row-reverse"&gt;
      &lt;div class="col-md-4"&gt;
        &lt;img src="https://images.unsplash.com/photo-1509467283235-ad1568d50691?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=774&amp;q=80" class="w-100 object-fit-cover" height="500" alt=""&gt;
      &lt;/div&gt;
      &lt;div class="col-md-5 d-flex align-items-center"&gt;
        &lt;div&gt;
          &lt;h2 class="display-4"&gt;我的旅遊類型：&lt;/h2&gt;
          &lt;p&gt;背包客（英語：backpacker，衍生自backpacking一詞），就是背著背包做長途自助旅行的人，被稱呼為背包客的旅行者往往是在有限的預算下進行旅行活動，所以他們對於旅行的規劃、景點的獨到之處也常有自成一派的見解。&lt;/p&gt;
          &lt;p&gt;在旅遊界裡，擁有豐富經驗的背包客往往相當受人關注，此外，目前背包客也能泛指登山、露營、冒險活動的戶外活動參與者。類似旅遊形式還有沙發客，以低預算甚至免費的形式進行旅遊。&lt;/p&gt;
          &lt;a href="#" class="btn btn-outline-primary mt-4 w-100"&gt;
            看更多我的旅遊類型
          &lt;/a&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;!-- 個人簡歷: 自我介紹區塊 end --&gt;

  &lt;!-- 個人簡歷: 三欄式卡片運用 start --&gt;
  &lt;!-- 個人簡歷: 卡片樣式調整 start --&gt;
  &lt;div class="bg-light p-md-5 py-5 m-md-5"&gt;
    &lt;div class="container"&gt;
      &lt;h2 class="display-4 text-center mb-4"&gt;
        我的旅遊景點：
      &lt;/h2&gt;
      &lt;div class="row row-cols-1 row-cols-lg-3 g-4"&gt;
        &lt;div class="col"&gt;
          &lt;div class="card text-white border-5 h-100"&gt;
            &lt;img src="https://images.unsplash.com/photo-1534570122623-99e8378a9aa7?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=774&amp;q=80" class="card-img h-100 object-fit-cover" alt="..."&gt;
            &lt;div class="card-img-overlay top-auto bg-dark-gradient"&gt;
              &lt;h5 class="card-title"&gt;在海邊與大海近距離接觸&lt;/h5&gt;
              &lt;p class="card-text"&gt;在海邊可以望向大海，藉由海浪的聲音消除心中的壓力，在此刻我們與大海在此刻像是彼此訴說的朋友。&lt;/p&gt;
              &lt;a href="#" class="btn btn-outline-light stretched-link w-100"&gt;看內容&lt;/a&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="col"&gt;
          &lt;div class="card text-white border-5 h-100"&gt;
            &lt;img src="https://images.unsplash.com/photo-1553808354-cda09bba39dc?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=774&amp;q=80" class="card-img h-100 object-fit-cover" alt="..."&gt;
            &lt;div class="card-img-overlay top-auto bg-dark-gradient"&gt;
              &lt;h5 class="card-title"&gt;在山中生活與草木相伴&lt;/h5&gt;
              &lt;p class="card-text"&gt;在山中可以望向高山，藉由山中的慢步調與自然景觀，我們可以在此與草木相伴，就像有朋友靜靜地陪伴一樣。&lt;/p&gt;
              &lt;a href="#" class="btn btn-outline-light stretched-link w-100"&gt;看內容&lt;/a&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="col"&gt;
          &lt;div class="card text-white border-5 h-100"&gt;
            &lt;img src="https://images.unsplash.com/photo-1598920710727-e6c74781538c?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=774&amp;q=80" class="card-img h-100 object-fit-cover" alt="..."&gt;
            &lt;div class="card-img-overlay top-auto bg-dark-gradient"&gt;
              &lt;h5 class="card-title"&gt;向陽下的向日葵花海&lt;/h5&gt;
              &lt;p class="card-text"&gt;在好天氣下的向日葵花海，周圍花香環繞，我們可以聞著花香、看著一望無際的花海，讓我們身心上的心靈再次滋養。&lt;/p&gt;
              &lt;a href="#" class="btn btn-outline-light stretched-link w-100"&gt;看內容&lt;/a&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;!-- 個人簡歷: 卡片樣式調整 end --&gt;
  &lt;!-- 個人簡歷: 三欄式卡片運用 end --&gt;
  

&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// helpers/_variables.scss - 新增 $position-values 的 auto 樣式

// Position
//
// Define the edge positioning anchors of the position utilities.

// scss-docs-start position-map
$position-values: (
  0: 0,
  50: 50%,
  100: 100%,
  auto: auto
) !default;
// scss-docs-end position-map</code></pre>



<h3>個人簡歷：Footer 製作及表單驗證樣式調整</h3>



<pre class="wp-block-code"><code>// index.html - 個人簡歷: Footer 製作及表單驗證樣式調整

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;個人簡歷-Sass開發&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"&gt;
  &lt;style&gt;
    .bg-cover {
      background-size: cover;
      background-position: center center;
      background-repeat: no-repeat;
    }
    .bg-attachment-fixed {
      background-attachment: fixed;
    }
    .bg-dark-gradient {
      /* linear-gradient(方向性, 色彩); */
      background-image: linear-gradient(180deg, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.8));
    }
    .object-fit-cover {
      object-fit: cover;
    }
    .deco-box {
      height: 240px;
      width: 240px;
      background-color: var(--bs-secondary);
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;!-- 個人簡歷: Header 首圖製作 start --&gt;
  &lt;header class="min-vh-100 position-relative"&gt;
    &lt;div class="deco-box position-absolute top-0 start-0"&gt;&lt;/div&gt;
    &lt;div class="deco-box position-absolute bottom-0 end-0"&gt;&lt;/div&gt;
    &lt;div class="position-absolute bg-cover bg-attachment-fixed" style="top: 30px; left: 30px; right: 30px; bottom: 30px; background-image: url(https://images.unsplash.com/photo-1501002138038-06806ed23bce?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=870&amp;q=80)"&gt;&lt;/div&gt;
    &lt;div class="position-absolute top-50 start-50 translate-middle text-center text-success"&gt;
      &lt;h1 class="display-1 fw-bold"&gt;背包客&lt;/h1&gt;
      &lt;hr class="mb-1 mx-n3"&gt;
      &lt;h2&gt;Backpacker&lt;/h2&gt;
      &lt;p&gt;在對的道路上迷失是件多麼美好的事情。&lt;/p&gt;
    &lt;/div&gt;
  &lt;/header&gt;
  &lt;!-- 個人簡歷: Header 首圖製作 end --&gt;

  &lt;!-- 個人簡歷: 自我介紹區塊 start --&gt;
  &lt;div class="container py-5"&gt;
    &lt;div class="row gy-3 justify-content-center flex-md-row-reverse"&gt;
      &lt;div class="col-md-4"&gt;
        &lt;img src="https://images.unsplash.com/photo-1509467283235-ad1568d50691?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=774&amp;q=80" class="w-100 object-fit-cover" height="500" alt=""&gt;
      &lt;/div&gt;
      &lt;div class="col-md-5 d-flex align-items-center"&gt;
        &lt;div&gt;
          &lt;h2 class="display-4"&gt;我的旅遊類型：&lt;/h2&gt;
          &lt;p&gt;背包客（英語：backpacker，衍生自backpacking一詞），就是背著背包做長途自助旅行的人，被稱呼為背包客的旅行者往往是在有限的預算下進行旅行活動，所以他們對於旅行的規劃、景點的獨到之處也常有自成一派的見解。&lt;/p&gt;
          &lt;p&gt;在旅遊界裡，擁有豐富經驗的背包客往往相當受人關注，此外，目前背包客也能泛指登山、露營、冒險活動的戶外活動參與者。類似旅遊形式還有沙發客，以低預算甚至免費的形式進行旅遊。&lt;/p&gt;
          &lt;a href="#" class="btn btn-outline-primary mt-4 w-100"&gt;
            看更多我的旅遊類型
          &lt;/a&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;!-- 個人簡歷: 自我介紹區塊 end --&gt;

  &lt;!-- 個人簡歷: 三欄式卡片運用 start --&gt;
  &lt;!-- 個人簡歷: 卡片樣式調整 start --&gt;
  &lt;div class="bg-light p-md-5 py-5 m-md-5"&gt;
    &lt;div class="container"&gt;
      &lt;h2 class="display-4 text-center mb-4"&gt;
        我的旅遊景點：
      &lt;/h2&gt;
      &lt;div class="row row-cols-1 row-cols-lg-3 g-4"&gt;
        &lt;div class="col"&gt;
          &lt;div class="card text-white border-5 h-100"&gt;
            &lt;img src="https://images.unsplash.com/photo-1534570122623-99e8378a9aa7?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=774&amp;q=80" class="card-img h-100 object-fit-cover" alt="..."&gt;
            &lt;div class="card-img-overlay top-auto bg-dark-gradient"&gt;
              &lt;h5 class="card-title"&gt;在海邊與大海近距離接觸&lt;/h5&gt;
              &lt;p class="card-text"&gt;在海邊可以望向大海，藉由海浪的聲音消除心中的壓力，在此刻我們與大海在此刻像是彼此訴說的朋友。&lt;/p&gt;
              &lt;a href="#" class="btn btn-outline-light stretched-link w-100"&gt;看內容&lt;/a&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="col"&gt;
          &lt;div class="card text-white border-5 h-100"&gt;
            &lt;img src="https://images.unsplash.com/photo-1553808354-cda09bba39dc?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=774&amp;q=80" class="card-img h-100 object-fit-cover" alt="..."&gt;
            &lt;div class="card-img-overlay top-auto bg-dark-gradient"&gt;
              &lt;h5 class="card-title"&gt;在山中生活與草木相伴&lt;/h5&gt;
              &lt;p class="card-text"&gt;在山中可以望向高山，藉由山中的慢步調與自然景觀，我們可以在此與草木相伴，就像有朋友靜靜地陪伴一樣。&lt;/p&gt;
              &lt;a href="#" class="btn btn-outline-light stretched-link w-100"&gt;看內容&lt;/a&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="col"&gt;
          &lt;div class="card text-white border-5 h-100"&gt;
            &lt;img src="https://images.unsplash.com/photo-1598920710727-e6c74781538c?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=774&amp;q=80" class="card-img h-100 object-fit-cover" alt="..."&gt;
            &lt;div class="card-img-overlay top-auto bg-dark-gradient"&gt;
              &lt;h5 class="card-title"&gt;向陽下的向日葵花海&lt;/h5&gt;
              &lt;p class="card-text"&gt;在好天氣下的向日葵花海，周圍花香環繞，我們可以聞著花香、看著一望無際的花海，讓我們身心上的心靈再次滋養。&lt;/p&gt;
              &lt;a href="#" class="btn btn-outline-light stretched-link w-100"&gt;看內容&lt;/a&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;!-- 個人簡歷: 卡片樣式調整 end --&gt;
  &lt;!-- 個人簡歷: 三欄式卡片運用 end --&gt;

  &lt;!-- 個人簡歷: Footer 製作及表單驗證樣式調整 start --&gt;
  &lt;footer class="bg-primary p-5 text-white"&gt;
    &lt;div class="container"&gt;
      &lt;h2 class="display-4 text-center"&gt;做個背包客吧：&lt;/h2&gt;
      &lt;div class="row justify-content-center"&gt;
        &lt;div class="col-md-5"&gt;
          &lt;p&gt;有共同的興趣將能搭起友誼的橋樑&lt;/p&gt;
          &lt;h3 class="h4"&gt;聯絡方式&lt;/h3&gt;
          &lt;ul class="list-unstyled"&gt;
            &lt;li&gt;&lt;i class="bi bi-envelope"&gt;&lt;/i&gt; backpacker@email.com&lt;/li&gt;
            &lt;li&gt;&lt;i class="bi bi-telephone"&gt;&lt;/i&gt; 0989-123-456&lt;/li&gt;
          &lt;/ul&gt;
          &lt;h3 class="h4 mt-5"&gt;社群關注&lt;/h3&gt;
          &lt;ul class="list-unstyled"&gt;
            &lt;li&gt;&lt;i class="bi bi-instagram"&gt;&lt;/i&gt; backpacker&lt;/li&gt;
            &lt;li&gt;&lt;i class="bi bi-facebook"&gt;&lt;/i&gt; fb.me/backpacker&lt;/li&gt;
            &lt;li&gt;&lt;i class="bi bi-twitter"&gt;&lt;/i&gt; backpacker&lt;/li&gt;
          &lt;/ul&gt;
          &lt;p&gt;&amp;copy; 2022 by Backpacker. Created with Bootstrap 5.&lt;/p&gt;
          &lt;p&gt;Code by Gee Hsu.&lt;/p&gt;
        &lt;/div&gt;
        &lt;form class="col-md-5 needs-validation" novalidate&gt;
          &lt;div class="row g-2"&gt;
            &lt;div class="col-md-6"&gt;
              &lt;label for="validationServer01" class="form-label"&gt;姓氏 *&lt;/label&gt;
              &lt;input type="text" class="form-control" id="validationServer01" placeholder="背" required&gt;
              &lt;div class="valid-feedback"&gt;
                Looks good!
              &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class="col-md-6"&gt;
              &lt;label for="validationServer02" class="form-label"&gt;名 *&lt;/label&gt;
              &lt;input type="text" class="form-control" id="validationServer02" placeholder="包客" required&gt;
              &lt;div class="valid-feedback"&gt;
                Looks good!
              &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class="mb-3 col-12"&gt;
              &lt;label for="exampleFormControlInput1" class="form-label"&gt;Email *&lt;/label&gt;
              &lt;input type="email" class="form-control" id="exampleFormControlInput1" placeholder="name@example.com" required&gt;
              &lt;div class="invalid-feedback"&gt;
                請輸入 Email，拜託
              &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class="mb-3 col-12"&gt;
              &lt;label for="exampleFormControlTextarea1" class="form-label"&gt;留些訊息給我吧 *&lt;/label&gt;
              &lt;textarea class="form-control" id="exampleFormControlTextarea1" rows="3" required&gt;&lt;/textarea&gt;
            &lt;/div&gt;
            &lt;div class="text-end col-12"&gt;
              &lt;button class="btn btn-outline-light" type="submit"&gt;送出表單&lt;/button&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/form&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/footer&gt;
  &lt;!-- 個人簡歷: Footer 製作及表單驗證樣式調整 end --&gt;
  

  &lt;script&gt;
    // 表單驗證
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
      'use strict'

      // Fetch all the forms we want to apply custom Bootstrap validation styles to
      var forms = document.querySelectorAll('.needs-validation')

      // Loop over them and prevent submission
      Array.prototype.slice.call(forms)
        .forEach(function (form) {
          form.addEventListener('submit', function (event) {
            if (!form.checkValidity()) {
              event.preventDefault()
              event.stopPropagation()
            }

            form.classList.add('was-validated')
          }, false)
        })
    })()
  &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// helpers/_variables.scss
// 修改驗證顏色方式一
// scss-docs-start theme-color-variables
$primary:       #9b5d42; // $blue !default;
$secondary:     #2a2e22;  // $gray-600 !default;
$success:       #00ff89; // $green !default;
$info:          $cyan !default;
$warning:       $yellow !default;
$danger:        $red !default;
$light:         $gray-100 !default;
$dark:          $gray-900 !default;
// scss-docs-end theme-color-variables

// 修改驗證顏色方式二
// Form validation

// scss-docs-start form-feedback-variables
$form-feedback-margin-top:          $form-text-margin-top !default;
$form-feedback-font-size:           $form-text-font-size !default;
$form-feedback-font-style:          $form-text-font-style !default;
$form-feedback-valid-color:         $success !default;
$form-feedback-invalid-color:       #f1aeb5; // $danger !default;

$form-feedback-icon-valid-color:    $form-feedback-valid-color !default;
$form-feedback-icon-valid:          url("data:image/svg+xml,&lt;svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'&gt;&lt;path fill='#{$form-feedback-icon-valid-color}' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/&gt;&lt;/svg&gt;") !default;
$form-feedback-icon-invalid-color:  $form-feedback-invalid-color !default;
$form-feedback-icon-invalid:        url("data:image/svg+xml,&lt;svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='#{$form-feedback-icon-invalid-color}'&gt;&lt;circle cx='6' cy='6' r='4.5'/&gt;&lt;path stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/&gt;&lt;circle cx='6' cy='8.2' r='.6' fill='#{$form-feedback-icon-invalid-color}' stroke='none'/&gt;&lt;/svg&gt;") !default;
// scss-docs-end form-feedback-variables</code></pre>



<ul><li><a href="https://icons.getbootstrap.com/" target="_blank" rel="noreferrer noopener">Bootstrap Icons</a></li><li><a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.1/forms/validation/#server-side" target="_blank">表單 &gt; 驗證 &gt; 伺服器端</a></li><li><a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.1/forms/form-control/" target="_blank">表單 &gt; 表單控制</a></li><li><a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.1/forms/validation/" target="_blank">表單 &gt; 驗證</a></li></ul>



<h3 class="has-background" style="background-color:#ff6663">個人簡歷：整理 Sass 專案檔案</h3>



<h4>操作步驟</h4>



<ol><li>在 stylesheets 資料夾建立 components 資料夾，並在 components 資料夾新增 _deco-box.scss 檔案，從 helpers/_variables.scss 檔案把 $secondary 變數貼到 _deco-box.scss 的 background-color 地方</li><li>在 all.scss 把 _deco-box.scss 檔案引入進來</li><li>把可以定義成 utilities 的樣式從 index.html &lt;style&gt; 給抽離出來，建議所抽離的是比較單純的樣式，通常自己客製化的會加在最下面，像是在這邊的 .bg-attachment-fixed 這個就可以把它加到我們的 helpers/_utilities.scss 檔案裡面來</li><li>打開 helpers/_utilities.scss 檔案，自定義的設定會放在最後面的地方，這裡可以加入我們自己的 utilities，可以先加上 custom 的註解，然後接下來我們就把相關的自定義樣式給建立起來。首先建立的第一個是我們的 .bg-attachment-fixed 這一個，把 bg-attachment 這個名稱先放在這個前面，然後加入一個大括號，加入大括號之後我們要定義的屬性 property，我們要使用的屬性會是 background-attachment 的這個屬性，那我們就把這個屬性給貼過來，貼過來之後我們會再補一個逗號。目前來說這有一個問題應該是用小括號而不是大括號，因為寫 JS 的話是使用一個花括號，但在這個地方必需使用小括號。那要注意如果你這邊畫面上如果出現像這樣有個紅色的一個提示，代表我們撰寫有錯誤，目前來說這邊要使用逗號，然後我們在前面的 “visibility” 後面這邊括號後面還要補上一個逗號，這樣才是正確的。這邊我們使用的 class name 是 bg-attachment 的，那我們就把這個 bg-attachment 也把它貼過來，這是我們要用的 class name。在後面可以撰寫相對應的一些樣式，那麼所適用的樣式目前只有使用 fixed，那麼我們可以先加入 fixed 就好，那這樣的話我們就會把這樣式加入到 utilities 統一進行管理。</li><li>那我們再把另外一個樣式也把它給加進來，另外一個樣式就是 object-fit 這個樣式，我們使用相同的方式把它給貼過來，然後它所套用的屬性則是另外一個屬性 object-fit，那我們把它貼過來，那它所套用的值則是 cover。如果說你有其他的值，像是 contain 或者是其他的 object-fit 會用到的值，也都可以加到 values 裡面。存檔之後就可以把在 &lt;style&gt; 裡面的 .object-fit-cover、.bg-attachment-fixed 給移除，存檔之後回到畫面上可以得到一個相同的結果。我們可以看到畫面上的底圖它一樣是固定在原位，就算我們把 &lt;style&gt; 的樣式清除掉。</li><li>接下來再畫面上還有一個 .bg-cover、以及 .bg-dark-gradient 這兩個就不一定適合放到 utilities 裡面，那這個時候該怎麼做，會比較建議在 components 資料夾再新增一個 _utilities.scss 檔案，這個檔案就放剩餘不知道該怎麼做管理的單獨樣式，就可以放在這個檔案裡面。如果太多的話，建議稍作整理，然後把它抽離出來。這邊就把剩餘的一些樣式把它給放過來，一樣把 &lt;style&gt; 清空之後存檔。當然我們把它獨立成一個檔案之後，我們一樣回到 all.scss 必需把它匯入進來才可以做運作，我們一樣使用 @import 的方式把剛剛剩餘的 utilities 給匯入進來，存檔之後等到它編譯完成，在畫面上就可以看到這些樣式</li></ol>



<pre class="wp-block-code"><code>// stylesheets/components/_deco-box.scss

.deco-box {
      height: 240px;
      width: 240px;
      background-color: $secondary;
    }</code></pre>



<pre class="wp-block-code"><code>// all.scss - 2

// Configuration
@import "../node_modules/bootstrap/scss/functions";
@import "./helpers/variables";
@import "./helpers/utilities";

@import "../node_modules/bootstrap/scss/mixins";

// Layout &amp; components
@import "../node_modules/bootstrap/scss/root";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";

@import "../node_modules/bootstrap/scss/images";
@import "../node_modules/bootstrap/scss/containers";
@import "../node_modules/bootstrap/scss/grid";
@import "../node_modules/bootstrap/scss/tables";
@import "../node_modules/bootstrap/scss/forms";
@import "../node_modules/bootstrap/scss/buttons";
@import "../node_modules/bootstrap/scss/transitions";
@import "../node_modules/bootstrap/scss/dropdown";
@import "../node_modules/bootstrap/scss/button-group";
@import "../node_modules/bootstrap/scss/nav";
@import "../node_modules/bootstrap/scss/navbar";
@import "../node_modules/bootstrap/scss/card";
@import "../node_modules/bootstrap/scss/accordion";
@import "../node_modules/bootstrap/scss/breadcrumb";
@import "../node_modules/bootstrap/scss/pagination";
@import "../node_modules/bootstrap/scss/badge";
@import "../node_modules/bootstrap/scss/alert";
@import "../node_modules/bootstrap/scss/progress";
@import "../node_modules/bootstrap/scss/list-group";
@import "../node_modules/bootstrap/scss/close";
@import "../node_modules/bootstrap/scss/toasts";
@import "../node_modules/bootstrap/scss/modal";
@import "../node_modules/bootstrap/scss/tooltip";
@import "../node_modules/bootstrap/scss/popover";
@import "../node_modules/bootstrap/scss/carousel";
@import "../node_modules/bootstrap/scss/spinners";
@import "../node_modules/bootstrap/scss/offcanvas";
@import "../node_modules/bootstrap/scss/placeholders";

// Helpers
@import "../node_modules/bootstrap/scss/helpers";

// Utilities
@import "../node_modules/bootstrap/scss/utilities/api";

// components
@import "./components/deco-box";</code></pre>



<pre class="wp-block-code"><code>// helpers/_utilities.scss

// custom
    "bg-attachment": (
      property: background-attachment,
      class: "bg-attachment",
      values: fixed
    ),
    "object-fit": (
      property: object-fit,
      class: "object-fit",
      values: cover
    )</code></pre>



<pre class="wp-block-code"><code>// components/_utilities.scss

.bg-cover {
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
}
.bg-dark-gradient {
  /* linear-gradient(方向性, 色彩); */
  background-image: linear-gradient(180deg, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.8));
}</code></pre>



<pre class="wp-block-code"><code>// all.scss

// components
@import "./components/deco-box";
@import "./components/utilities";</code></pre>



<h3>個人簡歷：範例作業下載</h3>



<p>注意：</p>



<ul><li>此檔案僅用來參考，請勿複製程式碼</li></ul>



<h2 class="has-background" style="background-color:#ff6663">CH13 – 後台管理 – 功能性為導向的介面規劃</h2>



<h3>後台管理：章節說明</h3>



<h4>操作步驟</h4>



<ol><li>使用 npm init 建立 package.json 檔案</li><li>使用 npm 安裝 Bootstrap，npm install bootstrap</li><li>建立 stylesheets 資料夾，在裡面建立 components、helpers 資料夾</li><li>從 node_modules &gt; bootstrap &gt; scss 裡面的 _variables.scss、_utilities.scss 複製到 helpers 資料夾裡面</li><li>使用 Watch Sass 從 scss 檔案編譯成 css 檔案</li><li>建立 index.html 把 all.css、bootstrap icons cdn 載入</li><li>建立 .gitignore 檔案</li></ol>



<pre class="wp-block-code"><code>// all.scss

// Configuration
@import "../node_modules/bootstrap/scss/functions";
@import "./helpers/variables";
@import "./helpers/utilities";

@import "../node_modules/bootstrap/scss/mixins";

// Layout &amp; components
@import "../node_modules/bootstrap/scss/root";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";
@import "../node_modules/bootstrap/scss/images";
@import "../node_modules/bootstrap/scss/containers";
@import "../node_modules/bootstrap/scss/grid";
@import "../node_modules/bootstrap/scss/tables";
@import "../node_modules/bootstrap/scss/forms";
@import "../node_modules/bootstrap/scss/buttons";
@import "../node_modules/bootstrap/scss/transitions";
@import "../node_modules/bootstrap/scss/dropdown";
@import "../node_modules/bootstrap/scss/button-group";
@import "../node_modules/bootstrap/scss/nav";
@import "../node_modules/bootstrap/scss/navbar";
@import "../node_modules/bootstrap/scss/card";
@import "../node_modules/bootstrap/scss/accordion";
@import "../node_modules/bootstrap/scss/breadcrumb";
@import "../node_modules/bootstrap/scss/pagination";
@import "../node_modules/bootstrap/scss/badge";
@import "../node_modules/bootstrap/scss/alert";
@import "../node_modules/bootstrap/scss/progress";
@import "../node_modules/bootstrap/scss/list-group";
@import "../node_modules/bootstrap/scss/close";
@import "../node_modules/bootstrap/scss/toasts";
@import "../node_modules/bootstrap/scss/modal";
@import "../node_modules/bootstrap/scss/tooltip";
@import "../node_modules/bootstrap/scss/popover";
@import "../node_modules/bootstrap/scss/carousel";
@import "../node_modules/bootstrap/scss/spinners";
@import "../node_modules/bootstrap/scss/offcanvas";
@import "../node_modules/bootstrap/scss/placeholders";

// Helpers
@import "../node_modules/bootstrap/scss/helpers";

// Utilities
@import "../node_modules/bootstrap/scss/utilities/api";</code></pre>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;後台管理 - 首頁&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"&gt;
&lt;/head&gt;
&lt;body&gt;
  
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// .gitignore

.DS_Store
node_modules
/dist


# local env files
.env.local
.env.*.local

# Log files
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*

# Editor directories and files
.idea
.vscode
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
</code></pre>



<h3>後台管理：結構規劃</h3>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;後台管理 - 首頁&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;!-- 後台管理：結構規劃 start --&gt;
  &lt;div class="d-flex"&gt;
    &lt;aside class="sidebar vh-100 border-end"&gt;

    &lt;/aside&gt;
    &lt;main class="main"&gt;
      &lt;div class="bg-white w-100 border-bottom"&gt;
        &lt;a href="#" class="d-inline-block py-3 px-4 border-end"&gt;
          &lt;i class="bi bi-arrows-angle-expand"&gt;&lt;/i&gt;
        &lt;/a&gt;
      &lt;/div&gt;
    &lt;/main&gt;
  &lt;/div&gt;
  &lt;!-- 後台管理：結構規劃 end --&gt;

&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// components/_sidebar.scss

$sidebar-width: 280px;

.sidebar {
  width: $sidebar-width;
}
.main {
  width: calc(100vw - #{$sidebar-width});
  // 變數視為一個字串
}</code></pre>



<pre class="wp-block-code"><code>// all.scss

// Configuration
@import "../node_modules/bootstrap/scss/functions";
@import "./helpers/variables";
@import "./helpers/utilities";

@import "../node_modules/bootstrap/scss/mixins";

// Layout &amp; components
@import "../node_modules/bootstrap/scss/root";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";
@import "../node_modules/bootstrap/scss/images";
@import "../node_modules/bootstrap/scss/containers";
@import "../node_modules/bootstrap/scss/grid";
@import "../node_modules/bootstrap/scss/tables";
@import "../node_modules/bootstrap/scss/forms";
@import "../node_modules/bootstrap/scss/buttons";
@import "../node_modules/bootstrap/scss/transitions";
@import "../node_modules/bootstrap/scss/dropdown";
@import "../node_modules/bootstrap/scss/button-group";
@import "../node_modules/bootstrap/scss/nav";
@import "../node_modules/bootstrap/scss/navbar";
@import "../node_modules/bootstrap/scss/card";
@import "../node_modules/bootstrap/scss/accordion";
@import "../node_modules/bootstrap/scss/breadcrumb";
@import "../node_modules/bootstrap/scss/pagination";
@import "../node_modules/bootstrap/scss/badge";
@import "../node_modules/bootstrap/scss/alert";
@import "../node_modules/bootstrap/scss/progress";
@import "../node_modules/bootstrap/scss/list-group";
@import "../node_modules/bootstrap/scss/close";
@import "../node_modules/bootstrap/scss/toasts";
@import "../node_modules/bootstrap/scss/modal";
@import "../node_modules/bootstrap/scss/tooltip";
@import "../node_modules/bootstrap/scss/popover";
@import "../node_modules/bootstrap/scss/carousel";
@import "../node_modules/bootstrap/scss/spinners";
@import "../node_modules/bootstrap/scss/offcanvas";
@import "../node_modules/bootstrap/scss/placeholders";

// Helpers
@import "../node_modules/bootstrap/scss/helpers";

// Utilities
@import "../node_modules/bootstrap/scss/utilities/api";


// components
@import "./components/sidebar";</code></pre>



<h3 class="has-background" style="background-color:#ff6663">後台管理：可收合的側欄選單</h3>



<p>算是這個章節比較複雜的部份。</p>



<h4>製作內容說明</h4>



<ol><li>製作行動版、桌面版的差異</li><li>選單收合</li><li>套用 JS</li></ol>



<pre class="wp-block-code"><code>// components/_sidebar.scss

$sidebar-width: 280px;

// 行動版 (預設)
.sidebar {
  width: $sidebar-width;
  margin-left: -$sidebar-width;
  transition: margin-left .25s;
}
.main {
  width: 100%;
}

// 展開 sidebar
.sidebar-toggled {
  .sidebar {
    margin-left: 0;
  }
}


// 桌面版(up)
@include media-breakpoint-up(lg) {
  .sidebar {
    margin-left: 0;
    width: $sidebar-width;
  }
  .main {
    width: calc(100vw - #{$sidebar-width});
    // 變數視為一個字串
  }

  // 展開
  .sidebar-toggled {
    .sidebar {
      margin-left: -$sidebar-width;
    }
    .main {
      width: 100%;
      margin-left: 0;
    }
  }
}</code></pre>



<pre class="wp-block-code"><code>// javascripts/all.js

const toggleMenuBtn = document.querySelector('#toggle-btn');
const body = document.querySelector('body');
toggleMenuBtn.addEventListener('click', (evt) =&gt; {
  // console.log(evt);
  evt.preventDefault();
  body.classList.toggle('sidebar-toggled');
});</code></pre>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;後台管理 - 首頁&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;!-- 後台管理：結構規劃 start --&gt;
  &lt;div class="d-flex"&gt;
    &lt;aside class="sidebar vh-100 border-end"&gt;

    &lt;/aside&gt;
    &lt;main class="main"&gt;
      &lt;div class="bg-white w-100 border-bottom"&gt;
        &lt;a href="#" class="d-inline-block py-3 px-4 border-end" id="toggle-btn"&gt;
          &lt;i class="bi bi-arrows-angle-expand"&gt;&lt;/i&gt;
        &lt;/a&gt;
      &lt;/div&gt;
    &lt;/main&gt;
  &lt;/div&gt;
  &lt;!-- 後台管理：結構規劃 end --&gt;

  &lt;script src="./javascripts/all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/layout/breakpoints/#media-queries" target="_blank" rel="noreferrer noopener">排版 &gt; 斷點 (Breakpoints) &gt; Media queries</a></li></ul>



<h3>後台管理：側欄選單內容</h3>



<p>側欄選單內容的程式碼：</p>



<pre class="wp-block-code"><code>// CSS

.sidebar {
 .sidebar-link {
  color: $dark;
  display: block;
  text-decoration: none;
  padding-top: 0.875rem;
  padding-bottom: 0.875rem;
  &amp;:hover {
   background-color: rgba($primary, 0.16);
  }
 }
 .sidebar-link.active {
  position: relative;
  color: $primary !important;
  background-color: rgba($primary, 0.16);
  &amp;::after {
   content: "";
   position: absolute;
   top: 0;
   left: 2px;
   height: 100%;
   width: 3px;
   background: $primary;
  }
 }
}</code></pre>



<pre class="wp-block-code"><code>// stylesheets/components/_sidebar.scss

$sidebar-width: 280px;

// 行動版 (預設)
.sidebar {
  width: $sidebar-width;
  margin-left: -$sidebar-width;
  transition: margin-left .25s;
  // sidebar-link
  .sidebar-link {
    color: $dark;
    display: block;
    text-decoration: none;
    padding-top: 0.875rem;
    padding-bottom: 0.875rem;
    &amp;:hover {
      background-color: rgba($primary, 0.16);
    }
  }
  .sidebar-link.active {
    position: relative;
    color: $primary !important;
    background-color: rgba($primary, 0.16);
    &amp;::after {
      content: "";
      position: absolute;
      top: 0;
      left: 2px;
      height: 100%;
      width: 3px;
      background: $primary;
    }
  }
}
.main {
  width: 100%;
}

// 展開 sidebar
.sidebar-toggled {
  .sidebar {
    margin-left: 0;
  }
}


// 桌面版(up)
@include media-breakpoint-up(lg) {
  .sidebar {
    margin-left: 0;
    width: $sidebar-width;
  }
  .main {
    width: calc(100vw - #{$sidebar-width});
    // 變數視為一個字串
  }

  // 展開
  .sidebar-toggled {
    .sidebar {
      margin-left: -$sidebar-width;
    }
    .main {
      width: 100%;
      margin-left: 0;
    }
  }
}</code></pre>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;後台管理 - 首頁&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;!-- 後台管理：結構規劃 start --&gt;
  &lt;div class="d-flex"&gt;
    &lt;aside class="sidebar vh-100 border-end pt-3 d-flex bg-white flex-column"&gt;
      &lt;!-- 1. 後台名稱 --&gt;
      &lt;div class="px-4"&gt;
        &lt;strong&gt;食品專賣店&lt;/strong&gt;
        - 後台管理
      &lt;/div&gt;
      &lt;!-- 2. 選單 --&gt;
      &lt;div class="overflow-auto mt-3"&gt;
        &lt;div&gt;
          &lt;a href="#" class="sidebar-link active"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-house me-2"&gt;&lt;/i&gt;
              首頁
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;

        &lt;div&gt;
          &lt;a href="#menu-order" class="sidebar-link" data-bs-toggle="collapse"&gt;
            &lt;div class="d-flex justify-content-between px-4"&gt;
              &lt;p class="mb-0"&gt;
                &lt;i class="bi bi-card-checklist me-2"&gt;&lt;/i&gt;
                訂單管理
              &lt;/p&gt;
              &lt;i class="bi bi-caret-down"&gt;&lt;/i&gt;
            &lt;/div&gt;
          &lt;/a&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="#" class="sidebar-link"&gt;
              &lt;div class="ps-5"&gt;
                其他項目
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;!-- 3. 登出按鈕 --&gt;
      &lt;a href="#" class="mt-auto sidebar-link"&gt;
        &lt;div class="px-4"&gt;
          &lt;i class="bi bi-box-arrow-right me-2"&gt;&lt;/i&gt;
          登出
        &lt;/div&gt;
      &lt;/a&gt;
    &lt;/aside&gt;
    &lt;main class="main"&gt;
      &lt;div class="bg-white w-100 border-bottom"&gt;
        &lt;a href="#" class="d-inline-block py-3 px-4 border-end" id="toggle-btn"&gt;
          &lt;i class="bi bi-arrows-angle-expand"&gt;&lt;/i&gt;
        &lt;/a&gt;
      &lt;/div&gt;
    &lt;/main&gt;
  &lt;/div&gt;
  &lt;!-- 後台管理：結構規劃 end --&gt;

  &lt;!-- JavaScript Bundle with Popper --&gt;
  &lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-/bQdsTh/da6pkI1MST/rWKFNjaCP5gBSY4sEBT38Q/9RBh9AH40zEOg7Hlq2THRZ" crossorigin="anonymous"&gt;&lt;/script&gt;
  &lt;script src="./javascripts/all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// helpers/_variables.scss

// scss-docs-start theme-color-variables
$primary:       #973aa8; // $blue !default;
$secondary:     $gray-600 !default;
$success:       $green !default;
$info:          $cyan !default;
$warning:       $yellow !default;
$danger:        $red !default;
$light:         $gray-100 !default;
$dark:          $gray-900 !default;
// scss-docs-end theme-color-variables</code></pre>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/collapse/" target="_blank" rel="noreferrer noopener">元件 &gt; 摺疊</a></li></ul>



<h3 class="has-background" style="background-color:#ff6663">後台管理：版型整理</h3>



<p>側欄和導覽列每個頁面是共用的，在實戰中會使用後端的 Template language 製作，前端方式會用 Vue, React 來製作。<br><br>以這堂課程來說不會介紹這些技術，那如何管理這些共用的版型，會比較建議目前製作的部分 index.html 改名為 layout.html 檔案。<br><br>接下來如果你要調整外面的版型都從 layout.html 去做調整，到時候再覆蓋到原始的檔案，就比較不會出錯。</p>



<pre class="wp-block-code"><code>// layout.html

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;後台管理 - 首頁&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;!-- 後台管理：結構規劃 start --&gt;
  &lt;div class="d-flex"&gt;
    &lt;aside class="sidebar vh-100 border-end pt-3 d-flex bg-white flex-column"&gt;
      &lt;!-- 1. 後台名稱 --&gt;
      &lt;div class="px-4"&gt;
        &lt;strong&gt;食品專賣店&lt;/strong&gt;
        - 後台管理
      &lt;/div&gt;
      &lt;!-- 2. 選單 --&gt;
      &lt;div class="overflow-auto mt-3"&gt;
        &lt;div&gt;
          &lt;a href="#" class="sidebar-link active"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-house me-2"&gt;&lt;/i&gt;
              首頁
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;

        &lt;div&gt;
          &lt;a href="#menu-order" class="sidebar-link" data-bs-toggle="collapse"&gt;
            &lt;div class="d-flex justify-content-between px-4"&gt;
              &lt;p class="mb-0"&gt;
                &lt;i class="bi bi-card-checklist me-2"&gt;&lt;/i&gt;
                訂單管理
              &lt;/p&gt;
              &lt;i class="bi bi-caret-down"&gt;&lt;/i&gt;
            &lt;/div&gt;
          &lt;/a&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="#" class="sidebar-link"&gt;
              &lt;div class="ps-5"&gt;
                其他項目
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;!-- 3. 登出按鈕 --&gt;
      &lt;a href="#" class="mt-auto sidebar-link"&gt;
        &lt;div class="px-4"&gt;
          &lt;i class="bi bi-box-arrow-right me-2"&gt;&lt;/i&gt;
          登出
        &lt;/div&gt;
      &lt;/a&gt;
    &lt;/aside&gt;
    &lt;main class="main"&gt;
      &lt;div class="bg-white w-100 border-bottom sticky-top"&gt;
        &lt;a href="#" class="d-inline-block py-3 px-4 border-end" id="toggle-btn"&gt;
          &lt;i class="bi bi-arrows-angle-expand"&gt;&lt;/i&gt;
        &lt;/a&gt;
      &lt;/div&gt;

      &lt;div&gt;
        &lt;!-- 主要內容 --&gt;
        &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;
      &lt;/div&gt;

    &lt;/main&gt;
  &lt;/div&gt;
  &lt;!-- 後台管理：結構規劃 end --&gt;

  &lt;!-- JavaScript Bundle with Popper --&gt;
  &lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-/bQdsTh/da6pkI1MST/rWKFNjaCP5gBSY4sEBT38Q/9RBh9AH40zEOg7Hlq2THRZ" crossorigin="anonymous"&gt;&lt;/script&gt;
  &lt;script src="./javascripts/all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// stylesheets/components/_sidebar.scss

$sidebar-width: 280px;

// 行動版 (預設)
.sidebar {
  width: $sidebar-width;
  margin-left: -$sidebar-width;
  transition: margin-left .25s;
  position: fixed;
  top: 0;
  // sidebar-link
  .sidebar-link {
    color: $dark;
    display: block;
    text-decoration: none;
    padding-top: 0.875rem;
    padding-bottom: 0.875rem;
    &amp;:hover {
      background-color: rgba($primary, 0.16);
    }
  }
  .sidebar-link.active {
    position: relative;
    color: $primary !important;
    background-color: rgba($primary, 0.16);
    &amp;::after {
      content: "";
      position: absolute;
      top: 0;
      left: 2px;
      height: 100%;
      width: 3px;
      background: $primary;
    }
  }
}
.main {
  width: 100%;
}

// 展開 sidebar
.sidebar-toggled {
  .sidebar {
    margin-left: 0;
  }
  .main {
    margin-left: $sidebar-width;
  }
}


// 桌面版(up)
@include media-breakpoint-up(lg) {
  .sidebar {
    margin-left: 0;
    width: $sidebar-width;
  }
  .main {
    width: calc(100vw - #{$sidebar-width});
    margin-left: $sidebar-width;
    transition: margin-left .25s;
    // 變數視為一個字串
  }

  // 展開
  .sidebar-toggled {
    .sidebar {
      margin-left: -$sidebar-width;
    }
    .main {
      width: 100%;
      margin-left: 0;
    }
  }
}</code></pre>



<h3 class="has-background" style="background-color:#ff6663">後台管理：常見卡片區塊結構</h3>



<pre class="wp-block-code"><code>// layout.html

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;後台管理 - 首頁&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;!-- 後台管理：結構規劃 start --&gt;
  &lt;div class="d-flex"&gt;
    &lt;aside class="sidebar vh-100 border-end pt-3 d-flex bg-white flex-column"&gt;
      &lt;!-- 1. 後台名稱 --&gt;
      &lt;div class="px-4"&gt;
        &lt;strong&gt;食品專賣店&lt;/strong&gt;
        - 後台管理
      &lt;/div&gt;
      &lt;!-- 2. 選單 --&gt;
      &lt;div class="overflow-auto mt-3"&gt;
        &lt;div&gt;
          &lt;a href="#" class="sidebar-link active"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-house me-2"&gt;&lt;/i&gt;
              首頁
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;

        &lt;div&gt;
          &lt;a href="#menu-order" class="sidebar-link" data-bs-toggle="collapse"&gt;
            &lt;div class="d-flex justify-content-between px-4"&gt;
              &lt;p class="mb-0"&gt;
                &lt;i class="bi bi-card-checklist me-2"&gt;&lt;/i&gt;
                訂單管理
              &lt;/p&gt;
              &lt;i class="bi bi-caret-down"&gt;&lt;/i&gt;
            &lt;/div&gt;
          &lt;/a&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="#" class="sidebar-link"&gt;
              &lt;div class="ps-5"&gt;
                其他項目
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div&gt;
          &lt;a href="#" class="sidebar-link"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-card-list me-2"&gt;&lt;/i&gt;
              產品列表
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;
        &lt;div&gt;
          &lt;a href="#" class="sidebar-link"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-list-stars me-2"&gt;&lt;/i&gt;
              顧客評價
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;!-- 3. 登出按鈕 --&gt;
      &lt;a href="#" class="mt-auto sidebar-link"&gt;
        &lt;div class="px-4"&gt;
          &lt;i class="bi bi-box-arrow-right me-2"&gt;&lt;/i&gt;
          登出
        &lt;/div&gt;
      &lt;/a&gt;
    &lt;/aside&gt;
    &lt;main class="main"&gt;
      &lt;div class="bg-white w-100 border-bottom sticky-top"&gt;
        &lt;a href="#" class="d-inline-block py-3 px-4 border-end" id="toggle-btn"&gt;
          &lt;i class="bi bi-arrows-angle-expand"&gt;&lt;/i&gt;
        &lt;/a&gt;
      &lt;/div&gt;

      &lt;div&gt;
        &lt;!-- 主要內容 --&gt;
        &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;
      &lt;/div&gt;

    &lt;/main&gt;
  &lt;/div&gt;
  &lt;!-- 後台管理：結構規劃 end --&gt;

  &lt;!-- JavaScript Bundle with Popper --&gt;
  &lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-/bQdsTh/da6pkI1MST/rWKFNjaCP5gBSY4sEBT38Q/9RBh9AH40zEOg7Hlq2THRZ" crossorigin="anonymous"&gt;&lt;/script&gt;
  &lt;script src="./javascripts/all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// home.html

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;後台管理 - 首頁&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;!-- 後台管理：結構規劃 start --&gt;
  &lt;div class="d-flex"&gt;
    &lt;aside class="sidebar vh-100 border-end pt-3 d-flex bg-white flex-column"&gt;
      &lt;!-- 1. 後台名稱 --&gt;
      &lt;div class="px-4"&gt;
        &lt;strong&gt;食品專賣店&lt;/strong&gt;
        - 後台管理
      &lt;/div&gt;
      &lt;!-- 2. 選單 --&gt;
      &lt;div class="overflow-auto mt-3"&gt;
        &lt;div&gt;
          &lt;a href="#" class="sidebar-link active"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-house me-2"&gt;&lt;/i&gt;
              首頁
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;

        &lt;div&gt;
          &lt;a href="#menu-order" class="sidebar-link" data-bs-toggle="collapse"&gt;
            &lt;div class="d-flex justify-content-between px-4"&gt;
              &lt;p class="mb-0"&gt;
                &lt;i class="bi bi-card-checklist me-2"&gt;&lt;/i&gt;
                訂單管理
              &lt;/p&gt;
              &lt;i class="bi bi-caret-down"&gt;&lt;/i&gt;
            &lt;/div&gt;
          &lt;/a&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="#" class="sidebar-link"&gt;
              &lt;div class="ps-5"&gt;
                其他項目
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div&gt;
          &lt;a href="#" class="sidebar-link"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-card-list me-2"&gt;&lt;/i&gt;
              產品列表
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;
        &lt;div&gt;
          &lt;a href="#" class="sidebar-link"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-list-stars me-2"&gt;&lt;/i&gt;
              顧客評價
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;!-- 3. 登出按鈕 --&gt;
      &lt;a href="#" class="mt-auto sidebar-link"&gt;
        &lt;div class="px-4"&gt;
          &lt;i class="bi bi-box-arrow-right me-2"&gt;&lt;/i&gt;
          登出
        &lt;/div&gt;
      &lt;/a&gt;
    &lt;/aside&gt;
    &lt;main class="main"&gt;
      &lt;div class="bg-white w-100 border-bottom sticky-top"&gt;
        &lt;a href="#" class="d-inline-block py-3 px-4 border-end" id="toggle-btn"&gt;
          &lt;i class="bi bi-arrows-angle-expand"&gt;&lt;/i&gt;
        &lt;/a&gt;
      &lt;/div&gt;

      &lt;div class="p-4"&gt;
        &lt;!-- 主要內容 --&gt;
        &lt;div class="row g-4 row-cols-lg-3 mb-4"&gt;
          &lt;div class="col"&gt;
            &lt;div class="card shadow-sm h-100"&gt;
              &lt;div class="card-body text-end"&gt;
                &lt;h2 class="display-6"&gt;在線人數&lt;/h2&gt;
                &lt;p class="display-4 mb-0"&gt;
                  3,996
                &lt;/p&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="col"&gt;
            &lt;div class="card shadow-sm h-100"&gt;
              &lt;div class="card-body text-end"&gt;
                &lt;h2 class="display-6"&gt;訂單數&lt;/h2&gt;
                &lt;p class="display-4 mb-0"&gt;1,022&lt;/p&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="col"&gt;
            &lt;div class="card shadow-sm h-100"&gt;
              &lt;div class="card-body text-end"&gt;
                &lt;h2 class="display-6"&gt;營業額&lt;/h2&gt;
                &lt;p class="mb-0 text-success"&gt;&lt;span class="fs-3"&gt;NT$&lt;/span&gt;&lt;span class="display-4"&gt;120,500&lt;/span&gt;&lt;/p&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;

        &lt;div class="row g-4"&gt;
          &lt;div class="col-lg-4"&gt;
            &lt;div class="card shadow-sm h-100"&gt;
              &lt;div class="card-body"&gt;
                &lt;canvas id="pie-chart" class="img-fluid"&gt;&lt;/canvas&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="col"&gt;
            &lt;div class="card shadow-sm h-100"&gt;
              &lt;div class="card-body"&gt;
                &lt;canvas id="bar-chart" class="img-fluid"&gt;&lt;/canvas&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

    &lt;/main&gt;
  &lt;/div&gt;
  &lt;!-- 後台管理：結構規劃 end --&gt;

  &lt;!-- JavaScript Bundle with Popper --&gt;
  &lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-/bQdsTh/da6pkI1MST/rWKFNjaCP5gBSY4sEBT38Q/9RBh9AH40zEOg7Hlq2THRZ" crossorigin="anonymous"&gt;&lt;/script&gt;
  &lt;script src="https://cdn.jsdelivr.net/npm/chart.js"&gt;&lt;/script&gt;
  &lt;script src="./javascripts/all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// helpers/_variables.scss

// scss-docs-start border-radius-variables
$border-radius:               .25rem !default;
$border-radius-sm:            .2rem !default;
$border-radius-lg:            .75rem; // .3rem !default;
$border-radius-pill:          50rem !default;
// scss-docs-end border-radius-variables

// Cards

// scss-docs-start card-variables
$card-spacer-y:                     $spacer !default;
$card-spacer-x:                     $spacer !default;
$card-title-spacer-y:               $spacer * .5 !default;
$card-border-width:                 $border-width !default;
$card-border-color:                 rgba($black, .125) !default;
$card-border-radius:                $border-radius-lg; // $border-radius !default;
$card-box-shadow:                   null !default;
$card-inner-border-radius:          subtract($card-border-radius, $card-border-width) !default;
$card-cap-padding-y:                $card-spacer-y * .5 !default;
$card-cap-padding-x:                $card-spacer-x !default;
$card-cap-bg:                       rgba($black, .03) !default;
$card-cap-color:                    null !default;
$card-height:                       null !default;
$card-color:                        null !default;
$card-bg:                           $white !default;
$card-img-overlay-padding:          $spacer !default;
$card-group-margin:                 $grid-gutter-width * .5 !default;
// scss-docs-end card-variables</code></pre>



<pre class="wp-block-code"><code>// javascripts/all.js

const toggleMenuBtn = document.querySelector('#toggle-btn');
const body = document.querySelector('body');
toggleMenuBtn.addEventListener('click', (evt) =&gt; {
  // console.log(evt);
  evt.preventDefault();
  body.classList.toggle('sidebar-toggled');
});

// 動態圖表
(() =&gt; {
  const chartColors = {
    red: 'rgb(255, 99, 132)',
    orange: 'rgb(255, 159, 64)',
    yellow: 'rgb(255, 205, 86)',
    green: 'rgb(75, 192, 192)',
    blue: 'rgb(54, 162, 235)',
    purple: 'rgb(153, 102, 255)',
    grey: 'rgb(201, 203, 207)'
  };
  var randomScalingFactor = function () {
    return Math.round(Math.random() * 2000000);
  };

  const pieCtx = document.getElementById('pie-chart').getContext('2d');
  const barCtx = document.getElementById('bar-chart').getContext('2d');

  const config = {
    type: 'pie',
    data: {
      datasets: &#91;{
        data: &#91;
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
        ],
        backgroundColor: &#91;
          chartColors.red,
          chartColors.orange,
          chartColors.yellow,
          chartColors.green,
          chartColors.blue,
        ],
        label: 'Dataset 1'
      }],
      labels: &#91;
        '餅乾類',
        '飲料類',
        '熟食類',
        '生鮮類',
        '糖果類',
      ]
    },
    options: {
      responsive: true
    }
  };
  const barConfig = {
    type: 'bar',
    data: {
      datasets: &#91;{
        data: &#91;
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
        ],
        backgroundColor: &#91;
          chartColors.red,
          chartColors.orange,
          chartColors.yellow,
          chartColors.green,
          chartColors.blue,
          chartColors.purple,
        ],
        label: '單月營業額'
      }],
      labels: &#91;
        '一月',
        '二月',
        '三月',
        '四月',
        '五月',
        '六月',
      ]
    },
    options: {
      responsive: true
    }
  };
  const pieChart = new Chart(pieCtx, config);
  const barChart = new Chart(barCtx, barConfig);
})();</code></pre>



<h3>後台管理：動態圖表範例程式碼</h3>



<h4>動態圖表範例程式碼</h4>



<pre class="wp-block-code"><code>&lt;script src="https://cdn.jsdelivr.net/npm/chart.js"&gt;&lt;/script&gt;
&lt;script&gt;
  (() =&gt; {
    const chartColors = {
      red: 'rgb(255, 99, 132)',
      orange: 'rgb(255, 159, 64)',
      yellow: 'rgb(255, 205, 86)',
      green: 'rgb(75, 192, 192)',
      blue: 'rgb(54, 162, 235)',
      purple: 'rgb(153, 102, 255)',
      grey: 'rgb(201, 203, 207)'
    };
    var randomScalingFactor = function () {
      return Math.round(Math.random() * 2000000);
    };

    const pieCtx = document.getElementById('pie-chart').getContext('2d');
    const barCtx = document.getElementById('bar-chart').getContext('2d');

    const config = {
      type: 'pie',
      data: {
        datasets: &#91;{
          data: &#91;
            randomScalingFactor(),
            randomScalingFactor(),
            randomScalingFactor(),
            randomScalingFactor(),
            randomScalingFactor(),
            randomScalingFactor(),
          ],
          backgroundColor: &#91;
            chartColors.red,
            chartColors.orange,
            chartColors.yellow,
            chartColors.green,
            chartColors.blue,
          ],
          label: 'Dataset 1'
        }],
        labels: &#91;
          '大麥克全餐',
          '肥宅快樂水',
          '太爽啦義大利麵',
          '薯條加大吃不完',
          '兒童餐椅不給坐',
        ]
      },
      options: {
        responsive: true
      }
    };
    const barConfig = {
      type: 'bar',
      data: {
        datasets: &#91;{
          data: &#91;
            randomScalingFactor(),
            randomScalingFactor(),
            randomScalingFactor(),
            randomScalingFactor(),
            randomScalingFactor(),
            randomScalingFactor(),
          ],
          backgroundColor: &#91;
            chartColors.red,
            chartColors.orange,
            chartColors.yellow,
            chartColors.green,
            chartColors.blue,
            chartColors.purple,
          ],
          label: 'Dataset 1'
        }],
        labels: &#91;
          '一月',
          '二月',
          '三月',
          '四月',
          '五月',
          '六月',
        ]
      },
      options: {
        responsive: true
      }
    };
    const pieChart = new Chart(pieCtx, config);
    const barChart = new Chart(barCtx, barConfig);
  })();
&lt;/script&gt;</code></pre>



<h3>後台管理：表格運用</h3>



<pre class="wp-block-code"><code>// home.html

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;後台管理 - 首頁&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;!-- 後台管理：結構規劃 start --&gt;
  &lt;div class="d-flex"&gt;
    &lt;aside class="sidebar vh-100 border-end pt-3 d-flex bg-white flex-column"&gt;
      &lt;!-- 1. 後台名稱 --&gt;
      &lt;div class="px-4"&gt;
        &lt;strong&gt;食品專賣店&lt;/strong&gt;
        - 後台管理
      &lt;/div&gt;
      &lt;!-- 2. 選單 --&gt;
      &lt;div class="overflow-auto mt-3"&gt;
        &lt;div&gt;
          &lt;a href="#" class="sidebar-link active"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-house me-2"&gt;&lt;/i&gt;
              首頁
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;

        &lt;div&gt;
          &lt;a href="#menu-order" class="sidebar-link" data-bs-toggle="collapse"&gt;
            &lt;div class="d-flex justify-content-between px-4"&gt;
              &lt;p class="mb-0"&gt;
                &lt;i class="bi bi-card-checklist me-2"&gt;&lt;/i&gt;
                訂單管理
              &lt;/p&gt;
              &lt;i class="bi bi-caret-down"&gt;&lt;/i&gt;
            &lt;/div&gt;
          &lt;/a&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="#" class="sidebar-link"&gt;
              &lt;div class="ps-5"&gt;
                其他項目
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div&gt;
          &lt;a href="#" class="sidebar-link"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-card-list me-2"&gt;&lt;/i&gt;
              產品列表
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;
        &lt;div&gt;
          &lt;a href="#" class="sidebar-link"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-list-stars me-2"&gt;&lt;/i&gt;
              顧客評價
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;!-- 3. 登出按鈕 --&gt;
      &lt;a href="#" class="mt-auto sidebar-link"&gt;
        &lt;div class="px-4"&gt;
          &lt;i class="bi bi-box-arrow-right me-2"&gt;&lt;/i&gt;
          登出
        &lt;/div&gt;
      &lt;/a&gt;
    &lt;/aside&gt;
    &lt;main class="main"&gt;
      &lt;div class="bg-white w-100 border-bottom sticky-top"&gt;
        &lt;a href="#" class="d-inline-block py-3 px-4 border-end" id="toggle-btn"&gt;
          &lt;i class="bi bi-arrows-angle-expand"&gt;&lt;/i&gt;
        &lt;/a&gt;
      &lt;/div&gt;

      &lt;div class="p-4"&gt;
        &lt;!-- 主要內容 --&gt;
        &lt;div class="row g-4 row-cols-lg-3 mb-4"&gt;
          &lt;div class="col"&gt;
            &lt;div class="card shadow-sm h-100"&gt;
              &lt;div class="card-body text-end"&gt;
                &lt;h2 class="display-6"&gt;在線人數&lt;/h2&gt;
                &lt;p class="display-4 mb-0"&gt;
                  3,996
                &lt;/p&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="col"&gt;
            &lt;div class="card shadow-sm h-100"&gt;
              &lt;div class="card-body text-end"&gt;
                &lt;h2 class="display-6"&gt;訂單數&lt;/h2&gt;
                &lt;p class="display-4 mb-0"&gt;1,022&lt;/p&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="col"&gt;
            &lt;div class="card shadow-sm h-100"&gt;
              &lt;div class="card-body text-end"&gt;
                &lt;h2 class="display-6"&gt;營業額&lt;/h2&gt;
                &lt;p class="mb-0 text-success"&gt;&lt;span class="fs-3"&gt;NT$&lt;/span&gt;&lt;span class="display-4"&gt;120,500&lt;/span&gt;&lt;/p&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;

        &lt;div class="row g-4"&gt;
          &lt;div class="col-lg-4"&gt;
            &lt;div class="card shadow-sm h-100"&gt;
              &lt;div class="card-body"&gt;
                &lt;canvas id="pie-chart" class="img-fluid"&gt;&lt;/canvas&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="col"&gt;
            &lt;div class="card shadow-sm h-100"&gt;
              &lt;div class="card-body"&gt;
                &lt;canvas id="bar-chart" class="img-fluid"&gt;&lt;/canvas&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="card shadow-sm"&gt;
        &lt;div class="card-header bg-transparent"&gt;
          &lt;div class="input-group"&gt;
            &lt;span class="input-group-text border-0 bg-transparent pe-0"&gt;
              &lt;i class="bi bi-search"&gt;&lt;/i&gt;
            &lt;/span&gt;
            &lt;input type="search" class="form-control border-0 shadow-none"&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="card-body p-0"&gt;
          &lt;div class="table-responsive"&gt;
            &lt;table class="table table-hover mb-0"&gt;
              &lt;thead class="bg-light text-nowrap"&gt;
                &lt;tr class="align-middle"&gt;
                  &lt;th scope="col" class="py-3 ps-4"&gt;訂單編號&lt;/th&gt;
                  &lt;th scope="col"&gt;Email&lt;/th&gt;
                  &lt;th scope="col"&gt;顧客姓名&lt;/th&gt;
                  &lt;th scope="col"&gt;購買品項&lt;/th&gt;
                  &lt;th scope="col"&gt;付款狀態&lt;/th&gt;
                  &lt;th scope="col"&gt;購買金額&lt;/th&gt;
                  &lt;th scope="col" class="pe-4"&gt;編輯&lt;/th&gt;
                &lt;/tr&gt;
              &lt;/thead&gt;
              &lt;tbody class="text-nowrap"&gt;
                &lt;tr&gt;
                  &lt;td scope="row" class="ps-4"&gt;TX20220315171601&lt;/td&gt;
                  &lt;td&gt;bear123@email.com&lt;/td&gt;
                  &lt;td&gt;貝小熊&lt;/td&gt;
                  &lt;td&gt;食品專賣店：餅乾類&lt;/td&gt;
                  &lt;td&gt;&lt;div class="text-muted"&gt;尚未付款&lt;/div&gt;&lt;/td&gt;
                  &lt;td class="text-end"&gt;600&lt;/td&gt;
                  &lt;td class="text-end pe-4"&gt;
                    &lt;a href="#" class="btn btn-sm btn-outline-dark me-2"&gt;編輯 &lt;i class="bi bi-pen"&gt;&lt;/i&gt;&lt;/a&gt;
                  &lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td scope="row" class="ps-4"&gt;TX20220315170201&lt;/td&gt;
                  &lt;td&gt;fish123@email.com&lt;/td&gt;
                  &lt;td&gt;溪小魚&lt;/td&gt;
                  &lt;td&gt;食品專賣店：飲料類&lt;/td&gt;
                  &lt;td&gt;&lt;div class="text-muted"&gt;尚未付款&lt;/div&gt;&lt;/td&gt;
                  &lt;td class="text-end"&gt;1,200&lt;/td&gt;
                  &lt;td class="text-end pe-4"&gt;
                    &lt;a href="#" class="btn btn-sm btn-outline-dark me-2"&gt;編輯 &lt;i class="bi bi-pen"&gt;&lt;/i&gt;&lt;/a&gt;
                  &lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td scope="row" class="ps-4"&gt;TX20220315190301&lt;/td&gt;
                  &lt;td&gt;dog123@email.com&lt;/td&gt;
                  &lt;td&gt;毛小熊&lt;/td&gt;
                  &lt;td&gt;食品專賣店：熟食類&lt;/td&gt;
                  &lt;td&gt;&lt;div class="text-muted"&gt;尚未付款&lt;/div&gt;&lt;/td&gt;
                  &lt;td class="text-end"&gt;2,200&lt;/td&gt;
                  &lt;td class="text-end pe-4"&gt;
                    &lt;a href="#" class="btn btn-sm btn-outline-dark me-2"&gt;編輯 &lt;i class="bi bi-pen"&gt;&lt;/i&gt;&lt;/a&gt;
                  &lt;/td&gt;
                &lt;/tr&gt;
              &lt;/tbody&gt;
            &lt;/table&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="card-footer bg-transparent py-3"&gt;
          &lt;nav aria-label="Page navigation example"&gt;
            &lt;ul class="pagination justify-content-end mb-0"&gt;
              &lt;li class="page-item"&gt;&lt;a class="page-link" href="#"&gt;Previous&lt;/a&gt;&lt;/li&gt;
              &lt;li class="page-item"&gt;&lt;a class="page-link" href="#"&gt;1&lt;/a&gt;&lt;/li&gt;
              &lt;li class="page-item"&gt;&lt;a class="page-link" href="#"&gt;2&lt;/a&gt;&lt;/li&gt;
              &lt;li class="page-item"&gt;&lt;a class="page-link" href="#"&gt;3&lt;/a&gt;&lt;/li&gt;
              &lt;li class="page-item"&gt;&lt;a class="page-link" href="#"&gt;Next&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/nav&gt;
        &lt;/div&gt;
      &lt;/div&gt;

    &lt;/main&gt;
  &lt;/div&gt;
  &lt;!-- 後台管理：結構規劃 end --&gt;

  &lt;!-- JavaScript Bundle with Popper --&gt;
  &lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-/bQdsTh/da6pkI1MST/rWKFNjaCP5gBSY4sEBT38Q/9RBh9AH40zEOg7Hlq2THRZ" crossorigin="anonymous"&gt;&lt;/script&gt;
  &lt;script src="https://cdn.jsdelivr.net/npm/chart.js"&gt;&lt;/script&gt;
  &lt;script src="./javascripts/all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<h3>後台管理：訂單管理介面</h3>



<pre class="wp-block-code"><code>// orders.html

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;後台管理 - 首頁&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;!-- 後台管理：結構規劃 start --&gt;
  &lt;div class="d-flex"&gt;
    &lt;aside class="sidebar vh-100 border-end pt-3 d-flex bg-white flex-column"&gt;
      &lt;!-- 1. 後台名稱 --&gt;
      &lt;div class="px-4"&gt;
        &lt;strong&gt;食品專賣店&lt;/strong&gt;
        - 後台管理
      &lt;/div&gt;
      &lt;!-- 2. 選單 --&gt;
      &lt;div class="overflow-auto mt-3"&gt;
        &lt;div&gt;
          &lt;a href="home.html" class="sidebar-link active"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-house me-2"&gt;&lt;/i&gt;
              首頁
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;

        &lt;div&gt;
          &lt;a href="#menu-order" class="sidebar-link" data-bs-toggle="collapse"&gt;
            &lt;div class="d-flex justify-content-between px-4"&gt;
              &lt;p class="mb-0"&gt;
                &lt;i class="bi bi-card-checklist me-2"&gt;&lt;/i&gt;
                訂單管理
              &lt;/p&gt;
              &lt;i class="bi bi-caret-down"&gt;&lt;/i&gt;
            &lt;/div&gt;
          &lt;/a&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="orders.html" class="sidebar-link"&gt;
              &lt;div class="ps-5"&gt;
                訂單列表
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="#" class="sidebar-link"&gt;
              &lt;div class="ps-5"&gt;
                單一訂單細節
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="#" class="sidebar-link"&gt;
              &lt;div class="ps-5"&gt;
                其他項目
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div&gt;
          &lt;a href="#" class="sidebar-link"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-card-list me-2"&gt;&lt;/i&gt;
              產品列表
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;
        &lt;div&gt;
          &lt;a href="#" class="sidebar-link"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-list-stars me-2"&gt;&lt;/i&gt;
              顧客評價
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;!-- 3. 登出按鈕 --&gt;
      &lt;a href="#" class="mt-auto sidebar-link"&gt;
        &lt;div class="px-4"&gt;
          &lt;i class="bi bi-box-arrow-right me-2"&gt;&lt;/i&gt;
          登出
        &lt;/div&gt;
      &lt;/a&gt;
    &lt;/aside&gt;
    &lt;main class="main"&gt;
      &lt;div class="bg-white w-100 border-bottom sticky-top"&gt;
        &lt;a href="#" class="d-inline-block py-3 px-4 border-end" id="toggle-btn"&gt;
          &lt;i class="bi bi-arrows-angle-expand"&gt;&lt;/i&gt;
        &lt;/a&gt;
      &lt;/div&gt;

      &lt;div class="p-4"&gt;
        &lt;!-- 主要內容 --&gt;
        &lt;ul class="nav nav-pills mb-4"&gt;
          &lt;li class="nav-item"&gt;
            &lt;a class="nav-link rounded-pill active" aria-current="page" href="#"&gt;所有訂單
              &lt;span class="badge rounded-pill bg-light text-dark"&gt;156&lt;/span&gt;
            &lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item"&gt;
            &lt;a class="nav-link rounded-pill" href="#"&gt;待處理
              &lt;span class="badge rounded-pill bg-light text-dark"&gt;106&lt;/span&gt;
            &lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item"&gt;
            &lt;a class="nav-link rounded-pill" href="#"&gt;已出貨
              &lt;span class="badge rounded-pill bg-light text-dark"&gt;50&lt;/span&gt;
            &lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item"&gt;
            &lt;a class="nav-link rounded-pill"&gt;退款
              &lt;span class="badge rounded-pill bg-light text-dark"&gt;2&lt;/span&gt;
            &lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;

        &lt;div class="card shadow-sm"&gt;
          &lt;div class="card-header bg-transparent"&gt;
            &lt;div class="input-group"&gt;
              &lt;div class="dropdown"&gt;
                &lt;button class="btn btn-outline-dark dropdown-toggle btn-sm" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false"&gt;
                  操作
                &lt;/button&gt;
                &lt;ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1"&gt;
                  &lt;li&gt;&lt;a class="dropdown-item" href="#"&gt;全部選取&lt;/a&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;a class="dropdown-item" href="#"&gt;個別選取&lt;/a&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;a class="dropdown-item" href="#"&gt;其他&lt;/a&gt;&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
              &lt;span class="input-group-text border-0 bg-transparent pe-0"&gt;
                &lt;i class="bi bi-search"&gt;&lt;/i&gt;
              &lt;/span&gt;
              &lt;input type="search" class="form-control border-0 shadow-none"&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="card-body p-0"&gt;
            &lt;div class="table-responsive"&gt;
              &lt;table class="table table-hover mb-0"&gt;
                &lt;thead class="bg-light text-nowrap"&gt;
                  &lt;tr class="align-middle"&gt;
                    &lt;th scope="col" class="ps-4"&gt;&lt;/th&gt;
                    &lt;th scope="col" class="py-3"&gt;訂單編號&lt;/th&gt;
                    &lt;th scope="col"&gt;Email&lt;/th&gt;
                    &lt;th scope="col"&gt;顧客姓名&lt;/th&gt;
                    &lt;th scope="col"&gt;購買品項&lt;/th&gt;
                    &lt;th scope="col"&gt;付款狀態&lt;/th&gt;
                    &lt;th scope="col"&gt;購買金額&lt;/th&gt;
                    &lt;th scope="col" class="pe-4"&gt;編輯&lt;/th&gt;
                  &lt;/tr&gt;
                &lt;/thead&gt;
                &lt;tbody class="text-nowrap"&gt;
                  &lt;tr&gt;
                    &lt;td scope="row" class="ps-4" &gt;
                      &lt;input type="checkbox" class="form-check-input"&gt;
                    &lt;/td&gt;
                    &lt;td&gt;TX20220315171601&lt;/td&gt;
                    &lt;td&gt;bear123@email.com&lt;/td&gt;
                    &lt;td&gt;貝小熊&lt;/td&gt;
                    &lt;td&gt;食品專賣店：餅乾類&lt;/td&gt;
                    &lt;td&gt;&lt;div class="text-muted"&gt;尚未付款&lt;/div&gt;&lt;/td&gt;
                    &lt;td class="text-end"&gt;600&lt;/td&gt;
                    &lt;td class="text-end pe-4"&gt;
                      &lt;div class="btn-group"&gt;
                        &lt;a href="#" class="btn btn-sm btn-outline-dark"&gt;編輯 &lt;i class="bi bi-pen"&gt;&lt;/i&gt;&lt;/a&gt;
                          &lt;button class="btn btn-sm btn-outline-dark dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false"&gt;
                            操作
                          &lt;/button&gt;
                          &lt;ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1"&gt;
                            &lt;li&gt;&lt;a class="dropdown-item" href="#"&gt;修改狀態&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a class="dropdown-item" href="#"&gt;刪除訂單&lt;/a&gt;&lt;/li&gt;
                          &lt;/ul&gt;
                      &lt;/div&gt;
                    &lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                    &lt;td scope="row" class="ps-4" &gt;
                      &lt;input type="checkbox" class="form-check-input"&gt;
                    &lt;/td&gt;
                    &lt;td&gt;TX20220315170201&lt;/td&gt;
                    &lt;td&gt;fish123@email.com&lt;/td&gt;
                    &lt;td&gt;溪小魚&lt;/td&gt;
                    &lt;td&gt;食品專賣店：飲料類&lt;/td&gt;
                    &lt;td&gt;&lt;div class="text-muted"&gt;尚未付款&lt;/div&gt;&lt;/td&gt;
                    &lt;td class="text-end"&gt;1,200&lt;/td&gt;
                    &lt;td class="text-end pe-4"&gt;
                      &lt;div class="btn-group"&gt;
                        &lt;a href="#" class="btn btn-sm btn-outline-dark"&gt;編輯 &lt;i class="bi bi-pen"&gt;&lt;/i&gt;&lt;/a&gt;
                          &lt;button class="btn btn-sm btn-outline-dark dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false"&gt;
                            操作
                          &lt;/button&gt;
                          &lt;ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1"&gt;
                            &lt;li&gt;&lt;a class="dropdown-item" href="#"&gt;修改狀態&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a class="dropdown-item" href="#"&gt;刪除訂單&lt;/a&gt;&lt;/li&gt;
                          &lt;/ul&gt;
                      &lt;/div&gt;
                    &lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                    &lt;td scope="row" class="ps-4" &gt;
                      &lt;input type="checkbox" class="form-check-input"&gt;
                    &lt;/td&gt;
                    &lt;td&gt;TX20220315190301&lt;/td&gt;
                    &lt;td&gt;dog123@email.com&lt;/td&gt;
                    &lt;td&gt;毛小熊&lt;/td&gt;
                    &lt;td&gt;食品專賣店：熟食類&lt;/td&gt;
                    &lt;td&gt;&lt;div class="text-muted"&gt;尚未付款&lt;/div&gt;&lt;/td&gt;
                    &lt;td class="text-end"&gt;2,200&lt;/td&gt;
                    &lt;td class="text-end pe-4"&gt;
                      &lt;div class="btn-group"&gt;
                        &lt;a href="#" class="btn btn-sm btn-outline-dark"&gt;編輯 &lt;i class="bi bi-pen"&gt;&lt;/i&gt;&lt;/a&gt;
                          &lt;button class="btn btn-sm btn-outline-dark dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false"&gt;
                            操作
                          &lt;/button&gt;
                          &lt;ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1"&gt;
                            &lt;li&gt;&lt;a class="dropdown-item" href="#"&gt;修改狀態&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a class="dropdown-item" href="#"&gt;刪除訂單&lt;/a&gt;&lt;/li&gt;
                          &lt;/ul&gt;
                      &lt;/div&gt;
                    &lt;/td&gt;
                  &lt;/tr&gt;
                &lt;/tbody&gt;
              &lt;/table&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="card-footer bg-transparent py-3"&gt;
            &lt;nav aria-label="Page navigation example"&gt;
              &lt;ul class="pagination justify-content-end mb-0"&gt;
                &lt;li class="page-item"&gt;&lt;a class="page-link" href="#"&gt;Previous&lt;/a&gt;&lt;/li&gt;
                &lt;li class="page-item"&gt;&lt;a class="page-link" href="#"&gt;1&lt;/a&gt;&lt;/li&gt;
                &lt;li class="page-item"&gt;&lt;a class="page-link" href="#"&gt;2&lt;/a&gt;&lt;/li&gt;
                &lt;li class="page-item"&gt;&lt;a class="page-link" href="#"&gt;3&lt;/a&gt;&lt;/li&gt;
                &lt;li class="page-item"&gt;&lt;a class="page-link" href="#"&gt;Next&lt;/a&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/nav&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

    &lt;/main&gt;
  &lt;/div&gt;
  &lt;!-- 後台管理：結構規劃 end --&gt;

  &lt;!-- JavaScript Bundle with Popper --&gt;
  &lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-/bQdsTh/da6pkI1MST/rWKFNjaCP5gBSY4sEBT38Q/9RBh9AH40zEOg7Hlq2THRZ" crossorigin="anonymous"&gt;&lt;/script&gt;
  &lt;script src="./javascripts/all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// home.html

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;後台管理 - 首頁&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;!-- 後台管理：結構規劃 start --&gt;
  &lt;div class="d-flex"&gt;
    &lt;aside class="sidebar vh-100 border-end pt-3 d-flex bg-white flex-column"&gt;
      &lt;!-- 1. 後台名稱 --&gt;
      &lt;div class="px-4"&gt;
        &lt;strong&gt;食品專賣店&lt;/strong&gt;
        - 後台管理
      &lt;/div&gt;
      &lt;!-- 2. 選單 --&gt;
      &lt;div class="overflow-auto mt-3"&gt;
        &lt;div&gt;
          &lt;a href="home.html" class="sidebar-link active"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-house me-2"&gt;&lt;/i&gt;
              首頁
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;

        &lt;div&gt;
          &lt;a href="#menu-order" class="sidebar-link" data-bs-toggle="collapse"&gt;
            &lt;div class="d-flex justify-content-between px-4"&gt;
              &lt;p class="mb-0"&gt;
                &lt;i class="bi bi-card-checklist me-2"&gt;&lt;/i&gt;
                訂單管理
              &lt;/p&gt;
              &lt;i class="bi bi-caret-down"&gt;&lt;/i&gt;
            &lt;/div&gt;
          &lt;/a&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="orders.html" class="sidebar-link"&gt;
              &lt;div class="ps-5"&gt;
                訂單列表
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="#" class="sidebar-link"&gt;
              &lt;div class="ps-5"&gt;
                單一訂單細節
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="#" class="sidebar-link"&gt;
              &lt;div class="ps-5"&gt;
                其他項目
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div&gt;
          &lt;a href="#" class="sidebar-link"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-card-list me-2"&gt;&lt;/i&gt;
              產品列表
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;
        &lt;div&gt;
          &lt;a href="#" class="sidebar-link"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-list-stars me-2"&gt;&lt;/i&gt;
              顧客評價
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;!-- 3. 登出按鈕 --&gt;
      &lt;a href="#" class="mt-auto sidebar-link"&gt;
        &lt;div class="px-4"&gt;
          &lt;i class="bi bi-box-arrow-right me-2"&gt;&lt;/i&gt;
          登出
        &lt;/div&gt;
      &lt;/a&gt;
    &lt;/aside&gt;
    &lt;main class="main"&gt;
      &lt;div class="bg-white w-100 border-bottom sticky-top"&gt;
        &lt;a href="#" class="d-inline-block py-3 px-4 border-end" id="toggle-btn"&gt;
          &lt;i class="bi bi-arrows-angle-expand"&gt;&lt;/i&gt;
        &lt;/a&gt;
      &lt;/div&gt;

      &lt;div class="p-4"&gt;
        &lt;!-- 主要內容 --&gt;
        &lt;div class="row g-4 row-cols-lg-3 mb-4"&gt;
          &lt;div class="col"&gt;
            &lt;div class="card shadow-sm h-100"&gt;
              &lt;div class="card-body text-end"&gt;
                &lt;h2 class="display-6"&gt;在線人數&lt;/h2&gt;
                &lt;p class="display-4 mb-0"&gt;
                  3,996
                &lt;/p&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="col"&gt;
            &lt;div class="card shadow-sm h-100"&gt;
              &lt;div class="card-body text-end"&gt;
                &lt;h2 class="display-6"&gt;訂單數&lt;/h2&gt;
                &lt;p class="display-4 mb-0"&gt;1,022&lt;/p&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="col"&gt;
            &lt;div class="card shadow-sm h-100"&gt;
              &lt;div class="card-body text-end"&gt;
                &lt;h2 class="display-6"&gt;營業額&lt;/h2&gt;
                &lt;p class="mb-0 text-success"&gt;&lt;span class="fs-3"&gt;NT$&lt;/span&gt;&lt;span class="display-4"&gt;120,500&lt;/span&gt;&lt;/p&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;

        &lt;div class="row g-4"&gt;
          &lt;div class="col-lg-4"&gt;
            &lt;div class="card shadow-sm h-100"&gt;
              &lt;div class="card-body"&gt;
                &lt;canvas id="pie-chart" class="img-fluid"&gt;&lt;/canvas&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="col"&gt;
            &lt;div class="card shadow-sm h-100"&gt;
              &lt;div class="card-body"&gt;
                &lt;canvas id="bar-chart" class="img-fluid"&gt;&lt;/canvas&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="card shadow-sm"&gt;
        &lt;div class="card-header bg-transparent"&gt;
          &lt;div class="input-group"&gt;
            &lt;span class="input-group-text border-0 bg-transparent pe-0"&gt;
              &lt;i class="bi bi-search"&gt;&lt;/i&gt;
            &lt;/span&gt;
            &lt;input type="search" class="form-control border-0 shadow-none"&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="card-body p-0"&gt;
          &lt;div class="table-responsive"&gt;
            &lt;table class="table table-hover mb-0"&gt;
              &lt;thead class="bg-light text-nowrap"&gt;
                &lt;tr class="align-middle"&gt;
                  &lt;th scope="col" class="py-3 ps-4"&gt;訂單編號&lt;/th&gt;
                  &lt;th scope="col"&gt;Email&lt;/th&gt;
                  &lt;th scope="col"&gt;顧客姓名&lt;/th&gt;
                  &lt;th scope="col"&gt;購買品項&lt;/th&gt;
                  &lt;th scope="col"&gt;付款狀態&lt;/th&gt;
                  &lt;th scope="col"&gt;購買金額&lt;/th&gt;
                  &lt;th scope="col" class="pe-4"&gt;編輯&lt;/th&gt;
                &lt;/tr&gt;
              &lt;/thead&gt;
              &lt;tbody class="text-nowrap"&gt;
                &lt;tr&gt;
                  &lt;td scope="row" class="ps-4"&gt;TX20220315171601&lt;/td&gt;
                  &lt;td&gt;bear123@email.com&lt;/td&gt;
                  &lt;td&gt;貝小熊&lt;/td&gt;
                  &lt;td&gt;食品專賣店：餅乾類&lt;/td&gt;
                  &lt;td&gt;&lt;div class="text-muted"&gt;尚未付款&lt;/div&gt;&lt;/td&gt;
                  &lt;td class="text-end"&gt;600&lt;/td&gt;
                  &lt;td class="text-end pe-4"&gt;
                    &lt;a href="#" class="btn btn-sm btn-outline-dark me-2"&gt;編輯 &lt;i class="bi bi-pen"&gt;&lt;/i&gt;&lt;/a&gt;
                  &lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td scope="row" class="ps-4"&gt;TX20220315170201&lt;/td&gt;
                  &lt;td&gt;fish123@email.com&lt;/td&gt;
                  &lt;td&gt;溪小魚&lt;/td&gt;
                  &lt;td&gt;食品專賣店：飲料類&lt;/td&gt;
                  &lt;td&gt;&lt;div class="text-muted"&gt;尚未付款&lt;/div&gt;&lt;/td&gt;
                  &lt;td class="text-end"&gt;1,200&lt;/td&gt;
                  &lt;td class="text-end pe-4"&gt;
                    &lt;a href="#" class="btn btn-sm btn-outline-dark me-2"&gt;編輯 &lt;i class="bi bi-pen"&gt;&lt;/i&gt;&lt;/a&gt;
                  &lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td scope="row" class="ps-4"&gt;TX20220315190301&lt;/td&gt;
                  &lt;td&gt;dog123@email.com&lt;/td&gt;
                  &lt;td&gt;毛小熊&lt;/td&gt;
                  &lt;td&gt;食品專賣店：熟食類&lt;/td&gt;
                  &lt;td&gt;&lt;div class="text-muted"&gt;尚未付款&lt;/div&gt;&lt;/td&gt;
                  &lt;td class="text-end"&gt;2,200&lt;/td&gt;
                  &lt;td class="text-end pe-4"&gt;
                    &lt;a href="#" class="btn btn-sm btn-outline-dark me-2"&gt;編輯 &lt;i class="bi bi-pen"&gt;&lt;/i&gt;&lt;/a&gt;
                  &lt;/td&gt;
                &lt;/tr&gt;
              &lt;/tbody&gt;
            &lt;/table&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="card-footer bg-transparent py-3"&gt;
          &lt;nav aria-label="Page navigation example"&gt;
            &lt;ul class="pagination justify-content-end mb-0"&gt;
              &lt;li class="page-item"&gt;&lt;a class="page-link" href="#"&gt;Previous&lt;/a&gt;&lt;/li&gt;
              &lt;li class="page-item"&gt;&lt;a class="page-link" href="#"&gt;1&lt;/a&gt;&lt;/li&gt;
              &lt;li class="page-item"&gt;&lt;a class="page-link" href="#"&gt;2&lt;/a&gt;&lt;/li&gt;
              &lt;li class="page-item"&gt;&lt;a class="page-link" href="#"&gt;3&lt;/a&gt;&lt;/li&gt;
              &lt;li class="page-item"&gt;&lt;a class="page-link" href="#"&gt;Next&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/nav&gt;
        &lt;/div&gt;
      &lt;/div&gt;

    &lt;/main&gt;
  &lt;/div&gt;
  &lt;!-- 後台管理：結構規劃 end --&gt;

  &lt;!-- JavaScript Bundle with Popper --&gt;
  &lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-/bQdsTh/da6pkI1MST/rWKFNjaCP5gBSY4sEBT38Q/9RBh9AH40zEOg7Hlq2THRZ" crossorigin="anonymous"&gt;&lt;/script&gt;
  &lt;script src="https://cdn.jsdelivr.net/npm/chart.js"&gt;&lt;/script&gt;
  &lt;script src="./javascripts/all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// layout.html

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;後台管理 - 首頁&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;!-- 後台管理：結構規劃 start --&gt;
  &lt;div class="d-flex"&gt;
    &lt;aside class="sidebar vh-100 border-end pt-3 d-flex bg-white flex-column"&gt;
      &lt;!-- 1. 後台名稱 --&gt;
      &lt;div class="px-4"&gt;
        &lt;strong&gt;食品專賣店&lt;/strong&gt;
        - 後台管理
      &lt;/div&gt;
      &lt;!-- 2. 選單 --&gt;
      &lt;div class="overflow-auto mt-3"&gt;
        &lt;div&gt;
          &lt;a href="home.html" class="sidebar-link active"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-house me-2"&gt;&lt;/i&gt;
              首頁
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;

        &lt;div&gt;
          &lt;a href="#menu-order" class="sidebar-link" data-bs-toggle="collapse"&gt;
            &lt;div class="d-flex justify-content-between px-4"&gt;
              &lt;p class="mb-0"&gt;
                &lt;i class="bi bi-card-checklist me-2"&gt;&lt;/i&gt;
                訂單管理
              &lt;/p&gt;
              &lt;i class="bi bi-caret-down"&gt;&lt;/i&gt;
            &lt;/div&gt;
          &lt;/a&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="orders.html" class="sidebar-link"&gt;
              &lt;div class="ps-5"&gt;
                訂單列表
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="#" class="sidebar-link"&gt;
              &lt;div class="ps-5"&gt;
                單一訂單細節
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="#" class="sidebar-link"&gt;
              &lt;div class="ps-5"&gt;
                其他項目
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div&gt;
          &lt;a href="#" class="sidebar-link"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-card-list me-2"&gt;&lt;/i&gt;
              產品列表
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;
        &lt;div&gt;
          &lt;a href="#" class="sidebar-link"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-list-stars me-2"&gt;&lt;/i&gt;
              顧客評價
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;!-- 3. 登出按鈕 --&gt;
      &lt;a href="#" class="mt-auto sidebar-link"&gt;
        &lt;div class="px-4"&gt;
          &lt;i class="bi bi-box-arrow-right me-2"&gt;&lt;/i&gt;
          登出
        &lt;/div&gt;
      &lt;/a&gt;
    &lt;/aside&gt;
    &lt;main class="main"&gt;
      &lt;div class="bg-white w-100 border-bottom sticky-top"&gt;
        &lt;a href="#" class="d-inline-block py-3 px-4 border-end" id="toggle-btn"&gt;
          &lt;i class="bi bi-arrows-angle-expand"&gt;&lt;/i&gt;
        &lt;/a&gt;
      &lt;/div&gt;

      &lt;div&gt;
        &lt;!-- 主要內容 --&gt;
        &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;
      &lt;/div&gt;

    &lt;/main&gt;
  &lt;/div&gt;
  &lt;!-- 後台管理：結構規劃 end --&gt;

  &lt;!-- JavaScript Bundle with Popper --&gt;
  &lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-/bQdsTh/da6pkI1MST/rWKFNjaCP5gBSY4sEBT38Q/9RBh9AH40zEOg7Hlq2THRZ" crossorigin="anonymous"&gt;&lt;/script&gt;
  &lt;script src="./javascripts/all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<ul><li><a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.1/components/navs-tabs/" target="_blank">元件 &gt; 導覽與頁籤</a></li><li><a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.1/components/badge/" target="_blank">元件 &gt; 標籤</a></li><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/dropdowns/" target="_blank" rel="noreferrer noopener">元件 &gt; 下拉選單</a></li></ul>



<h3 class="has-background" style="background-color:#ff6663">後台管理：傳遞內容至 Modal 內</h3>



<pre class="wp-block-code"><code>// orders.html

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;後台管理 - 訂單列表&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;!-- 後台管理：結構規劃 start --&gt;
  &lt;div class="d-flex"&gt;
    &lt;aside class="sidebar vh-100 border-end pt-3 d-flex bg-white flex-column"&gt;
      &lt;!-- 1. 後台名稱 --&gt;
      &lt;div class="px-4"&gt;
        &lt;strong&gt;食品專賣店&lt;/strong&gt;
        - 後台管理
      &lt;/div&gt;
      &lt;!-- 2. 選單 --&gt;
      &lt;div class="overflow-auto mt-3"&gt;
        &lt;div&gt;
          &lt;a href="home.html" class="sidebar-link"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-house me-2"&gt;&lt;/i&gt;
              首頁
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;

        &lt;div&gt;
          &lt;a href="#menu-order" class="sidebar-link" data-bs-toggle="collapse"&gt;
            &lt;div class="d-flex justify-content-between px-4"&gt;
              &lt;p class="mb-0"&gt;
                &lt;i class="bi bi-card-checklist me-2"&gt;&lt;/i&gt;
                訂單管理
              &lt;/p&gt;
              &lt;i class="bi bi-caret-down"&gt;&lt;/i&gt;
            &lt;/div&gt;
          &lt;/a&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="orders.html" class="sidebar-link active"&gt;
              &lt;div class="ps-5"&gt;
                訂單列表
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="#" class="sidebar-link"&gt;
              &lt;div class="ps-5"&gt;
                單一訂單細節
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="#" class="sidebar-link"&gt;
              &lt;div class="ps-5"&gt;
                其他項目
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div&gt;
          &lt;a href="#" class="sidebar-link"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-card-list me-2"&gt;&lt;/i&gt;
              產品列表
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;
        &lt;div&gt;
          &lt;a href="#" class="sidebar-link"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-list-stars me-2"&gt;&lt;/i&gt;
              顧客評價
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;!-- 3. 登出按鈕 --&gt;
      &lt;a href="#" class="mt-auto sidebar-link"&gt;
        &lt;div class="px-4"&gt;
          &lt;i class="bi bi-box-arrow-right me-2"&gt;&lt;/i&gt;
          登出
        &lt;/div&gt;
      &lt;/a&gt;
    &lt;/aside&gt;
    &lt;main class="main"&gt;
      &lt;div class="bg-white w-100 border-bottom sticky-top"&gt;
        &lt;a href="#" class="d-inline-block py-3 px-4 border-end" id="toggle-btn"&gt;
          &lt;i class="bi bi-arrows-angle-expand"&gt;&lt;/i&gt;
        &lt;/a&gt;
      &lt;/div&gt;

      &lt;div class="p-4"&gt;
        &lt;!-- 主要內容 --&gt;
        &lt;ul class="nav nav-pills mb-4"&gt;
          &lt;li class="nav-item"&gt;
            &lt;a class="nav-link rounded-pill active" aria-current="page" href="#"&gt;所有訂單
              &lt;span class="badge rounded-pill bg-light text-dark"&gt;156&lt;/span&gt;
            &lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item"&gt;
            &lt;a class="nav-link rounded-pill" href="#"&gt;待處理
              &lt;span class="badge rounded-pill bg-light text-dark"&gt;106&lt;/span&gt;
            &lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item"&gt;
            &lt;a class="nav-link rounded-pill" href="#"&gt;已出貨
              &lt;span class="badge rounded-pill bg-light text-dark"&gt;50&lt;/span&gt;
            &lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item"&gt;
            &lt;a class="nav-link rounded-pill"&gt;退款
              &lt;span class="badge rounded-pill bg-light text-dark"&gt;2&lt;/span&gt;
            &lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;

        &lt;div class="card shadow-sm"&gt;
          &lt;div class="card-header bg-transparent"&gt;
            &lt;div class="input-group"&gt;
              &lt;div class="dropdown"&gt;
                &lt;button class="btn btn-outline-dark dropdown-toggle btn-sm" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false"&gt;
                  操作
                &lt;/button&gt;
                &lt;ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1"&gt;
                  &lt;li&gt;&lt;a class="dropdown-item" href="#"&gt;全部選取&lt;/a&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;a class="dropdown-item" href="#"&gt;個別選取&lt;/a&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;a class="dropdown-item" href="#"&gt;其他&lt;/a&gt;&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/div&gt;
              &lt;span class="input-group-text border-0 bg-transparent pe-0"&gt;
                &lt;i class="bi bi-search"&gt;&lt;/i&gt;
              &lt;/span&gt;
              &lt;input type="search" class="form-control border-0 shadow-none"&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="card-body p-0"&gt;
            &lt;div class="table-responsive"&gt;
              &lt;table class="table table-hover mb-0"&gt;
                &lt;thead class="bg-light text-nowrap"&gt;
                  &lt;tr class="align-middle"&gt;
                    &lt;th scope="col" class="ps-4"&gt;&lt;/th&gt;
                    &lt;th scope="col" class="py-3"&gt;訂單編號&lt;/th&gt;
                    &lt;th scope="col"&gt;Email&lt;/th&gt;
                    &lt;th scope="col"&gt;顧客姓名&lt;/th&gt;
                    &lt;th scope="col"&gt;購買品項&lt;/th&gt;
                    &lt;th scope="col"&gt;付款狀態&lt;/th&gt;
                    &lt;th scope="col"&gt;購買金額&lt;/th&gt;
                    &lt;th scope="col" class="pe-4"&gt;編輯&lt;/th&gt;
                  &lt;/tr&gt;
                &lt;/thead&gt;
                &lt;tbody class="text-nowrap"&gt;
                  &lt;tr&gt;
                    &lt;td scope="row" class="ps-4" &gt;
                      &lt;input type="checkbox" class="form-check-input"&gt;
                    &lt;/td&gt;
                    &lt;td&gt;TX20220315171601&lt;/td&gt;
                    &lt;td&gt;bear123@email.com&lt;/td&gt;
                    &lt;td&gt;貝小熊&lt;/td&gt;
                    &lt;td&gt;食品專賣店：餅乾類&lt;/td&gt;
                    &lt;td&gt;&lt;div class="text-muted"&gt;尚未付款&lt;/div&gt;&lt;/td&gt;
                    &lt;td class="text-end"&gt;600&lt;/td&gt;
                    &lt;td class="text-end pe-4"&gt;
                      &lt;div class="btn-group"&gt;
                        &lt;a href="#" class="btn btn-sm btn-outline-dark"&gt;編輯 &lt;i class="bi bi-pen"&gt;&lt;/i&gt;&lt;/a&gt;
                          &lt;button class="btn btn-sm btn-outline-dark dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false"&gt;
                            操作
                          &lt;/button&gt;
                          &lt;ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1"&gt;
                            &lt;li&gt;&lt;a class="dropdown-item" href="#"&gt;修改狀態&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a class="dropdown-item text-danger" href="#" data-bs-toggle="modal" data-bs-target="#deleteModal" data-bs-order-id="TX20220315171601"&gt;刪除訂單&lt;/a&gt;&lt;/li&gt;
                          &lt;/ul&gt;
                      &lt;/div&gt;
                    &lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                    &lt;td scope="row" class="ps-4" &gt;
                      &lt;input type="checkbox" class="form-check-input"&gt;
                    &lt;/td&gt;
                    &lt;td&gt;TX20220315170201&lt;/td&gt;
                    &lt;td&gt;fish123@email.com&lt;/td&gt;
                    &lt;td&gt;溪小魚&lt;/td&gt;
                    &lt;td&gt;食品專賣店：飲料類&lt;/td&gt;
                    &lt;td&gt;&lt;div class="text-muted"&gt;尚未付款&lt;/div&gt;&lt;/td&gt;
                    &lt;td class="text-end"&gt;1,200&lt;/td&gt;
                    &lt;td class="text-end pe-4"&gt;
                      &lt;div class="btn-group"&gt;
                        &lt;a href="#" class="btn btn-sm btn-outline-dark"&gt;編輯 &lt;i class="bi bi-pen"&gt;&lt;/i&gt;&lt;/a&gt;
                          &lt;button class="btn btn-sm btn-outline-dark dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false"&gt;
                            操作
                          &lt;/button&gt;
                          &lt;ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1"&gt;
                            &lt;li&gt;&lt;a class="dropdown-item" href="#"&gt;修改狀態&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a class="dropdown-item text-danger" href="#" data-bs-toggle="modal" data-bs-target="#deleteModal" data-bs-order-id="TX20220315170201"&gt;刪除訂單&lt;/a&gt;&lt;/li&gt;
                          &lt;/ul&gt;
                      &lt;/div&gt;
                    &lt;/td&gt;
                  &lt;/tr&gt;
                  &lt;tr&gt;
                    &lt;td scope="row" class="ps-4" &gt;
                      &lt;input type="checkbox" class="form-check-input"&gt;
                    &lt;/td&gt;
                    &lt;td&gt;TX20220315190301&lt;/td&gt;
                    &lt;td&gt;dog123@email.com&lt;/td&gt;
                    &lt;td&gt;毛小熊&lt;/td&gt;
                    &lt;td&gt;食品專賣店：熟食類&lt;/td&gt;
                    &lt;td&gt;&lt;div class="text-muted"&gt;尚未付款&lt;/div&gt;&lt;/td&gt;
                    &lt;td class="text-end"&gt;2,200&lt;/td&gt;
                    &lt;td class="text-end pe-4"&gt;
                      &lt;div class="btn-group"&gt;
                        &lt;a href="#" class="btn btn-sm btn-outline-dark"&gt;編輯 &lt;i class="bi bi-pen"&gt;&lt;/i&gt;&lt;/a&gt;
                          &lt;button class="btn btn-sm btn-outline-dark dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false"&gt;
                            操作
                          &lt;/button&gt;
                          &lt;ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1"&gt;
                            &lt;li&gt;&lt;a class="dropdown-item" href="#"&gt;修改狀態&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a class="dropdown-item text-danger" href="#" data-bs-toggle="modal" data-bs-target="#deleteModal" data-bs-order-id="TX20220315190301"&gt;刪除訂單&lt;/a&gt;&lt;/li&gt;
                          &lt;/ul&gt;
                      &lt;/div&gt;
                    &lt;/td&gt;
                  &lt;/tr&gt;
                &lt;/tbody&gt;
              &lt;/table&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="card-footer bg-transparent py-3"&gt;
            &lt;nav aria-label="Page navigation example"&gt;
              &lt;ul class="pagination justify-content-end mb-0"&gt;
                &lt;li class="page-item"&gt;&lt;a class="page-link" href="#"&gt;Previous&lt;/a&gt;&lt;/li&gt;
                &lt;li class="page-item"&gt;&lt;a class="page-link" href="#"&gt;1&lt;/a&gt;&lt;/li&gt;
                &lt;li class="page-item"&gt;&lt;a class="page-link" href="#"&gt;2&lt;/a&gt;&lt;/li&gt;
                &lt;li class="page-item"&gt;&lt;a class="page-link" href="#"&gt;3&lt;/a&gt;&lt;/li&gt;
                &lt;li class="page-item"&gt;&lt;a class="page-link" href="#"&gt;Next&lt;/a&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/nav&gt;
          &lt;/div&gt;
          &lt;!-- Modal --&gt;
          &lt;div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true"&gt;
            &lt;div class="modal-dialog"&gt;
              &lt;div class="modal-content"&gt;
                &lt;div class="modal-header"&gt;
                  &lt;h5 class="modal-title" id="exampleModalLabel"&gt;刪除訂單&lt;/h5&gt;
                  &lt;button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"&gt;&lt;/button&gt;
                &lt;/div&gt;
                &lt;div class="modal-body"&gt;
                  確認刪除「&lt;span id="deleteText"&gt;&lt;/span&gt;」的訂單嗎？
                &lt;/div&gt;
                &lt;div class="modal-footer"&gt;
                  &lt;button type="button" class="btn btn-outline-dark" data-bs-dismiss="modal"&gt;取消&lt;/button&gt;
                  &lt;button type="button" class="btn btn-danger"&gt;確認刪除&lt;/button&gt;
                &lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

    &lt;/main&gt;
  &lt;/div&gt;
  &lt;!-- 後台管理：結構規劃 end --&gt;

  &lt;!-- JavaScript Bundle with Popper --&gt;
  &lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-/bQdsTh/da6pkI1MST/rWKFNjaCP5gBSY4sEBT38Q/9RBh9AH40zEOg7Hlq2THRZ" crossorigin="anonymous"&gt;&lt;/script&gt;
  &lt;script src="./javascripts/modal.js"&gt;&lt;/script&gt;
  &lt;script src="./javascripts/all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// home.html

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;後台管理 - 首頁&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;!-- 後台管理：結構規劃 start --&gt;
  &lt;div class="d-flex"&gt;
    &lt;aside class="sidebar vh-100 border-end pt-3 d-flex bg-white flex-column"&gt;
      &lt;!-- 1. 後台名稱 --&gt;
      &lt;div class="px-4"&gt;
        &lt;strong&gt;食品專賣店&lt;/strong&gt;
        - 後台管理
      &lt;/div&gt;
      &lt;!-- 2. 選單 --&gt;
      &lt;div class="overflow-auto mt-3"&gt;
        &lt;div&gt;
          &lt;a href="home.html" class="sidebar-link active"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-house me-2"&gt;&lt;/i&gt;
              首頁
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;

        &lt;div&gt;
          &lt;a href="#menu-order" class="sidebar-link" data-bs-toggle="collapse"&gt;
            &lt;div class="d-flex justify-content-between px-4"&gt;
              &lt;p class="mb-0"&gt;
                &lt;i class="bi bi-card-checklist me-2"&gt;&lt;/i&gt;
                訂單管理
              &lt;/p&gt;
              &lt;i class="bi bi-caret-down"&gt;&lt;/i&gt;
            &lt;/div&gt;
          &lt;/a&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="orders.html" class="sidebar-link"&gt;
              &lt;div class="ps-5"&gt;
                訂單列表
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="#" class="sidebar-link"&gt;
              &lt;div class="ps-5"&gt;
                單一訂單細節
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="#" class="sidebar-link"&gt;
              &lt;div class="ps-5"&gt;
                其他項目
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div&gt;
          &lt;a href="#" class="sidebar-link"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-card-list me-2"&gt;&lt;/i&gt;
              產品列表
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;
        &lt;div&gt;
          &lt;a href="#" class="sidebar-link"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-list-stars me-2"&gt;&lt;/i&gt;
              顧客評價
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;!-- 3. 登出按鈕 --&gt;
      &lt;a href="#" class="mt-auto sidebar-link"&gt;
        &lt;div class="px-4"&gt;
          &lt;i class="bi bi-box-arrow-right me-2"&gt;&lt;/i&gt;
          登出
        &lt;/div&gt;
      &lt;/a&gt;
    &lt;/aside&gt;
    &lt;main class="main"&gt;
      &lt;div class="bg-white w-100 border-bottom sticky-top"&gt;
        &lt;a href="#" class="d-inline-block py-3 px-4 border-end" id="toggle-btn"&gt;
          &lt;i class="bi bi-arrows-angle-expand"&gt;&lt;/i&gt;
        &lt;/a&gt;
      &lt;/div&gt;

      &lt;div class="p-4"&gt;
        &lt;!-- 主要內容 --&gt;
        &lt;div class="row g-4 row-cols-lg-3 mb-4"&gt;
          &lt;div class="col"&gt;
            &lt;div class="card shadow-sm h-100"&gt;
              &lt;div class="card-body text-end"&gt;
                &lt;h2 class="display-6"&gt;在線人數&lt;/h2&gt;
                &lt;p class="display-4 mb-0"&gt;
                  3,996
                &lt;/p&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="col"&gt;
            &lt;div class="card shadow-sm h-100"&gt;
              &lt;div class="card-body text-end"&gt;
                &lt;h2 class="display-6"&gt;訂單數&lt;/h2&gt;
                &lt;p class="display-4 mb-0"&gt;1,022&lt;/p&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="col"&gt;
            &lt;div class="card shadow-sm h-100"&gt;
              &lt;div class="card-body text-end"&gt;
                &lt;h2 class="display-6"&gt;營業額&lt;/h2&gt;
                &lt;p class="mb-0 text-success"&gt;&lt;span class="fs-3"&gt;NT$&lt;/span&gt;&lt;span class="display-4"&gt;120,500&lt;/span&gt;&lt;/p&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;

        &lt;div class="row g-4"&gt;
          &lt;div class="col-lg-4"&gt;
            &lt;div class="card shadow-sm h-100"&gt;
              &lt;div class="card-body"&gt;
                &lt;canvas id="pie-chart" class="img-fluid"&gt;&lt;/canvas&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="col"&gt;
            &lt;div class="card shadow-sm h-100"&gt;
              &lt;div class="card-body"&gt;
                &lt;canvas id="bar-chart" class="img-fluid"&gt;&lt;/canvas&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

      &lt;div class="card shadow-sm"&gt;
        &lt;div class="card-header bg-transparent"&gt;
          &lt;div class="input-group"&gt;
            &lt;span class="input-group-text border-0 bg-transparent pe-0"&gt;
              &lt;i class="bi bi-search"&gt;&lt;/i&gt;
            &lt;/span&gt;
            &lt;input type="search" class="form-control border-0 shadow-none"&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="card-body p-0"&gt;
          &lt;div class="table-responsive"&gt;
            &lt;table class="table table-hover mb-0"&gt;
              &lt;thead class="bg-light text-nowrap"&gt;
                &lt;tr class="align-middle"&gt;
                  &lt;th scope="col" class="py-3 ps-4"&gt;訂單編號&lt;/th&gt;
                  &lt;th scope="col"&gt;Email&lt;/th&gt;
                  &lt;th scope="col"&gt;顧客姓名&lt;/th&gt;
                  &lt;th scope="col"&gt;購買品項&lt;/th&gt;
                  &lt;th scope="col"&gt;付款狀態&lt;/th&gt;
                  &lt;th scope="col"&gt;購買金額&lt;/th&gt;
                  &lt;th scope="col" class="pe-4"&gt;編輯&lt;/th&gt;
                &lt;/tr&gt;
              &lt;/thead&gt;
              &lt;tbody class="text-nowrap"&gt;
                &lt;tr&gt;
                  &lt;td scope="row" class="ps-4"&gt;TX20220315171601&lt;/td&gt;
                  &lt;td&gt;bear123@email.com&lt;/td&gt;
                  &lt;td&gt;貝小熊&lt;/td&gt;
                  &lt;td&gt;食品專賣店：餅乾類&lt;/td&gt;
                  &lt;td&gt;&lt;div class="text-muted"&gt;尚未付款&lt;/div&gt;&lt;/td&gt;
                  &lt;td class="text-end"&gt;600&lt;/td&gt;
                  &lt;td class="text-end pe-4"&gt;
                    &lt;a href="#" class="btn btn-sm btn-outline-dark me-2"&gt;編輯 &lt;i class="bi bi-pen"&gt;&lt;/i&gt;&lt;/a&gt;
                  &lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td scope="row" class="ps-4"&gt;TX20220315170201&lt;/td&gt;
                  &lt;td&gt;fish123@email.com&lt;/td&gt;
                  &lt;td&gt;溪小魚&lt;/td&gt;
                  &lt;td&gt;食品專賣店：飲料類&lt;/td&gt;
                  &lt;td&gt;&lt;div class="text-muted"&gt;尚未付款&lt;/div&gt;&lt;/td&gt;
                  &lt;td class="text-end"&gt;1,200&lt;/td&gt;
                  &lt;td class="text-end pe-4"&gt;
                    &lt;a href="#" class="btn btn-sm btn-outline-dark me-2"&gt;編輯 &lt;i class="bi bi-pen"&gt;&lt;/i&gt;&lt;/a&gt;
                  &lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                  &lt;td scope="row" class="ps-4"&gt;TX20220315190301&lt;/td&gt;
                  &lt;td&gt;dog123@email.com&lt;/td&gt;
                  &lt;td&gt;毛小熊&lt;/td&gt;
                  &lt;td&gt;食品專賣店：熟食類&lt;/td&gt;
                  &lt;td&gt;&lt;div class="text-muted"&gt;尚未付款&lt;/div&gt;&lt;/td&gt;
                  &lt;td class="text-end"&gt;2,200&lt;/td&gt;
                  &lt;td class="text-end pe-4"&gt;
                    &lt;a href="#" class="btn btn-sm btn-outline-dark me-2"&gt;編輯 &lt;i class="bi bi-pen"&gt;&lt;/i&gt;&lt;/a&gt;
                  &lt;/td&gt;
                &lt;/tr&gt;
              &lt;/tbody&gt;
            &lt;/table&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="card-footer bg-transparent py-3"&gt;
          &lt;nav aria-label="Page navigation example"&gt;
            &lt;ul class="pagination justify-content-end mb-0"&gt;
              &lt;li class="page-item"&gt;&lt;a class="page-link" href="#"&gt;Previous&lt;/a&gt;&lt;/li&gt;
              &lt;li class="page-item"&gt;&lt;a class="page-link" href="#"&gt;1&lt;/a&gt;&lt;/li&gt;
              &lt;li class="page-item"&gt;&lt;a class="page-link" href="#"&gt;2&lt;/a&gt;&lt;/li&gt;
              &lt;li class="page-item"&gt;&lt;a class="page-link" href="#"&gt;3&lt;/a&gt;&lt;/li&gt;
              &lt;li class="page-item"&gt;&lt;a class="page-link" href="#"&gt;Next&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/nav&gt;
        &lt;/div&gt;
      &lt;/div&gt;

    &lt;/main&gt;
  &lt;/div&gt;
  &lt;!-- 後台管理：結構規劃 end --&gt;

  &lt;!-- JavaScript Bundle with Popper --&gt;
  &lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-/bQdsTh/da6pkI1MST/rWKFNjaCP5gBSY4sEBT38Q/9RBh9AH40zEOg7Hlq2THRZ" crossorigin="anonymous"&gt;&lt;/script&gt;
  &lt;script src="https://cdn.jsdelivr.net/npm/chart.js"&gt;&lt;/script&gt;
  &lt;script src="./javascripts/chart.js"&gt;&lt;/script&gt;
  &lt;script src="./javascripts/all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// javascripts/all.js

const toggleMenuBtn = document.querySelector('#toggle-btn');
const body = document.querySelector('body');
toggleMenuBtn.addEventListener('click', (evt) =&gt; {
  // console.log(evt);
  evt.preventDefault();
  body.classList.toggle('sidebar-toggled');
});</code></pre>



<pre class="wp-block-code"><code>// javascripts/chart.js

// 動態圖表
(() =&gt; {
  const chartColors = {
    red: 'rgb(255, 99, 132)',
    orange: 'rgb(255, 159, 64)',
    yellow: 'rgb(255, 205, 86)',
    green: 'rgb(75, 192, 192)',
    blue: 'rgb(54, 162, 235)',
    purple: 'rgb(153, 102, 255)',
    grey: 'rgb(201, 203, 207)'
  };
  var randomScalingFactor = function () {
    return Math.round(Math.random() * 2000000);
  };

  const pieCtx = document.getElementById('pie-chart').getContext('2d');
  const barCtx = document.getElementById('bar-chart').getContext('2d');

  const config = {
    type: 'pie',
    data: {
      datasets: &#91;{
        data: &#91;
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
        ],
        backgroundColor: &#91;
          chartColors.red,
          chartColors.orange,
          chartColors.yellow,
          chartColors.green,
          chartColors.blue,
        ],
        label: 'Dataset 1'
      }],
      labels: &#91;
        '餅乾類',
        '飲料類',
        '熟食類',
        '生鮮類',
        '糖果類',
      ]
    },
    options: {
      responsive: true
    }
  };
  const barConfig = {
    type: 'bar',
    data: {
      datasets: &#91;{
        data: &#91;
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
          randomScalingFactor(),
        ],
        backgroundColor: &#91;
          chartColors.red,
          chartColors.orange,
          chartColors.yellow,
          chartColors.green,
          chartColors.blue,
          chartColors.purple,
        ],
        label: '單月營業額'
      }],
      labels: &#91;
        '一月',
        '二月',
        '三月',
        '四月',
        '五月',
        '六月',
      ]
    },
    options: {
      responsive: true
    }
  };
  const pieChart = new Chart(pieCtx, config);
  const barChart = new Chart(barCtx, barConfig);
})();</code></pre>



<pre class="wp-block-code"><code>// javascripts/modal.js

// 互動視窗 Modal
const modalByDelete = document.querySelector('#deleteModal');
modalByDelete.addEventListener('show.bs.modal', function(event) {
  const button = event.relatedTarget;
  const orderId = button.dataset.bsOrderId;
  // console.log(button, orderId);
  const modalText = modalByDelete.querySelector('#deleteText');

  modalText.textContent = orderId;
});</code></pre>



<ul><li><a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.1/components/modal/" target="_blank">元件 &gt; 互動視窗</a></li><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/modal/#varying-modal-content" target="_blank" rel="noreferrer noopener">元件 &gt; 互動視窗 &gt; 不同的互動視窗內容</a></li></ul>



<h3>後台管理：單一產品頁面製作</h3>



<pre class="wp-block-code"><code>// order.html

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;後台管理 - 首頁&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;!-- 後台管理：結構規劃 start --&gt;
  &lt;div class="d-flex"&gt;
    &lt;aside class="sidebar vh-100 border-end pt-3 d-flex bg-white flex-column"&gt;
      &lt;!-- 1. 後台名稱 --&gt;
      &lt;div class="px-4"&gt;
        &lt;strong&gt;食品專賣店&lt;/strong&gt;
        - 後台管理
      &lt;/div&gt;
      &lt;!-- 2. 選單 --&gt;
      &lt;div class="overflow-auto mt-3"&gt;
        &lt;div&gt;
          &lt;a href="home.html" class="sidebar-link"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-house me-2"&gt;&lt;/i&gt;
              首頁
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;

        &lt;div&gt;
          &lt;a href="#menu-order" class="sidebar-link" data-bs-toggle="collapse"&gt;
            &lt;div class="d-flex justify-content-between px-4"&gt;
              &lt;p class="mb-0"&gt;
                &lt;i class="bi bi-card-checklist me-2"&gt;&lt;/i&gt;
                訂單管理
              &lt;/p&gt;
              &lt;i class="bi bi-caret-down"&gt;&lt;/i&gt;
            &lt;/div&gt;
          &lt;/a&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="orders.html" class="sidebar-link"&gt;
              &lt;div class="ps-5"&gt;
                訂單列表
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="#" class="sidebar-link active"&gt;
              &lt;div class="ps-5"&gt;
                單一訂單細節
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="#" class="sidebar-link"&gt;
              &lt;div class="ps-5"&gt;
                其他項目
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div&gt;
          &lt;a href="#" class="sidebar-link"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-card-list me-2"&gt;&lt;/i&gt;
              產品列表
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;
        &lt;div&gt;
          &lt;a href="#" class="sidebar-link"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-list-stars me-2"&gt;&lt;/i&gt;
              顧客評價
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;!-- 3. 登出按鈕 --&gt;
      &lt;a href="#" class="mt-auto sidebar-link"&gt;
        &lt;div class="px-4"&gt;
          &lt;i class="bi bi-box-arrow-right me-2"&gt;&lt;/i&gt;
          登出
        &lt;/div&gt;
      &lt;/a&gt;
    &lt;/aside&gt;
    &lt;main class="main"&gt;
      &lt;div class="bg-white w-100 border-bottom sticky-top"&gt;
        &lt;a href="#" class="d-inline-block py-3 px-4 border-end" id="toggle-btn"&gt;
          &lt;i class="bi bi-arrows-angle-expand"&gt;&lt;/i&gt;
        &lt;/a&gt;
      &lt;/div&gt;

      &lt;div class="p-4"&gt;
        &lt;!-- 主要內容 --&gt;
        &lt;div class="row"&gt;
          &lt;div class="col-lg-3 mb-3"&gt;
            &lt;div class="list-group sticky-top" style="top: 80px;"&gt;
              &lt;a href="#" class="list-group-item list-group-item-action active" aria-current="true"&gt;
                摘要
              &lt;/a&gt;
              &lt;a href="#" class="list-group-item list-group-item-action"&gt;購買品項&lt;/a&gt;
              &lt;a href="#" class="list-group-item list-group-item-action"&gt;發票管理&lt;/a&gt;
              &lt;a href="#" class="list-group-item list-group-item-action"&gt;危險操作&lt;/a&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="col-lg-9"&gt;
            &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

    &lt;/main&gt;
  &lt;/div&gt;
  &lt;!-- 後台管理：結構規劃 end --&gt;

  &lt;!-- JavaScript Bundle with Popper --&gt;
  &lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-/bQdsTh/da6pkI1MST/rWKFNjaCP5gBSY4sEBT38Q/9RBh9AH40zEOg7Hlq2THRZ" crossorigin="anonymous"&gt;&lt;/script&gt;
  &lt;script src="./javascripts/all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// helpers/_variables.scss

// List group

// scss-docs-start list-group-variables
$list-group-color:                  $gray-900 !default;
$list-group-bg:                     $white !default;
$list-group-border-color:           rgba($black, .125) !default;
$list-group-border-width:           $border-width !default;
$list-group-border-radius:          $border-radius-lg; // $border-radius !default;

$list-group-item-padding-y:         $spacer * .5 !default;
$list-group-item-padding-x:         $spacer !default;
$list-group-item-bg-scale:          -80% !default;
$list-group-item-color-scale:       40% !default;

$list-group-hover-bg:               $gray-100 !default;
$list-group-active-color:           $component-active-color !default;
$list-group-active-bg:              $component-active-bg !default;
$list-group-active-border-color:    $list-group-active-bg !default;

$list-group-disabled-color:         $gray-600 !default;
$list-group-disabled-bg:            $list-group-bg !default;

$list-group-action-color:           $gray-700 !default;
$list-group-action-hover-color:     $list-group-action-color !default;

$list-group-action-active-color:    $body-color !default;
$list-group-action-active-bg:       $gray-200 !default;
// scss-docs-end list-group-variables</code></pre>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/list-group/#links-and-buttons" target="_blank" rel="noreferrer noopener">元件 &gt; 列表群組 &gt; 連結和按鈕</a></li></ul>



<h3 class="has-background" style="background-color:#ff6663">後台管理：Sticky 與 scroll spy 的混合運用</h3>



<pre class="wp-block-code"><code>// order.html

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;後台管理 - 單一訂單細節&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"&gt;
&lt;/head&gt;
&lt;body data-bs-spy="scroll" data-bs-target="#detail-list-item" data-bs-offset="80"&gt;
  
  &lt;!-- 後台管理：結構規劃 start --&gt;
  &lt;div class="d-flex"&gt;
    &lt;aside class="sidebar vh-100 border-end pt-3 d-flex bg-white flex-column"&gt;
      &lt;!-- 1. 後台名稱 --&gt;
      &lt;div class="px-4"&gt;
        &lt;strong&gt;食品專賣店&lt;/strong&gt;
        - 後台管理
      &lt;/div&gt;
      &lt;!-- 2. 選單 --&gt;
      &lt;div class="overflow-auto mt-3"&gt;
        &lt;div&gt;
          &lt;a href="home.html" class="sidebar-link"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-house me-2"&gt;&lt;/i&gt;
              首頁
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;

        &lt;div&gt;
          &lt;a href="#menu-order" class="sidebar-link" data-bs-toggle="collapse"&gt;
            &lt;div class="d-flex justify-content-between px-4"&gt;
              &lt;p class="mb-0"&gt;
                &lt;i class="bi bi-card-checklist me-2"&gt;&lt;/i&gt;
                訂單管理
              &lt;/p&gt;
              &lt;i class="bi bi-caret-down"&gt;&lt;/i&gt;
            &lt;/div&gt;
          &lt;/a&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="orders.html" class="sidebar-link"&gt;
              &lt;div class="ps-5"&gt;
                訂單列表
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="order.html" class="sidebar-link active"&gt;
              &lt;div class="ps-5"&gt;
                單一訂單細節
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
          &lt;div class="collapse" id="menu-order"&gt;
            &lt;a href="#" class="sidebar-link"&gt;
              &lt;div class="ps-5"&gt;
                其他項目
              &lt;/div&gt;
            &lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div&gt;
          &lt;a href="#" class="sidebar-link"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-card-list me-2"&gt;&lt;/i&gt;
              產品列表
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;
        &lt;div&gt;
          &lt;a href="#" class="sidebar-link"&gt;
            &lt;div class="px-4"&gt;
              &lt;i class="bi bi-list-stars me-2"&gt;&lt;/i&gt;
              顧客評價
            &lt;/div&gt;
          &lt;/a&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;!-- 3. 登出按鈕 --&gt;
      &lt;a href="#" class="mt-auto sidebar-link"&gt;
        &lt;div class="px-4"&gt;
          &lt;i class="bi bi-box-arrow-right me-2"&gt;&lt;/i&gt;
          登出
        &lt;/div&gt;
      &lt;/a&gt;
    &lt;/aside&gt;
    &lt;main class="main"&gt;
      &lt;div class="bg-white w-100 border-bottom sticky-top"&gt;
        &lt;a href="#" class="d-inline-block py-3 px-4 border-end" id="toggle-btn"&gt;
          &lt;i class="bi bi-arrows-angle-expand"&gt;&lt;/i&gt;
        &lt;/a&gt;
      &lt;/div&gt;

      &lt;div class="p-4"&gt;
        &lt;!-- 主要內容 --&gt;
        &lt;div class="row"&gt;
          &lt;div class="col-lg-3 mb-3"&gt;
            &lt;nav id="detail-list-item" class="list-group sticky-top" style="top: 80px;"&gt;
              &lt;a href="#card-summary" class="list-group-item list-group-item-action active" aria-current="true"&gt;
                摘要
              &lt;/a&gt;
              &lt;a href="#card-detail" class="list-group-item list-group-item-action"&gt;購買品項&lt;/a&gt;
              &lt;a href="#card-invoice" class="list-group-item list-group-item-action"&gt;發票管理&lt;/a&gt;
              &lt;a href="#card-danger" class="list-group-item list-group-item-action"&gt;危險操作&lt;/a&gt;
            &lt;/nav&gt;
          &lt;/div&gt;
          &lt;div class="col-lg-9"&gt;
            &lt;div class="card mb-3"&gt;
              &lt;div class="card-header py-4" id="card-summary"&gt;
                摘要
              &lt;/div&gt;
              &lt;div class="card-body"&gt;
                &lt;dl class="row mb-0"&gt;
                  &lt;dt class="col-sm-3 text-truncate"&gt;訂單編號&lt;/dt&gt;
                  &lt;dd class="col-sm-9"&gt;TX20220315171601&lt;/dd&gt;
                  &lt;dt class="col-sm-3 text-truncate"&gt;訂單金額&lt;/dt&gt;
                  &lt;dd class="col-sm-9"&gt;600&lt;/dd&gt;
                  &lt;dt class="col-sm-3 text-truncate"&gt;訂單狀態&lt;/dt&gt;
                  &lt;dd class="col-sm-9"&gt;待處理&lt;/dd&gt;
                  &lt;dt class="col-sm 3 text-truncate"&gt;發票狀態&lt;/dt&gt;
                  &lt;dd class="col-sm-9"&gt;未開立&lt;/dd&gt;
                &lt;/dl&gt;
              &lt;/div&gt;
            &lt;/div&gt;

            &lt;div class="card mb-3"&gt;
              &lt;div class="card-header py-4" id="card-detail"&gt;
                購買品項
              &lt;/div&gt;
              &lt;div class="card-body p-0"&gt;
                &lt;table class="table table-hover mb-0 text-nowrap align-middle w-100" style="font-size: 14px;"&gt;
                  &lt;thead class="bg-light"&gt;
                    &lt;tr&gt;
                      &lt;th scope="col" class="py-3 ps-4 border-0"&gt;&lt;/th&gt;
                      &lt;th scope="col" class="py-3 border-0"&gt;貨號&lt;/th&gt;
                      &lt;th scope="col" class="py-3 border-0"&gt;商品名稱&lt;/th&gt;
                      &lt;th scope="col" class="py-3 border-0"&gt;購買價格&lt;/th&gt;
                      &lt;th scope="col" class="py-3 border-0"&gt;訂購數量&lt;/th&gt;
                      &lt;th scope="col" class="py-3 border-0"&gt;出貨狀態&lt;/th&gt;
                      &lt;th scope="col" class="py-3 pe-3 border-0"&gt;編輯&lt;/th&gt;
                    &lt;/tr&gt;
                  &lt;/thead&gt;
                  &lt;tbody class="text-nowrap"&gt;
                    &lt;tr class="align-middle"&gt;
                      &lt;td class="ps-4"&gt;&lt;input type="checkbox" class="form-check-input"&gt;&lt;/td&gt;
                      &lt;td scope="row"&gt;P20220315171601&lt;/td&gt;
                      &lt;td&gt;餅乾類&lt;/td&gt;
                      &lt;td&gt;600&lt;/td&gt;
                      &lt;td&gt;1&lt;/td&gt;
                      &lt;td class="text-muted"&gt;尚未處理&lt;/td&gt;
                      &lt;td class="text-center pe-3"&gt;
                        &lt;div class="btn-group"&gt;
                          &lt;button type="button" class="btn btn-outline-secondary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"&gt;編輯&lt;/button&gt;
                          &lt;ul class="dropdown-menu"&gt;
                            &lt;li&gt;&lt;a href="#" class="dropdown-item"&gt;尚未處理&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a href="#" class="dropdown-item"&gt;已出貨&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a href="#" class="dropdown-item"&gt;已取貨&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;hr class="dropdown-divider"&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a href="#" class="dropdown-item text-danger"&gt;刪除品項&lt;/a&gt;&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/div&gt;
                      &lt;/td&gt;
                    &lt;/tr&gt;
                    &lt;tr class="align-middle"&gt;
                      &lt;td class="ps-4"&gt;&lt;input type="checkbox" class="form-check-input"&gt;&lt;/td&gt;
                      &lt;td scope="row"&gt;P20220315170201&lt;/td&gt;
                      &lt;td&gt;飲料類&lt;/td&gt;
                      &lt;td&gt;1,200&lt;/td&gt;
                      &lt;td&gt;2&lt;/td&gt;
                      &lt;td class="text-muted"&gt;尚未處理&lt;/td&gt;
                      &lt;td class="text-center pe-3"&gt;
                        &lt;div class="btn-group"&gt;
                          &lt;button type="button" class="btn btn-outline-secondary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"&gt;編輯&lt;/button&gt;
                          &lt;ul class="dropdown-menu"&gt;
                            &lt;li&gt;&lt;a href="#" class="dropdown-item"&gt;尚未處理&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a href="#" class="dropdown-item"&gt;已出貨&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a href="#" class="dropdown-item"&gt;已取貨&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;hr class="dropdown-divider"&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a href="#" class="dropdown-item text-danger"&gt;刪除品項&lt;/a&gt;&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/div&gt;
                      &lt;/td&gt;
                    &lt;/tr&gt;
                    &lt;tr class="align-middle"&gt;
                      &lt;td class="ps-4"&gt;&lt;input type="checkbox" class="form-check-input"&gt;&lt;/td&gt;
                      &lt;td scope="row"&gt;P20220315190301&lt;/td&gt;
                      &lt;td&gt;熟食類&lt;/td&gt;
                      &lt;td&gt;2,200&lt;/td&gt;
                      &lt;td&gt;5&lt;/td&gt;
                      &lt;td class="text-muted"&gt;尚未處理&lt;/td&gt;
                      &lt;td class="text-center pe-3"&gt;
                        &lt;div class="btn-group"&gt;
                          &lt;button type="button" class="btn btn-outline-secondary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"&gt;編輯&lt;/button&gt;
                          &lt;ul class="dropdown-menu"&gt;
                            &lt;li&gt;&lt;a href="#" class="dropdown-item"&gt;尚未處理&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a href="#" class="dropdown-item"&gt;已出貨&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a href="#" class="dropdown-item"&gt;已取貨&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;hr class="dropdown-divider"&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a href="#" class="dropdown-item text-danger"&gt;刪除品項&lt;/a&gt;&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/div&gt;
                      &lt;/td&gt;
                    &lt;/tr&gt;
                  &lt;/tbody&gt;
                &lt;/table&gt;
                &lt;div class="px-4 py-3"&gt;
                  &lt;div class="btn-group"&gt;
                    &lt;button type="button" class="btn btn-outline-secondary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"&gt;
                      出貨狀態管理
                    &lt;/button&gt;
                    &lt;ul class="dropdown-menu"&gt;
                      &lt;li&gt;&lt;a href="#" class="dropdown-item"&gt;尚未處理&lt;/a&gt;&lt;/li&gt;
                      &lt;li&gt;&lt;a href="#" class="dropdown-item"&gt;已出貨&lt;/a&gt;&lt;/li&gt;
                      &lt;li&gt;&lt;a href="#" class="dropdown-item"&gt;已取貨&lt;/a&gt;&lt;/li&gt;
                      &lt;li&gt;&lt;hr class="dropdown-divider"&gt;&lt;/li&gt;
                      &lt;li&gt;&lt;a href="#" class="dropdown-item text-danger"&gt;刪除品項&lt;/a&gt;&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/div&gt;
                &lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;

            &lt;div class="card mb-3"&gt;
              &lt;div class="card-header py-4" id="card-invoice"&gt;
                發票管理
              &lt;/div&gt;
              &lt;div class="card-body"&gt;
                &lt;div class="row mb-3"&gt;
                  &lt;label for="invoiceType" class="col-sm-2 col-form-label"&gt;發票類型&lt;/label&gt;
                  &lt;div class="col-sm-10"&gt;
                    &lt;select name="" id="invoiceType" class="form-select"&gt;
                      &lt;option value=""&gt;個人發票&lt;/option&gt;
                      &lt;option value=""&gt;營業人三聯式發票&lt;/option&gt;
                      &lt;option value=""&gt;捐贈發票&lt;/option&gt;
                    &lt;/select&gt;
                  &lt;/div&gt;
                &lt;/div&gt;
                &lt;div class="row mb-3"&gt;
                  &lt;label for="taxNumber" class="col-sm-2 col-form-label"&gt;統一編號&lt;/label&gt;
                  &lt;div class="col-sm-10"&gt;
                    &lt;input type="text" id="taxNumber" class="form-control" value="11223355"&gt;
                  &lt;/div&gt;
                &lt;/div&gt;
                &lt;div class="row mb-3"&gt;
                  &lt;label for="companyName" class="col-sm-2 col-form-label"&gt;公司名稱&lt;/label&gt;
                  &lt;div class="col-sm-10"&gt;
                    &lt;input type="text" id="companyName" class="form-control" value="食品專賣店"&gt;
                  &lt;/div&gt;
                &lt;/div&gt;
                &lt;div class="text-end"&gt;
                  &lt;button type="button" class="btn btn-outline-primary"&gt;更多資訊&lt;/button&gt;
                &lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;

            &lt;div class="card mb-3"&gt;
              &lt;div class="card-header py-4" id="card-danger"&gt;
                危險操作
              &lt;/div&gt;
              &lt;div class="card-body"&gt;
                &lt;div class="row align-items-center mb-3"&gt;
                  &lt;div class="col-2"&gt;
                    &lt;button type="button" class="btn btn-outline-secondary w-100"&gt;退款&lt;/button&gt;
                  &lt;/div&gt;
                  &lt;div class="col"&gt;退還用戶款項&lt;/div&gt;
                &lt;/div&gt;
                &lt;div class="row align-items-center mb-3"&gt;
                  &lt;div class="col-2"&gt;
                    &lt;button type="button" class="btn btn-outline-secondary w-100"&gt;折讓&lt;/button&gt;
                  &lt;/div&gt;
                  &lt;div class="col"&gt;
                    針對已開立的訂單退回部分款項
                  &lt;/div&gt;
                &lt;/div&gt;
                &lt;div class="row align-items-center mb-3"&gt;
                  &lt;div class="col-2"&gt;
                    &lt;button type="button" class="btn btn-outline-danger w-100"&gt;刪除訂單&lt;/button&gt;
                  &lt;/div&gt;
                  &lt;div class="col"&gt;
                    將訂單刪除，並移除相關訂單資訊
                  &lt;/div&gt;
                &lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;

            &lt;div&gt;
              &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;
            &lt;/div&gt;

          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;

    &lt;/main&gt;
  &lt;/div&gt;
  &lt;!-- 後台管理：結構規劃 end --&gt;

  &lt;!-- JavaScript Bundle with Popper --&gt;
  &lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-/bQdsTh/da6pkI1MST/rWKFNjaCP5gBSY4sEBT38Q/9RBh9AH40zEOg7Hlq2THRZ" crossorigin="anonymous"&gt;&lt;/script&gt;
  &lt;script src="./javascripts/all.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<ul><li><a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.1/content/typography/#description-list-alignment" target="_blank">內容 &gt; 文字排版 &gt; 描述型列表對齊</a></li><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/scrollspy/" target="_blank" rel="noreferrer noopener">元件 &gt; 滾動監控</a></li></ul>



<h3>後台管理：作業製作</h3>



<ol><li>每個分頁都做完，上傳至 Google Drive, GitHub</li><li>只做一頁，把所有分頁集合在一起</li></ol>



<h3>後台管理：範例程式碼參考</h3>



<p>注意：本章節提供 Codepen 範例程式碼，請勿直接複製，盡可能自行完成作業</p>



<p><a href="https://codepen.io/Wcc723/pen/JjymyYB" target="_blank" rel="noreferrer noopener">範例連結</a></p>



<p>製作作業時，請按照以下規則：</p>



<ul><li>請調整其他顏色，與範例不同</li><li>請完成所有的功能 (包含所有表格的下拉選單)</li><li>可選擇多檔繳交 (需附上完整 Sass)，或類似範例單一頁面繳交均可</li></ul>



<h2 class="has-background" style="background-color:#ff6663">CH14 – Landing Page 設計稿練習</h2>



<h3>Landing Page 設計稿練習：章節簡介</h3>



<ul><li>Sketch</li><li>Adobe XD</li><li>Figma</li></ul>



<h4>個人練習採用的圖片</h4>



<ul><li><a rel="noreferrer noopener" href="https://unsplash.com/photos/P1qyEf1g0HU" target="_blank">Photo by Glenn Carstens-Peters</a></li><li><a rel="noreferrer noopener" href="https://stocksnap.io/photo/white-shapes-HOGKNEMAUX" target="_blank">White Shapes Free Stock Image</a></li><li><a rel="noreferrer noopener" href="https://www.freepik.com/free-vector/business-team-planning-working-process-flat-vector-illustration-cartoon-colleagues-talking-sharing-thoughts-smiling-company-office-teamwork-workflow-concept_10606194.htm" target="_blank">Vector by pch.vector – 01</a></li><li><a rel="noreferrer noopener" href="https://www.freepik.com/free-vector/company-employees-sharing-thoughts-ideas_8270975.htm#page=6&amp;position=0&amp;from_view=author" target="_blank">Vector by pch.vector – 02</a></li><li><a rel="noreferrer noopener" href="https://www.freepik.com/free-vector/customer-giving-quality-feedback_8270988.htm#page=6&amp;position=29&amp;from_view=author" target="_blank">Vector by pch.vector – 03</a></li><li><a href="https://www.freepik.com/free-vector/cartoon-man-sitting-home-with-laptop_9649152.htm#query=freelancer&amp;position=2&amp;from_view=author" target="_blank" rel="noreferrer noopener">Vector by pch.vector – 04</a></li></ul>



<h3>Landing Page 設計稿練習：課程資源</h3>



<p><a href="https://hexschool.github.io/bootstrap5-homework/index.html" target="_blank" rel="noreferrer noopener">設計稿連結</a></p>



<p>圖檔連結可參考影音課程。</p>



<h3 class="has-background" style="background-color:#ff6663">Landing Page 設計稿練習：導覽列製作</h3>



<pre class="wp-block-code"><code>// .gitignore

.DS_Store
node_modules
/dist


# local env files
.env.local
.env.*.local

# Log files
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*

# Editor directories and files
.idea
.vscode
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?</code></pre>



<pre class="wp-block-code"><code>// stylesheets/all.scss

// Configuration
@import "../node_modules/bootstrap/scss/functions";
@import "./helpers/variables";
@import "../node_modules/bootstrap/scss/utilities";

@import "../node_modules/bootstrap/scss/mixins";

// Layout &amp; components
@import "../node_modules/bootstrap/scss/root";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";
@import "../node_modules/bootstrap/scss/images";
@import "../node_modules/bootstrap/scss/containers";
@import "../node_modules/bootstrap/scss/grid";
@import "../node_modules/bootstrap/scss/tables";
@import "../node_modules/bootstrap/scss/forms";
@import "../node_modules/bootstrap/scss/buttons";
@import "../node_modules/bootstrap/scss/transitions";
@import "../node_modules/bootstrap/scss/dropdown";
@import "../node_modules/bootstrap/scss/button-group";
@import "../node_modules/bootstrap/scss/nav";
@import "../node_modules/bootstrap/scss/navbar";
@import "../node_modules/bootstrap/scss/card";
@import "../node_modules/bootstrap/scss/accordion";
@import "../node_modules/bootstrap/scss/breadcrumb";
@import "../node_modules/bootstrap/scss/pagination";
@import "../node_modules/bootstrap/scss/badge";
@import "../node_modules/bootstrap/scss/alert";
@import "../node_modules/bootstrap/scss/progress";
@import "../node_modules/bootstrap/scss/list-group";
@import "../node_modules/bootstrap/scss/close";
@import "../node_modules/bootstrap/scss/toasts";
@import "../node_modules/bootstrap/scss/modal";
@import "../node_modules/bootstrap/scss/tooltip";
@import "../node_modules/bootstrap/scss/popover";
@import "../node_modules/bootstrap/scss/carousel";
@import "../node_modules/bootstrap/scss/spinners";
@import "../node_modules/bootstrap/scss/offcanvas";
@import "../node_modules/bootstrap/scss/placeholders";

// Helpers
@import "../node_modules/bootstrap/scss/helpers";

// Utilities
@import "../node_modules/bootstrap/scss/utilities/api";</code></pre>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;接案家&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"&gt;

  &lt;link rel="preconnect" href="https://fonts.googleapis.com/"&gt;
  &lt;link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin&gt;
  &lt;link href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@400;700&amp;display=swap" rel="stylesheet"&gt;
  &lt;style&gt;
    body {
      font-family: 'Noto Sans TC', sans-serif;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;!-- Landing Page 設計稿練習：導覽列製作 start --&gt;
  &lt;nav class="navbar navbar-expand-lg navbar-light bg-white"&gt;
    &lt;div class="container"&gt;
      &lt;a class="navbar-brand" href="#"&gt;&lt;i class="bi bi-house-fill text-info"&gt;&lt;/i&gt; 接案家&lt;/a&gt;
      &lt;button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation"&gt;
        &lt;span class="navbar-toggler-icon"&gt;&lt;/span&gt;
      &lt;/button&gt;
      &lt;div class="collapse navbar-collapse" id="navbarSupportedContent"&gt;
        &lt;ul class="navbar-nav ms-auto mb-2 mb-lg-0"&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link active" aria-current="page" href="#"&gt;首頁&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="#"&gt;服務介紹&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="#"&gt;方案費用&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="#"&gt;常見問題&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item"&gt;
            &lt;a class="btn btn-info" href="#"&gt;方案費用&lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/nav&gt;
  &lt;!-- Landing Page 設計稿練習：導覽列製作 end --&gt;

  &lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// stylesheets/helpers/_variables.scss

// scss-docs-start navbar-theme-variables
$navbar-dark-color:                 rgba($white, .55) !default;
$navbar-dark-hover-color:           rgba($white, .75) !default;
$navbar-dark-active-color:          $white !default;
$navbar-dark-disabled-color:        rgba($white, .25) !default;
$navbar-dark-toggler-icon-bg:       url("data:image/svg+xml,&lt;svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'&gt;&lt;path stroke='#{$navbar-dark-color}' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/&gt;&lt;/svg&gt;") !default;
$navbar-dark-toggler-border-color:  rgba($white, .1) !default;

$navbar-light-color:                rgba($black, .55) !default;
$navbar-light-hover-color:          rgba($black, .7) !default;
$navbar-light-active-color:         rgba($info, .9); // rgba($black, .9) !default;
$navbar-light-disabled-color:       rgba($black, .3) !default;
$navbar-light-toggler-icon-bg:      url("data:image/svg+xml,&lt;svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'&gt;&lt;path stroke='#{$navbar-light-color}' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/&gt;&lt;/svg&gt;") !default;
$navbar-light-toggler-border-color: rgba($black, .1) !default;

$navbar-light-brand-color:                $navbar-light-active-color !default;
$navbar-light-brand-hover-color:          $navbar-light-active-color !default;
$navbar-dark-brand-color:                 $navbar-dark-active-color !default;
$navbar-dark-brand-hover-color:           $navbar-dark-active-color !default;
// scss-docs-end navbar-theme-variables</code></pre>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/navbar/" target="_blank" rel="noreferrer noopener">元件 &gt; 導覽列 (Navbar)</a></li></ul>



<h3>Landing Page 設計稿練習：Header 圖片</h3>



<p>開發過程中，設計稿桌面版、行動版一起觀看。</p>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;接案家&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"&gt;

  &lt;link rel="preconnect" href="https://fonts.googleapis.com/"&gt;
  &lt;link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin&gt;
  &lt;link href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@400;700&amp;display=swap" rel="stylesheet"&gt;
  &lt;style&gt;
    body {
      font-family: 'Noto Sans TC', sans-serif;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;!-- Landing Page 設計稿練習：導覽列製作 start --&gt;
  &lt;nav class="navbar navbar-expand-lg navbar-light bg-white"&gt;
    &lt;div class="container"&gt;
      &lt;a class="navbar-brand" href="#"&gt;&lt;i class="bi bi-house-fill text-info"&gt;&lt;/i&gt; 接案家&lt;/a&gt;
      &lt;button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation"&gt;
        &lt;span class="navbar-toggler-icon"&gt;&lt;/span&gt;
      &lt;/button&gt;
      &lt;div class="collapse navbar-collapse" id="navbarSupportedContent"&gt;
        &lt;ul class="navbar-nav ms-auto mb-2 mb-lg-0"&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link active" aria-current="page" href="#"&gt;首頁&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="#"&gt;服務介紹&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="#"&gt;方案費用&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="#"&gt;常見問題&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item"&gt;
            &lt;a class="btn btn-info" href="#"&gt;方案費用&lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/nav&gt;
  &lt;!-- Landing Page 設計稿練習：導覽列製作 end --&gt;

  &lt;!-- Landing Page 設計稿練習：Header 圖片 start --&gt;
  &lt;header class="header px-4 py-5 d-flex align-items-lg-center justify-content-center" style="background-image: url(https://images.unsplash.com/photo-1497091071254-cc9b2ba7c48a?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=874&amp;q=80);"&gt;
    &lt;div class="text-white text-center"&gt;
      &lt;p class="fs-5"&gt;你是不是也有需要&lt;/p&gt;
      &lt;h1 class="fw-bold"&gt;找個接案家？&lt;/h1&gt;
      &lt;p&gt;想有人幫你做網站開發、設計稿設計、程式編碼，&lt;br&gt;響應式排版、客戶使用者體驗！&lt;br&gt;提供店家在網路上，有更多機會讓更多人可以看到你的店家。&lt;/p&gt;
    &lt;/div&gt;
  &lt;/header&gt;
  &lt;!-- Landing Page 設計稿練習：Header 圖片 end --&gt;

  &lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// stylesheets/components/_header.scss

.header {
  height: 627px;
  background-size: cover;
  background-position: bottom center;
}</code></pre>



<pre class="wp-block-code"><code>// stylesheets/all.scss

// Configuration
@import "../node_modules/bootstrap/scss/functions";
@import "./helpers/variables";
@import "../node_modules/bootstrap/scss/utilities";

@import "../node_modules/bootstrap/scss/mixins";

// Layout &amp; components
@import "../node_modules/bootstrap/scss/root";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";
@import "../node_modules/bootstrap/scss/images";
@import "../node_modules/bootstrap/scss/containers";
@import "../node_modules/bootstrap/scss/grid";
@import "../node_modules/bootstrap/scss/tables";
@import "../node_modules/bootstrap/scss/forms";
@import "../node_modules/bootstrap/scss/buttons";
@import "../node_modules/bootstrap/scss/transitions";
@import "../node_modules/bootstrap/scss/dropdown";
@import "../node_modules/bootstrap/scss/button-group";
@import "../node_modules/bootstrap/scss/nav";
@import "../node_modules/bootstrap/scss/navbar";
@import "../node_modules/bootstrap/scss/card";
@import "../node_modules/bootstrap/scss/accordion";
@import "../node_modules/bootstrap/scss/breadcrumb";
@import "../node_modules/bootstrap/scss/pagination";
@import "../node_modules/bootstrap/scss/badge";
@import "../node_modules/bootstrap/scss/alert";
@import "../node_modules/bootstrap/scss/progress";
@import "../node_modules/bootstrap/scss/list-group";
@import "../node_modules/bootstrap/scss/close";
@import "../node_modules/bootstrap/scss/toasts";
@import "../node_modules/bootstrap/scss/modal";
@import "../node_modules/bootstrap/scss/tooltip";
@import "../node_modules/bootstrap/scss/popover";
@import "../node_modules/bootstrap/scss/carousel";
@import "../node_modules/bootstrap/scss/spinners";
@import "../node_modules/bootstrap/scss/offcanvas";
@import "../node_modules/bootstrap/scss/placeholders";

// Helpers
@import "../node_modules/bootstrap/scss/helpers";

// Utilities
@import "../node_modules/bootstrap/scss/utilities/api";

@import "./components/header";</code></pre>



<h3>Landing Page 設計稿練習：多欄式卡片</h3>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;接案家&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"&gt;

  &lt;link rel="preconnect" href="https://fonts.googleapis.com/"&gt;
  &lt;link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin&gt;
  &lt;link href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@400;700&amp;display=swap" rel="stylesheet"&gt;
  &lt;style&gt;
    body {
      font-family: 'Noto Sans TC', sans-serif;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;!-- Landing Page 設計稿練習：導覽列製作 start --&gt;
  &lt;nav class="navbar navbar-expand-lg navbar-light bg-white"&gt;
    &lt;div class="container"&gt;
      &lt;a class="navbar-brand" href="#"&gt;&lt;i class="bi bi-house-fill text-info"&gt;&lt;/i&gt; 接案家&lt;/a&gt;
      &lt;button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation"&gt;
        &lt;span class="navbar-toggler-icon"&gt;&lt;/span&gt;
      &lt;/button&gt;
      &lt;div class="collapse navbar-collapse" id="navbarSupportedContent"&gt;
        &lt;ul class="navbar-nav ms-auto mb-2 mb-lg-0"&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link active" aria-current="page" href="#"&gt;首頁&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="#"&gt;服務介紹&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="#"&gt;方案費用&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="#"&gt;常見問題&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item"&gt;
            &lt;a class="btn btn-info" href="#"&gt;方案費用&lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/nav&gt;
  &lt;!-- Landing Page 設計稿練習：導覽列製作 end --&gt;

  &lt;!-- Landing Page 設計稿練習：Header 圖片 start --&gt;
  &lt;header class="header px-4 py-5 d-flex align-items-lg-center justify-content-center" style="background-image: url(https://images.unsplash.com/photo-1497091071254-cc9b2ba7c48a?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=874&amp;q=80);"&gt;
    &lt;div class="text-white text-center"&gt;
      &lt;p class="fs-5"&gt;你是不是也有需要&lt;/p&gt;
      &lt;h1 class="fw-bold"&gt;找個接案家？&lt;/h1&gt;
      &lt;p&gt;想有人幫你做網站開發、設計稿設計、程式編碼，&lt;br&gt;響應式排版、客戶使用者體驗！&lt;br&gt;提供店家在網路上，有更多機會讓更多人可以看到你的店家。&lt;/p&gt;
    &lt;/div&gt;
  &lt;/header&gt;
  &lt;!-- Landing Page 設計稿練習：Header 圖片 end --&gt;

  &lt;!-- Landing Page 設計稿練習：多欄式卡片 start --&gt;
  &lt;section class="container my-5"&gt;
    &lt;div class="row flex-row-reverse"&gt;
      &lt;div class="col-lg-6  d-flex align-items-center"&gt;
        &lt;div&gt;
          &lt;h2&gt;讓我們幫你建立專屬的網站&lt;/h2&gt;
          &lt;p class="lh-lg text-secondary"&gt;我們有專業的網頁工程師、網頁設計師，&lt;br&gt;也有新星、來自各地的專業人才，&lt;br&gt;幫您製作您心目中的樣式、版型。&lt;br&gt;讓你專注把心力花在你覺得更須優先的事情上！&lt;br&gt;(依專案內容報價、可行性是否接案)&lt;/p&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="col-lg-6"&gt;
        &lt;img src="https://img.freepik.com/free-vector/cartoon-man-sitting-home-with-laptop_74855-6963.jpg?w=996&amp;t=st=1647914030~exp=1647914630~hmac=31a82c3465d7d99f8f5f546e5b59a34f281c0a3512b6fa5d1d7555376cd43038" class="w-100" alt=""&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/section&gt;
  &lt;!-- Landing Page 設計稿練習：多欄式卡片 end --&gt;

  &lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<h3>Landing Page 設計稿練習：特殊卡片排版</h3>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;接案家&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"&gt;

  &lt;link rel="preconnect" href="https://fonts.googleapis.com/"&gt;
  &lt;link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin&gt;
  &lt;link href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@400;700&amp;display=swap" rel="stylesheet"&gt;
  &lt;style&gt;
    body {
      font-family: 'Noto Sans TC', sans-serif;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;!-- Landing Page 設計稿練習：導覽列製作 start --&gt;
  &lt;nav class="navbar navbar-expand-lg navbar-light bg-white"&gt;
    &lt;div class="container"&gt;
      &lt;a class="navbar-brand" href="#"&gt;&lt;i class="bi bi-house-fill text-info"&gt;&lt;/i&gt; 接案家&lt;/a&gt;
      &lt;button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation"&gt;
        &lt;span class="navbar-toggler-icon"&gt;&lt;/span&gt;
      &lt;/button&gt;
      &lt;div class="collapse navbar-collapse" id="navbarSupportedContent"&gt;
        &lt;ul class="navbar-nav ms-auto mb-2 mb-lg-0"&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link active" aria-current="page" href="#"&gt;首頁&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="#"&gt;服務介紹&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="#"&gt;方案費用&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="#"&gt;常見問題&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item"&gt;
            &lt;a class="btn btn-info" href="#"&gt;方案費用&lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/nav&gt;
  &lt;!-- Landing Page 設計稿練習：導覽列製作 end --&gt;

  &lt;!-- Landing Page 設計稿練習：Header 圖片 start --&gt;
  &lt;header class="header px-4 py-5 d-flex align-items-lg-center justify-content-center" style="background-image: url(https://images.unsplash.com/photo-1497091071254-cc9b2ba7c48a?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=874&amp;q=80);"&gt;
    &lt;div class="text-white text-center"&gt;
      &lt;p class="fs-5"&gt;你是不是也有需要&lt;/p&gt;
      &lt;h1 class="fw-bold"&gt;找個接案家？&lt;/h1&gt;
      &lt;p&gt;想有人幫你做網站開發、設計稿設計、程式編碼，&lt;br&gt;響應式排版、客戶使用者體驗！&lt;br&gt;提供店家在網路上，有更多機會讓更多人可以看到你的店家。&lt;/p&gt;
    &lt;/div&gt;
  &lt;/header&gt;
  &lt;!-- Landing Page 設計稿練習：Header 圖片 end --&gt;

  &lt;!-- Landing Page 設計稿練習：多欄式卡片 start --&gt;
  &lt;section class="container my-5"&gt;
    &lt;div class="row flex-row-reverse"&gt;
      &lt;div class="col-lg-6  d-flex align-items-center"&gt;
        &lt;div&gt;
          &lt;h2&gt;讓我們幫你建立專屬的網站&lt;/h2&gt;
          &lt;p class="lh-lg text-secondary"&gt;我們有專業的網頁工程師、網頁設計師，&lt;br&gt;也有新星、來自各地的專業人才，&lt;br&gt;幫您製作您心目中的樣式、版型。&lt;br&gt;讓你專注把心力花在你覺得更須優先的事情上！&lt;br&gt;(依專案內容報價、可行性是否接案)&lt;/p&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="col-lg-6"&gt;
        &lt;img src="https://img.freepik.com/free-vector/cartoon-man-sitting-home-with-laptop_74855-6963.jpg?w=996&amp;t=st=1647914030~exp=1647914630~hmac=31a82c3465d7d99f8f5f546e5b59a34f281c0a3512b6fa5d1d7555376cd43038" class="w-100" alt=""&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/section&gt;
  &lt;!-- Landing Page 設計稿練習：多欄式卡片 end --&gt;

  &lt;!-- Landing Page 設計稿練習：特殊卡片排版 start --&gt;
  &lt;section class="py-5" style="background-image: url('https://cdn.stocksnap.io/img-thumbs/960w/white-shapes_HOGKNEMAUX.jpg'); background-size: cover;"&gt;
    &lt;div class="container"&gt;
      &lt;h2 class="text-center mb-4"&gt;你有這些需求嗎？&lt;/h2&gt;
      &lt;div class="row row-cols-1 row-cols-lg-4 g-3 g-lg-4"&gt;
        &lt;div class="col"&gt;
          &lt;div class="card border-0 shadow"&gt;
            &lt;div class="card-body text-center py-4"&gt;
              &lt;i class="bi bi-vector-pen fs-s-48 text-info"&gt;&lt;/i&gt;
              &lt;h3 class="h4"&gt;網頁設計&lt;/h3&gt;
              &lt;p class="text-secondary card-text lh-lg"&gt;對於網頁設計稿，提供多種版型參考製作。&lt;/p&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="col"&gt;
          &lt;div class="card border-0 shadow"&gt;
            &lt;div class="card-body text-center py-4"&gt;
              &lt;i class="bi bi-image fs-s-48 text-info"&gt;&lt;/i&gt;
              &lt;h3 class="h4"&gt;圖片應用&lt;/h3&gt;
              &lt;p class="text-secondary card-text lh-lg"&gt;擁有一堆店家相關的產品、活動，沒有地方可以使用。&lt;/p&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="col"&gt;
          &lt;div class="card border-0 shadow"&gt;
            &lt;div class="card-body text-center py-4"&gt;
              &lt;i class="bi bi-code fs-s-48 text-info"&gt;&lt;/i&gt;
              &lt;h3 class="h4"&gt;程式編碼&lt;/h3&gt;
              &lt;p class="text-secondary card-text lh-lg"&gt;網頁設計搞切版，經由程式編碼成網頁畫面。&lt;/p&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="col"&gt;
          &lt;div class="card border-0 shadow"&gt;
            &lt;div class="card-body text-center py-4"&gt;
              &lt;i class="bi bi-shop fs-s-48 text-info"&gt;&lt;/i&gt;
              &lt;h3 class="h4"&gt;店家網站開發&lt;/h3&gt;
              &lt;p class="text-secondary card-text lh-lg"&gt;屬於店家個人網站可以有更多的內容呈現給顧客。&lt;/p&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/section&gt;
  &lt;!-- Landing Page 設計稿練習：特殊卡片排版 end --&gt;

  &lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// all.scss

// Configuration
@import "../node_modules/bootstrap/scss/functions";
@import "./helpers/variables";
@import "./helpers/utilities";

@import "../node_modules/bootstrap/scss/mixins";

// Layout &amp; components
@import "../node_modules/bootstrap/scss/root";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";
@import "../node_modules/bootstrap/scss/images";
@import "../node_modules/bootstrap/scss/containers";
@import "../node_modules/bootstrap/scss/grid";
@import "../node_modules/bootstrap/scss/tables";
@import "../node_modules/bootstrap/scss/forms";
@import "../node_modules/bootstrap/scss/buttons";
@import "../node_modules/bootstrap/scss/transitions";
@import "../node_modules/bootstrap/scss/dropdown";
@import "../node_modules/bootstrap/scss/button-group";
@import "../node_modules/bootstrap/scss/nav";
@import "../node_modules/bootstrap/scss/navbar";
@import "../node_modules/bootstrap/scss/card";
@import "../node_modules/bootstrap/scss/accordion";
@import "../node_modules/bootstrap/scss/breadcrumb";
@import "../node_modules/bootstrap/scss/pagination";
@import "../node_modules/bootstrap/scss/badge";
@import "../node_modules/bootstrap/scss/alert";
@import "../node_modules/bootstrap/scss/progress";
@import "../node_modules/bootstrap/scss/list-group";
@import "../node_modules/bootstrap/scss/close";
@import "../node_modules/bootstrap/scss/toasts";
@import "../node_modules/bootstrap/scss/modal";
@import "../node_modules/bootstrap/scss/tooltip";
@import "../node_modules/bootstrap/scss/popover";
@import "../node_modules/bootstrap/scss/carousel";
@import "../node_modules/bootstrap/scss/spinners";
@import "../node_modules/bootstrap/scss/offcanvas";
@import "../node_modules/bootstrap/scss/placeholders";

// Helpers
@import "../node_modules/bootstrap/scss/helpers";

// Utilities
@import "../node_modules/bootstrap/scss/utilities/api";

@import "./components/header";</code></pre>



<pre class="wp-block-code"><code>// stylesheets/helpers/_utilities.scss

// Text
    // scss-docs-start utils-text
    "font-family": (
      property: font-family,
      class: font,
      values: (monospace: var(--#{$variable-prefix}font-monospace))
    ),
    "font-size": (
      rfs: true,
      property: font-size,
      class: fs,
      values: $font-sizes
    ),
    // custom
    "font-size-static": (
      rfs: true,
      property: font-size,
      class: fs-s,
      values: (
        48: 48px
      )
    ),
    "font-style": (
      property: font-style,
      class: fst,
      values: italic normal
    ),
    "font-weight": (
      property: font-weight,
      class: fw,
      values: (
        light: $font-weight-light,
        lighter: $font-weight-lighter,
        normal: $font-weight-normal,
        bold: $font-weight-bold,
        bolder: $font-weight-bolder
      )
    ),
    "line-height": (
      property: line-height,
      class: lh,
      values: (
        1: 1,
        sm: $line-height-sm,
        base: $line-height-base,
        lg: $line-height-lg,
      )
    ),
    "text-align": (
      responsive: true,
      property: text-align,
      class: text,
      values: (
        start: left,
        end: right,
        center: center,
      )
    ),
    "text-decoration": (
      property: text-decoration,
      values: none underline line-through
    ),
    "text-transform": (
      property: text-transform,
      class: text,
      values: lowercase uppercase capitalize
    ),
    "white-space": (
      property: white-space,
      class: text,
      values: (
        wrap: normal,
        nowrap: nowrap,
      )
    ),
    "word-wrap": (
      property: word-wrap word-break,
      class: text,
      values: (break: break-word),
      rtl: false
    ),
    // scss-docs-end utils-text</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Landing Page 設計稿練習：表單響應式卡片排版</h3>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;接案家&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"&gt;

  &lt;link rel="preconnect" href="https://fonts.googleapis.com/"&gt;
  &lt;link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin&gt;
  &lt;link href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@400;700&amp;display=swap" rel="stylesheet"&gt;
  &lt;style&gt;
    body {
      font-family: 'Noto Sans TC', sans-serif;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;!-- Landing Page 設計稿練習：導覽列製作 start --&gt;
  &lt;nav class="navbar navbar-expand-lg navbar-light bg-white"&gt;
    &lt;div class="container"&gt;
      &lt;a class="navbar-brand" href="#"&gt;&lt;i class="bi bi-house-fill text-info"&gt;&lt;/i&gt; &lt;span style="color: #333333;"&gt;接案家&lt;/span&gt;&lt;/a&gt;
      &lt;button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation"&gt;
        &lt;span class="navbar-toggler-icon"&gt;&lt;/span&gt;
      &lt;/button&gt;
      &lt;div class="collapse navbar-collapse" id="navbarSupportedContent"&gt;
        &lt;ul class="navbar-nav ms-auto mb-2 mb-lg-0"&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link active" aria-current="page" href="#"&gt;首頁&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="#"&gt;服務介紹&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="#"&gt;方案費用&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="#"&gt;常見問題&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item"&gt;
            &lt;a class="btn btn-info" href="#"&gt;方案費用&lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/nav&gt;
  &lt;!-- Landing Page 設計稿練習：導覽列製作 end --&gt;

  &lt;!-- Landing Page 設計稿練習：Header 圖片 start --&gt;
  &lt;header class="header px-4 py-5 d-flex align-items-lg-center justify-content-center" style="background-image: url(https://images.unsplash.com/photo-1497091071254-cc9b2ba7c48a?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=874&amp;q=80);"&gt;
    &lt;div class="text-white text-center"&gt;
      &lt;p class="fs-5"&gt;你是不是也有需要&lt;/p&gt;
      &lt;h1 class="fw-bold"&gt;找個接案家？&lt;/h1&gt;
      &lt;p&gt;想有人幫你做網站開發、設計稿設計、程式編碼，&lt;br&gt;響應式排版、客戶使用者體驗！&lt;br&gt;提供店家在網路上，有更多機會讓更多人可以看到你的店家。&lt;/p&gt;
    &lt;/div&gt;
  &lt;/header&gt;
  &lt;!-- Landing Page 設計稿練習：Header 圖片 end --&gt;

  &lt;!-- Landing Page 設計稿練習：多欄式卡片 start --&gt;
  &lt;section class="container my-5"&gt;
    &lt;div class="row flex-row-reverse"&gt;
      &lt;div class="col-lg-6  d-flex align-items-center"&gt;
        &lt;div&gt;
          &lt;h2&gt;讓我們幫你建立專屬的網站&lt;/h2&gt;
          &lt;p class="lh-lg text-secondary"&gt;我們有專業的網頁工程師、網頁設計師，&lt;br&gt;也有新星、來自各地的專業人才，&lt;br&gt;幫您製作您心目中的樣式、版型。&lt;br&gt;讓你專注把心力花在你覺得更須優先的事情上！&lt;br&gt;(依專案內容報價、可行性是否接案)&lt;/p&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="col-lg-6"&gt;
        &lt;img src="https://img.freepik.com/free-vector/cartoon-man-sitting-home-with-laptop_74855-6963.jpg?w=996&amp;t=st=1647914030~exp=1647914630~hmac=31a82c3465d7d99f8f5f546e5b59a34f281c0a3512b6fa5d1d7555376cd43038" class="w-100" alt=""&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/section&gt;
  &lt;!-- Landing Page 設計稿練習：多欄式卡片 end --&gt;

  &lt;!-- Landing Page 設計稿練習：特殊卡片排版 start --&gt;
  &lt;section class="py-5" style="background-image: url('https://cdn.stocksnap.io/img-thumbs/960w/white-shapes_HOGKNEMAUX.jpg'); background-size: cover;"&gt;
    &lt;div class="container"&gt;
      &lt;h2 class="text-center mb-4"&gt;你有這些需求嗎？&lt;/h2&gt;
      &lt;div class="row row-cols-1 row-cols-lg-4 g-3 g-lg-4"&gt;
        &lt;div class="col"&gt;
          &lt;div class="card border-0 shadow h-100"&gt;
            &lt;div class="card-body text-center py-4"&gt;
              &lt;i class="bi bi-vector-pen fs-s-48 text-info"&gt;&lt;/i&gt;
              &lt;h3 class="h4"&gt;網頁設計&lt;/h3&gt;
              &lt;p class="text-secondary card-text lh-lg"&gt;對於網頁設計稿，提供多種版型參考製作。&lt;/p&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="col"&gt;
          &lt;div class="card border-0 shadow h-100"&gt;
            &lt;div class="card-body text-center py-4"&gt;
              &lt;i class="bi bi-image fs-s-48 text-info"&gt;&lt;/i&gt;
              &lt;h3 class="h4"&gt;圖片應用&lt;/h3&gt;
              &lt;p class="text-secondary card-text lh-lg"&gt;擁有一堆店家相關的產品、活動，沒有地方可以使用。&lt;/p&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="col"&gt;
          &lt;div class="card border-0 shadow h-100"&gt;
            &lt;div class="card-body text-center py-4"&gt;
              &lt;i class="bi bi-code fs-s-48 text-info"&gt;&lt;/i&gt;
              &lt;h3 class="h4"&gt;程式編碼&lt;/h3&gt;
              &lt;p class="text-secondary card-text lh-lg"&gt;網頁設計搞切版，經由程式編碼成網頁畫面。&lt;/p&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="col"&gt;
          &lt;div class="card border-0 shadow h-100"&gt;
            &lt;div class="card-body text-center py-4"&gt;
              &lt;i class="bi bi-shop fs-s-48 text-info"&gt;&lt;/i&gt;
              &lt;h3 class="h4"&gt;店家網站開發&lt;/h3&gt;
              &lt;p class="text-secondary card-text lh-lg"&gt;屬於店家個人網站可以有更多的內容呈現給顧客。&lt;/p&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/section&gt;
  &lt;!-- Landing Page 設計稿練習：特殊卡片排版 end --&gt;

  &lt;!-- Landing Page 設計稿練習：表單響應式卡片排版 start --&gt;
  &lt;section class="py-5 container"&gt;
    &lt;h2 class="text-center mb-4"&gt;方案費用&lt;/h2&gt;
    &lt;div class="row row-cols-1 row-cols-lg-3 g-3 g-lg-4"&gt;
      &lt;div class="col"&gt;
        &lt;div class="card border-0 shadow h-100"&gt;
          &lt;div class="card-header border-0 text-center text-secondary"&gt;
            小小接案家
          &lt;/div&gt;
          &lt;div class="card-body text-center flex-grow-0"&gt;
            &lt;img src="https://img.freepik.com/free-vector/business-team-planning-working-process-flat-vector-illustration-cartoon-colleagues-talking-sharing-thoughts-smiling-company-office-teamwork-workflow-concept_74855-9813.jpg?w=826&amp;t=st=1647914011~exp=1647914611~hmac=ff2fb348d4926011451bac062af4a3aa4c6a5e1bed69184b16748b972569d90f" class="img-fluid" style="height: 195px;" alt=""&gt;
            &lt;div class="text-info mt-3" style="height: 56px;"&gt;
              NT &lt;strong class="fs-1"&gt;1500&lt;/strong&gt; /天
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;ul class="list-group list-group-flush border-top border-bottom"&gt;
            &lt;li class="list-group-item text-secondary ps-5"&gt;
              &lt;i class="bi bi-check-lg text-info position-absolute start-0 ms-3"&gt;&lt;/i&gt; 一天工作時間 4 小時
            &lt;/li&gt;
            &lt;li class="list-group-item text-secondary ps-5"&gt;
              &lt;i class="bi bi-check-lg text-info position-absolute start-0 ms-3"&gt;&lt;/i&gt; 不接受急件
            &lt;/li&gt;
            &lt;li class="list-group-item text-secondary ps-5"&gt;
              &lt;i class="bi bi-check-lg text-info position-absolute start-0 ms-3"&gt;&lt;/i&gt; 單一服務需求
            &lt;/li&gt;
          &lt;/ul&gt;
          &lt;div class="card-body d-flex"&gt;
            &lt;button type="button" class="btn btn-info w-100 align-self-end"&gt;選擇方案&lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="col"&gt;
        &lt;div class="card border-0 shadow h-100"&gt;
          &lt;div class="card-header border-0 text-center bg-info text-white"&gt;
            接一整天囉
          &lt;/div&gt;
          &lt;div class="card-body text-center flex-grow-0"&gt;
            &lt;img src="https://img.freepik.com/free-vector/company-employees-sharing-thoughts-ideas_74855-5469.jpg?w=826&amp;t=st=1647914017~exp=1647914617~hmac=2b53174196afb7d52d3d7ea5fe1f954ee2909527859840e9930e8f16a6f7fa19" class="img-fluid" style="height: 195px;" alt=""&gt;
            &lt;div class="text-info mt-3" style="height: 56px;"&gt;
              NT &lt;strong class="fs-1"&gt;3500&lt;/strong&gt; /天
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;ul class="list-group list-group-flush border-top border-bottom"&gt;
            &lt;li class="list-group-item text-secondary ps-5"&gt;
              &lt;i class="bi bi-check-lg text-info position-absolute start-0 ms-3"&gt;&lt;/i&gt; 一天工作時間 8 小時
            &lt;/li&gt;
            &lt;li class="list-group-item text-secondary ps-5"&gt;
              &lt;i class="bi bi-check-lg text-info position-absolute start-0 ms-3"&gt;&lt;/i&gt; 不接受急件
            &lt;/li&gt;
            &lt;li class="list-group-item text-secondary ps-5"&gt;
              &lt;i class="bi bi-check-lg text-info position-absolute start-0 ms-3"&gt;&lt;/i&gt; 多個服務提供
            &lt;/li&gt;
            &lt;li class="list-group-item text-secondary ps-5"&gt;
              &lt;i class="bi bi-check-lg text-info position-absolute start-0 ms-3"&gt;&lt;/i&gt; 有問題可小部分修改
            &lt;/li&gt;
          &lt;/ul&gt;
          &lt;div class="card-body d-flex"&gt;
            &lt;button type="button" class="btn btn-info w-100 align-self-end"&gt;選擇方案&lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="col"&gt;
        &lt;div class="card border-0 shadow h-100"&gt;
          &lt;div class="card-header border-0 text-center text-secondary"&gt;
            盡心盡力的人生
          &lt;/div&gt;
          &lt;div class="card-body text-center flex-grow-0"&gt;
            &lt;img src="https://img.freepik.com/free-vector/customer-giving-quality-feedback_74855-5482.jpg?w=996&amp;t=st=1647914023~exp=1647914623~hmac=c12d3dc02623204a0474a6c26a6782c6d5bc444e4478da5ddbfbf37de2cb7b07" class="img-fluid" style="height: 195px;" alt=""&gt;
            &lt;div class="text-info mt-3 fs-5 d-flex justify-content-center"  style="height: 56px;"&gt;
              &lt;div class=" align-self-center"&gt;
                客製化詢價
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;ul class="list-group list-group-flush border-top border-bottom"&gt;
            &lt;li class="list-group-item text-secondary ps-5"&gt;
              &lt;i class="bi bi-check-lg text-info position-absolute start-0 ms-3"&gt;&lt;/i&gt; 一系列的服務、完成，您交辦的客製化專案，歡迎與我們聯繫！
            &lt;/li&gt;
          &lt;/ul&gt;
          &lt;div class="card-body d-flex"&gt;
            &lt;button type="button" class="btn btn-info w-100 align-self-end"&gt;線上諮詢&lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/section&gt;
  &lt;!-- Landing Page 設計稿練習：表單響應式卡片排版 end --&gt;

  &lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<ul><li><a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.1/components/card/#kitchen-sink" target="_blank">元件 &gt; 卡片 (Card) &gt; 混合樣式</a></li></ul>



<h4>討論區問題回答</h4>



<p>.card-body 的部分加上 .flex-grow-0 就會改為依內容改變高度，因此兩個 .card-body 的文字大小不同造成高度有些微差異</p>



<p>在 .card-body 固定高度是可以的，也可以針對「客製化詢價」和「NT 666 / 月」設定相同的行高，讓內容的高度相等</p>



<h3 class="has-background" style="background-color:#ff6663">Landing Page 設計稿練習：章節練習說明</h3>



<h4>自我練習製作</h4>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;接案家&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"&gt;

  &lt;link rel="preconnect" href="https://fonts.googleapis.com/"&gt;
  &lt;link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin&gt;
  &lt;link href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@400;700&amp;display=swap" rel="stylesheet"&gt;
  &lt;style&gt;
    body {
      font-family: 'Noto Sans TC', sans-serif;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;!-- Landing Page 設計稿練習：導覽列製作 start --&gt;
  &lt;nav class="navbar navbar-expand-lg navbar-light bg-white"&gt;
    &lt;div class="container"&gt;
      &lt;a class="navbar-brand" href="#"&gt;&lt;i class="bi bi-house-fill text-info"&gt;&lt;/i&gt; &lt;span style="color: #333333;"&gt;接案家&lt;/span&gt;&lt;/a&gt;
      &lt;button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation"&gt;
        &lt;span class="navbar-toggler-icon"&gt;&lt;/span&gt;
      &lt;/button&gt;
      &lt;div class="collapse navbar-collapse" id="navbarSupportedContent"&gt;
        &lt;ul class="navbar-nav ms-auto mb-2 mb-lg-0"&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link active" aria-current="page" href="index.html"&gt;首頁&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="index.html#intro"&gt;服務介紹&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="index.html#plan"&gt;方案費用&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="qa.html"&gt;常見問題&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item"&gt;
            &lt;a class="btn btn-info" href="#"&gt;方案購買&lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/nav&gt;
  &lt;!-- Landing Page 設計稿練習：導覽列製作 end --&gt;

  &lt;!-- Landing Page 設計稿練習：Header 圖片 start --&gt;
  &lt;header class="header px-4 py-5 d-flex align-items-lg-center justify-content-center" style="background-image: url(https://images.unsplash.com/photo-1497091071254-cc9b2ba7c48a?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=874&amp;q=80);"&gt;
    &lt;div class="text-white text-center"&gt;
      &lt;p class="fs-5"&gt;你是不是也有需要&lt;/p&gt;
      &lt;h1 class="fw-bold"&gt;找個接案家？&lt;/h1&gt;
      &lt;p&gt;想有人幫你做網站開發、設計稿設計、程式編碼，&lt;br&gt;響應式排版、客戶使用者體驗！&lt;br&gt;提供店家在網路上，有更多機會讓更多人可以看到你的店家。&lt;/p&gt;
    &lt;/div&gt;
  &lt;/header&gt;
  &lt;!-- Landing Page 設計稿練習：Header 圖片 end --&gt;

  &lt;!-- Landing Page 設計稿練習：多欄式卡片 start --&gt;
  &lt;section class="container py-5" id="intro"&gt;
    &lt;div class="row flex-row-reverse"&gt;
      &lt;div class="col-lg-6  d-flex align-items-center"&gt;
        &lt;div&gt;
          &lt;h2&gt;讓我們幫你建立專屬的網站&lt;/h2&gt;
          &lt;p class="lh-lg text-secondary"&gt;我們有專業的網頁工程師、網頁設計師，&lt;br&gt;也有新星、來自各地的專業人才，&lt;br&gt;幫您製作您心目中的樣式、版型。&lt;br&gt;讓你專注把心力花在你覺得更須優先的事情上！&lt;br&gt;(依專案內容報價、可行性是否接案)&lt;/p&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="col-lg-6"&gt;
        &lt;img src="https://img.freepik.com/free-vector/cartoon-man-sitting-home-with-laptop_74855-6963.jpg?w=996&amp;t=st=1647914030~exp=1647914630~hmac=31a82c3465d7d99f8f5f546e5b59a34f281c0a3512b6fa5d1d7555376cd43038" class="w-100" alt=""&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/section&gt;
  &lt;!-- Landing Page 設計稿練習：多欄式卡片 end --&gt;

  &lt;!-- Landing Page 設計稿練習：特殊卡片排版 start --&gt;
  &lt;section class="py-5" style="background-image: url('https://cdn.stocksnap.io/img-thumbs/960w/white-shapes_HOGKNEMAUX.jpg'); background-size: cover;"&gt;
    &lt;div class="container"&gt;
      &lt;h2 class="text-center mb-4"&gt;你有這些需求嗎？&lt;/h2&gt;
      &lt;div class="row row-cols-1 row-cols-lg-4 g-3 g-lg-4"&gt;
        &lt;div class="col"&gt;
          &lt;div class="card border-0 shadow h-100"&gt;
            &lt;div class="card-body text-center py-4"&gt;
              &lt;i class="bi bi-vector-pen fs-s-48 text-info"&gt;&lt;/i&gt;
              &lt;h3 class="h4"&gt;網頁設計&lt;/h3&gt;
              &lt;p class="text-secondary card-text lh-lg"&gt;對於網頁設計稿，提供多種版型參考製作。&lt;/p&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="col"&gt;
          &lt;div class="card border-0 shadow h-100"&gt;
            &lt;div class="card-body text-center py-4"&gt;
              &lt;i class="bi bi-image fs-s-48 text-info"&gt;&lt;/i&gt;
              &lt;h3 class="h4"&gt;圖片應用&lt;/h3&gt;
              &lt;p class="text-secondary card-text lh-lg"&gt;擁有一堆店家相關的產品、活動，沒有地方可以使用。&lt;/p&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="col"&gt;
          &lt;div class="card border-0 shadow h-100"&gt;
            &lt;div class="card-body text-center py-4"&gt;
              &lt;i class="bi bi-code fs-s-48 text-info"&gt;&lt;/i&gt;
              &lt;h3 class="h4"&gt;程式編碼&lt;/h3&gt;
              &lt;p class="text-secondary card-text lh-lg"&gt;網頁設計搞切版，經由程式編碼成網頁畫面。&lt;/p&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="col"&gt;
          &lt;div class="card border-0 shadow h-100"&gt;
            &lt;div class="card-body text-center py-4"&gt;
              &lt;i class="bi bi-shop fs-s-48 text-info"&gt;&lt;/i&gt;
              &lt;h3 class="h4"&gt;店家網站開發&lt;/h3&gt;
              &lt;p class="text-secondary card-text lh-lg"&gt;屬於店家個人網站可以有更多的內容呈現給顧客。&lt;/p&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/section&gt;
  &lt;!-- Landing Page 設計稿練習：特殊卡片排版 end --&gt;

  &lt;!-- Landing Page 設計稿練習：表單響應式卡片排版 start --&gt;
  &lt;section class="py-5 container" id="plan"&gt;
    &lt;h2 class="text-center mb-4"&gt;方案費用&lt;/h2&gt;
    &lt;div class="row row-cols-1 row-cols-lg-3 g-3 g-lg-4"&gt;
      &lt;div class="col"&gt;
        &lt;div class="card border-0 shadow h-100"&gt;
          &lt;div class="card-header border-0 text-center text-secondary"&gt;
            小小接案家
          &lt;/div&gt;
          &lt;div class="card-body text-center flex-grow-0"&gt;
            &lt;img src="https://img.freepik.com/free-vector/business-team-planning-working-process-flat-vector-illustration-cartoon-colleagues-talking-sharing-thoughts-smiling-company-office-teamwork-workflow-concept_74855-9813.jpg?w=826&amp;t=st=1647914011~exp=1647914611~hmac=ff2fb348d4926011451bac062af4a3aa4c6a5e1bed69184b16748b972569d90f" class="img-fluid" style="height: 195px;" alt=""&gt;
            &lt;div class="text-info mt-3" style="height: 56px;"&gt;
              NT &lt;strong class="fs-1"&gt;1500&lt;/strong&gt; /天
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;ul class="list-group list-group-flush border-top border-bottom"&gt;
            &lt;li class="list-group-item text-secondary ps-5"&gt;
              &lt;i class="bi bi-check-lg text-info position-absolute start-0 ms-3"&gt;&lt;/i&gt; 一天工作時間 4 小時
            &lt;/li&gt;
            &lt;li class="list-group-item text-secondary ps-5"&gt;
              &lt;i class="bi bi-check-lg text-info position-absolute start-0 ms-3"&gt;&lt;/i&gt; 不接受急件
            &lt;/li&gt;
            &lt;li class="list-group-item text-secondary ps-5"&gt;
              &lt;i class="bi bi-check-lg text-info position-absolute start-0 ms-3"&gt;&lt;/i&gt; 單一服務需求
            &lt;/li&gt;
          &lt;/ul&gt;
          &lt;div class="card-body d-flex"&gt;
            &lt;button type="button" class="btn btn-info w-100 align-self-end"&gt;選擇方案&lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="col"&gt;
        &lt;div class="card border-0 shadow h-100"&gt;
          &lt;div class="card-header border-0 text-center bg-info text-white"&gt;
            接一整天囉
          &lt;/div&gt;
          &lt;div class="card-body text-center flex-grow-0"&gt;
            &lt;img src="https://img.freepik.com/free-vector/company-employees-sharing-thoughts-ideas_74855-5469.jpg?w=826&amp;t=st=1647914017~exp=1647914617~hmac=2b53174196afb7d52d3d7ea5fe1f954ee2909527859840e9930e8f16a6f7fa19" class="img-fluid" style="height: 195px;" alt=""&gt;
            &lt;div class="text-info mt-3" style="height: 56px;"&gt;
              NT &lt;strong class="fs-1"&gt;3500&lt;/strong&gt; /天
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;ul class="list-group list-group-flush border-top border-bottom"&gt;
            &lt;li class="list-group-item text-secondary ps-5"&gt;
              &lt;i class="bi bi-check-lg text-info position-absolute start-0 ms-3"&gt;&lt;/i&gt; 一天工作時間 8 小時
            &lt;/li&gt;
            &lt;li class="list-group-item text-secondary ps-5"&gt;
              &lt;i class="bi bi-check-lg text-info position-absolute start-0 ms-3"&gt;&lt;/i&gt; 不接受急件
            &lt;/li&gt;
            &lt;li class="list-group-item text-secondary ps-5"&gt;
              &lt;i class="bi bi-check-lg text-info position-absolute start-0 ms-3"&gt;&lt;/i&gt; 多個服務提供
            &lt;/li&gt;
            &lt;li class="list-group-item text-secondary ps-5"&gt;
              &lt;i class="bi bi-check-lg text-info position-absolute start-0 ms-3"&gt;&lt;/i&gt; 有問題可小部分修改
            &lt;/li&gt;
          &lt;/ul&gt;
          &lt;div class="card-body d-flex"&gt;
            &lt;button type="button" class="btn btn-info w-100 align-self-end"&gt;選擇方案&lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="col"&gt;
        &lt;div class="card border-0 shadow h-100"&gt;
          &lt;div class="card-header border-0 text-center text-secondary"&gt;
            盡心盡力的人生
          &lt;/div&gt;
          &lt;div class="card-body text-center flex-grow-0"&gt;
            &lt;img src="https://img.freepik.com/free-vector/customer-giving-quality-feedback_74855-5482.jpg?w=996&amp;t=st=1647914023~exp=1647914623~hmac=c12d3dc02623204a0474a6c26a6782c6d5bc444e4478da5ddbfbf37de2cb7b07" class="img-fluid" style="height: 195px;" alt=""&gt;
            &lt;div class="text-info mt-3 fs-5 d-flex justify-content-center"  style="height: 56px;"&gt;
              &lt;div class=" align-self-center"&gt;
                客製化詢價
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;ul class="list-group list-group-flush border-top border-bottom"&gt;
            &lt;li class="list-group-item text-secondary ps-5"&gt;
              &lt;i class="bi bi-check-lg text-info position-absolute start-0 ms-3"&gt;&lt;/i&gt; 一系列的服務、完成，您交辦的客製化專案，歡迎與我們聯繫！
            &lt;/li&gt;
          &lt;/ul&gt;
          &lt;div class="card-body d-flex"&gt;
            &lt;button type="button" class="btn btn-info w-100 align-self-end"&gt;線上諮詢&lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/section&gt;
  &lt;!-- Landing Page 設計稿練習：表單響應式卡片排版 end --&gt;

  &lt;!-- 自行練習製作 練習和 footer start --&gt;
  &lt;section class="py-5 container"&gt;
    &lt;h2 class="text-center mb-4"&gt;需要可以聯絡我們&lt;/h2&gt;
    &lt;div class="row row-cols-1 row-cols-lg-3 g-3 g-lg-4 justify-content-center"&gt;
      &lt;div class="col-lg-3 col-9"&gt;
        &lt;div class="card border-0 shadow h-100"&gt;
          &lt;div class="card-body text-center py-4 fs-4"&gt;
            &lt;a href="#" class="text-decoration-none link-dark stretched-link"&gt;
              &lt;i class="bi bi-telephone-fill text-info me-2"&gt;&lt;/i&gt; 06-222-3333
            &lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="col-lg-3 col-9"&gt;
        &lt;div class="card border-0 shadow h-100"&gt;
          &lt;div class="card-body text-center py-4 fs-4"&gt;
            &lt;a href="#" class="text-decoration-none link-dark stretched-link"&gt;
              &lt;i class="bi bi-facebook text-info me-2"&gt;&lt;/i&gt; 我就是個接案家
            &lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="col-lg-3 col-9"&gt;
        &lt;div class="card border-0 shadow h-100"&gt;
          &lt;div class="card-body text-center py-4 fs-4"&gt;
            &lt;a href="#" class="text-decoration-none link-dark stretched-link"&gt;
              &lt;i class="bi bi-question-lg text-info me-2"&gt;&lt;/i&gt; 常見問題
            &lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/section&gt;

  &lt;footer class="bg-secondary text-white py-4"&gt;
    &lt;div class="container"&gt;
      &lt;p class="text-center m-0"&gt;Copyright © 2022 接案家.All rights reserved.&lt;/p&gt;
    &lt;/div&gt;
  &lt;/footer&gt;
  &lt;!-- 自行練習製作 練習和 footer end --&gt;

  &lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// qa.html

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;接案家&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"&gt;

  &lt;link rel="preconnect" href="https://fonts.googleapis.com/"&gt;
  &lt;link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin&gt;
  &lt;link href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@400;700&amp;display=swap" rel="stylesheet"&gt;
  &lt;style&gt;
    body {
      font-family: 'Noto Sans TC', sans-serif;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;!-- Landing Page 設計稿練習：導覽列製作 start --&gt;
  &lt;nav class="navbar navbar-expand-lg navbar-light bg-white"&gt;
    &lt;div class="container"&gt;
      &lt;a class="navbar-brand" href="#"&gt;&lt;i class="bi bi-house-fill text-info"&gt;&lt;/i&gt; &lt;span style="color: #333333;"&gt;接案家&lt;/span&gt;&lt;/a&gt;
      &lt;button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation"&gt;
        &lt;span class="navbar-toggler-icon"&gt;&lt;/span&gt;
      &lt;/button&gt;
      &lt;div class="collapse navbar-collapse" id="navbarSupportedContent"&gt;
        &lt;ul class="navbar-nav ms-auto mb-2 mb-lg-0"&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="index.html"&gt;首頁&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="index.html#intro"&gt;服務介紹&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="index.html#plan"&gt;方案費用&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link active" aria-current="page" href="qa.html"&gt;常見問題&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item"&gt;
            &lt;a class="btn btn-info" href="#"&gt;方案購買&lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/nav&gt;
  &lt;!-- Landing Page 設計稿練習：導覽列製作 end --&gt;

  &lt;!-- 自行練習製作 Q&amp;A start --&gt;
  &lt;section class="py-5" style="background-image: url('https://cdn.stocksnap.io/img-thumbs/960w/white-shapes_HOGKNEMAUX.jpg'); background-size: cover;"&gt;
    &lt;div class="container"&gt;
      &lt;h3 class="text-center text-info fw-bold mb-1 fs-6"&gt;Q&amp;A&lt;/h3&gt;
      &lt;h2 class="text-center mb-4"&gt;常見問題&lt;/h2&gt;
    &lt;/div&gt;
  &lt;/section&gt;
  
  &lt;section class="container py-5"&gt;
    &lt;div class="row justify-content-center"&gt;
      &lt;div class="col-lg-9"&gt;
        &lt;div class="accordion" id="accordionExample"&gt;
          &lt;div class="accordion-item"&gt;
            &lt;h2 class="accordion-header" id="headingOne"&gt;
              &lt;button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne"&gt;
                方案服務內容可以調整嗎？
              &lt;/button&gt;
            &lt;/h2&gt;
            &lt;div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample"&gt;
              &lt;div class="accordion-body"&gt;
                討論確定後，開始製作後只能小部分修改。太多修改部分，需另外加購方案天數。
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="accordion-item"&gt;
            &lt;h2 class="accordion-header" id="headingTwo"&gt;
              &lt;button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo"&gt;
                小小接案家、接一整天囉兩者的差異？
              &lt;/button&gt;
            &lt;/h2&gt;
            &lt;div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample"&gt;
              &lt;div class="accordion-body"&gt;
                小小接案家是一天工作時間為 4 小時。&lt;br&gt;
                接一整天囉是一天工作時間為 8 小時。&lt;br&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="accordion-item"&gt;
            &lt;h2 class="accordion-header" id="headingThree"&gt;
              &lt;button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree"&gt;
                付款方式有哪些呢？
              &lt;/button&gt;
            &lt;/h2&gt;
            &lt;div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionExample"&gt;
              &lt;div class="accordion-body"&gt;
                現金、轉帳為主，其他方式暫不支援。
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/section&gt;
  &lt;!-- 自行練習製作 Q&amp;A end --&gt;

  &lt;!-- 自行練習製作 聯絡和 footer start --&gt;
  &lt;section class="py-5 container"&gt;
    &lt;h2 class="text-center mb-4"&gt;需要可以聯絡我們&lt;/h2&gt;
    &lt;div class="row row-cols-1 row-cols-lg-3 g-3 g-lg-4 justify-content-center"&gt;
      &lt;div class="col-lg-3 col-9"&gt;
        &lt;div class="card border-0 shadow h-100"&gt;
          &lt;div class="card-body text-center py-4 fs-4"&gt;
            &lt;a href="#" class="text-decoration-none link-dark stretched-link"&gt;
              &lt;i class="bi bi-telephone-fill text-info me-2"&gt;&lt;/i&gt; 06-222-3333
            &lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="col-lg-3 col-9"&gt;
        &lt;div class="card border-0 shadow h-100"&gt;
          &lt;div class="card-body text-center py-4 fs-4"&gt;
            &lt;a href="#" class="text-decoration-none link-dark stretched-link"&gt;
              &lt;i class="bi bi-facebook text-info me-2"&gt;&lt;/i&gt; 我就是個接案家
            &lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="col-lg-3 col-9"&gt;
        &lt;div class="card border-0 shadow h-100"&gt;
          &lt;div class="card-body text-center py-4 fs-4"&gt;
            &lt;a href="#" class="text-decoration-none link-dark stretched-link"&gt;
              &lt;i class="bi bi-question-lg text-info me-2"&gt;&lt;/i&gt; 常見問題
            &lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/section&gt;

  &lt;footer class="bg-secondary text-white py-4"&gt;
    &lt;div class="container"&gt;
      &lt;p class="text-center m-0"&gt;Copyright © 2022 接案家.All rights reserved.&lt;/p&gt;
    &lt;/div&gt;
  &lt;/footer&gt;
  &lt;!-- 自行練習製作 聯絡和 footer end --&gt;

  &lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// stylesheets/helpers/_variables.scss

// scss-docs-start theme-color-variables
$primary:       $blue !default;
$secondary:     $gray-600 !default;
$success:       $green !default;
$info:          #4a6fa5; // $cyan !default;
$warning:       $yellow !default;
$danger:        $red !default;
$light:         $gray-100 !default;
$dark:          $gray-900 !default;
// scss-docs-end theme-color-variables</code></pre>



<h4>課程章節練習說明</h4>



<pre class="wp-block-code"><code>// payment.html

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;接案家&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"&gt;

  &lt;link rel="preconnect" href="https://fonts.googleapis.com/"&gt;
  &lt;link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin&gt;
  &lt;link href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@400;700&amp;display=swap" rel="stylesheet"&gt;
  &lt;style&gt;
    body {
      font-family: 'Noto Sans TC', sans-serif;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;!-- Landing Page 設計稿練習：導覽列製作 start --&gt;
  &lt;nav class="navbar navbar-expand-lg navbar-light bg-white"&gt;
    &lt;div class="container"&gt;
      &lt;a class="navbar-brand" href="#"&gt;&lt;i class="bi bi-house-fill text-info"&gt;&lt;/i&gt; &lt;span style="color: #333333;"&gt;接案家&lt;/span&gt;&lt;/a&gt;
      &lt;button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation"&gt;
        &lt;span class="navbar-toggler-icon"&gt;&lt;/span&gt;
      &lt;/button&gt;
      &lt;div class="collapse navbar-collapse" id="navbarSupportedContent"&gt;
        &lt;ul class="navbar-nav ms-auto mb-2 mb-lg-0"&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="index.html"&gt;首頁&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="index.html#intro"&gt;服務介紹&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="index.html#plan"&gt;方案費用&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="qa.html"&gt;常見問題&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item"&gt;
            &lt;a class="btn btn-info active" aria-current="page" href="payment.html"&gt;方案購買&lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/nav&gt;
  &lt;!-- Landing Page 設計稿練習：導覽列製作 end --&gt;

  &lt;section class="py-5" style="background-image: url('https://cdn.stocksnap.io/img-thumbs/960w/white-shapes_HOGKNEMAUX.jpg'); background-size: cover;"&gt;
    &lt;div class="container"&gt;
      &lt;h4 class="text-center text-info fw-bold"&gt;EXTRA EARN&lt;/h3&gt;
      &lt;h2 class="text-center mb-4"&gt;開始找個接案家&lt;/h2&gt;
    &lt;/div&gt;
  &lt;/section&gt;

  &lt;!-- Langing Page 設計稿練習：章節練習說明 start --&gt;
  &lt;section class="py-5 container"&gt;
    &lt;div class="row justify-content-center"&gt;
      &lt;div class="col-lg-8"&gt;
        &lt;form action="" class="p-lg-5 shadow-lg"&gt;
          &lt;h3 class="deco-line mb-3"&gt;選擇方案&lt;/h3&gt;
          &lt;div class="row row-cols-1 row-cols-lg-3"&gt;
            &lt;div class="col"&gt;
              &lt;button type="button" class="btn btn-outline-info w-100 btn-lg py-3 text-dark"&gt;
                小小接案家&lt;br class="d-none d-lg-block"&gt;
                NT 1500 /天
              &lt;/button&gt;
            &lt;/div&gt;
            &lt;div class="col"&gt;
              &lt;button type="button" class="btn btn-outline-info w-100 btn-lg py-3 text-dark"&gt;
                接一整天囉&lt;br class="d-none d-lg-block"&gt;
                NT 3500 /天
              &lt;/button&gt;
            &lt;/div&gt;
            &lt;div class="col"&gt;
              &lt;button type="button" class="btn btn-outline-info w-100 btn-lg py-3 text-dark active btn-special"&gt;
                盡心盡力的人生&lt;br class="d-none d-lg-block"&gt;
                客製化詢價
              &lt;/button&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/form&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/section&gt;
  &lt;!-- Langing Page 設計稿練習：章節練習說明 end --&gt;

  &lt;!-- 自行練習製作 練習和 footer start --&gt;
  &lt;section class="py-5 container"&gt;
    &lt;h2 class="text-center mb-4"&gt;需要可以聯絡我們&lt;/h2&gt;
    &lt;div class="row row-cols-1 row-cols-lg-3 g-3 g-lg-4 justify-content-center"&gt;
      &lt;div class="col-lg-3 col-9"&gt;
        &lt;div class="card border-0 shadow h-100"&gt;
          &lt;div class="card-body text-center py-4 fs-4"&gt;
            &lt;a href="#" class="text-decoration-none link-dark stretched-link"&gt;
              &lt;i class="bi bi-telephone-fill text-info me-2"&gt;&lt;/i&gt; 06-222-3333
            &lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="col-lg-3 col-9"&gt;
        &lt;div class="card border-0 shadow h-100"&gt;
          &lt;div class="card-body text-center py-4 fs-4"&gt;
            &lt;a href="#" class="text-decoration-none link-dark stretched-link"&gt;
              &lt;i class="bi bi-facebook text-info me-2"&gt;&lt;/i&gt; 我就是個接案家
            &lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="col-lg-3 col-9"&gt;
        &lt;div class="card border-0 shadow h-100"&gt;
          &lt;div class="card-body text-center py-4 fs-4"&gt;
            &lt;a href="#" class="text-decoration-none link-dark stretched-link"&gt;
              &lt;i class="bi bi-question-lg text-info me-2"&gt;&lt;/i&gt; 常見問題
            &lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/section&gt;

  &lt;footer class="bg-secondary text-white py-4"&gt;
    &lt;div class="container"&gt;
      &lt;p class="text-center m-0"&gt;Copyright © 2022 接案家.All rights reserved.&lt;/p&gt;
    &lt;/div&gt;
  &lt;/footer&gt;
  &lt;!-- 自行練習製作 練習和 footer end --&gt;

  &lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// stylesheet/helpers/_utilities.scss

    // scss-docs-start utils-shadow
    // shadow-lg(尺寸 → 中斷點)
    "shadow": (
      property: box-shadow,
      class: shadow,
      values: (
        null: $box-shadow,
        sm: $box-shadow-sm,
        // lg: $box-shadow-lg,
        none: none,
      )
    ),
    // scss-docs-end utils-shadow</code></pre>



<pre class="wp-block-code"><code>// stylesheets/components/_deco-line.scss

.deco-line {
  padding-left: 1rem;
  position: relative;
  &amp;::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    width: 3px;
    background-color: $info;
  }
}</code></pre>



<p>&amp; 直接把上面的 .deco-line 層級繼承過來。</p>



<pre class="wp-block-code"><code>// stylesheets/components/_custom-btn.scss

.btn-special {
  &amp;.active {
    box-shadow: $box-shadow-sm;
  }
}</code></pre>



<pre class="wp-block-code"><code>// all.scss

// Configuration
@import "../node_modules/bootstrap/scss/functions";
@import "./helpers/variables";
@import "./helpers/utilities";

@import "../node_modules/bootstrap/scss/mixins";

// Layout &amp; components
@import "../node_modules/bootstrap/scss/root";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";
@import "../node_modules/bootstrap/scss/images";
@import "../node_modules/bootstrap/scss/containers";
@import "../node_modules/bootstrap/scss/grid";
@import "../node_modules/bootstrap/scss/tables";
@import "../node_modules/bootstrap/scss/forms";
@import "../node_modules/bootstrap/scss/buttons";
@import "../node_modules/bootstrap/scss/transitions";
@import "../node_modules/bootstrap/scss/dropdown";
@import "../node_modules/bootstrap/scss/button-group";
@import "../node_modules/bootstrap/scss/nav";
@import "../node_modules/bootstrap/scss/navbar";
@import "../node_modules/bootstrap/scss/card";
@import "../node_modules/bootstrap/scss/accordion";
@import "../node_modules/bootstrap/scss/breadcrumb";
@import "../node_modules/bootstrap/scss/pagination";
@import "../node_modules/bootstrap/scss/badge";
@import "../node_modules/bootstrap/scss/alert";
@import "../node_modules/bootstrap/scss/progress";
@import "../node_modules/bootstrap/scss/list-group";
@import "../node_modules/bootstrap/scss/close";
@import "../node_modules/bootstrap/scss/toasts";
@import "../node_modules/bootstrap/scss/modal";
@import "../node_modules/bootstrap/scss/tooltip";
@import "../node_modules/bootstrap/scss/popover";
@import "../node_modules/bootstrap/scss/carousel";
@import "../node_modules/bootstrap/scss/spinners";
@import "../node_modules/bootstrap/scss/offcanvas";
@import "../node_modules/bootstrap/scss/placeholders";

// Helpers
@import "../node_modules/bootstrap/scss/helpers";

// Utilities
@import "../node_modules/bootstrap/scss/utilities/api";

// Custom Components
@import "./components/header";
@import "./components/deco-line";
@import "./components/custom-btn";</code></pre>



<h4>自我練習製作</h4>



<pre class="wp-block-code"><code>// payment.html

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-tw"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;接案家&lt;/title&gt;
  &lt;link rel="stylesheet" href="./stylesheets/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css"&gt;

  &lt;link rel="preconnect" href="https://fonts.googleapis.com/"&gt;
  &lt;link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin&gt;
  &lt;link href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@400;700&amp;display=swap" rel="stylesheet"&gt;
  &lt;style&gt;
    body {
      font-family: 'Noto Sans TC', sans-serif;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;!-- Landing Page 設計稿練習：導覽列製作 start --&gt;
  &lt;nav class="navbar navbar-expand-lg navbar-light bg-white"&gt;
    &lt;div class="container"&gt;
      &lt;a class="navbar-brand" href="#"&gt;&lt;i class="bi bi-house-fill text-info"&gt;&lt;/i&gt; &lt;span style="color: #333333;"&gt;接案家&lt;/span&gt;&lt;/a&gt;
      &lt;button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation"&gt;
        &lt;span class="navbar-toggler-icon"&gt;&lt;/span&gt;
      &lt;/button&gt;
      &lt;div class="collapse navbar-collapse" id="navbarSupportedContent"&gt;
        &lt;ul class="navbar-nav ms-auto mb-2 mb-lg-0"&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="index.html"&gt;首頁&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="index.html#intro"&gt;服務介紹&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="index.html#plan"&gt;方案費用&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item mx-3"&gt;
            &lt;a class="nav-link" href="qa.html"&gt;常見問題&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item"&gt;
            &lt;a class="btn btn-info active" aria-current="page" href="payment.html"&gt;方案購買&lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/nav&gt;
  &lt;!-- Landing Page 設計稿練習：導覽列製作 end --&gt;

  &lt;section class="py-5" style="background-image: url('https://cdn.stocksnap.io/img-thumbs/960w/white-shapes_HOGKNEMAUX.jpg'); background-size: cover;"&gt;
    &lt;div class="container"&gt;
      &lt;h4 class="text-center text-info fw-bold"&gt;EXTRA EARN&lt;/h3&gt;
      &lt;h2 class="text-center mb-4"&gt;開始找個接案家&lt;/h2&gt;
    &lt;/div&gt;
  &lt;/section&gt;

  &lt;!-- Langing Page 設計稿練習：章節練習說明 start --&gt;
  &lt;section class="py-5 container"&gt;
    &lt;div class="row justify-content-center"&gt;
      &lt;div class="col-lg-8 shadow"&gt;
        &lt;form action="" class="p-lg-5 shadow-lg"&gt;
          &lt;h3 class="deco-line mb-3"&gt;選擇方案&lt;/h3&gt;
          &lt;div class="row row-cols-1 row-cols-lg-3 g-2 mb-5"&gt;
            &lt;div class="col"&gt;
              &lt;button type="button" class="btn btn-outline-info w-100 btn-lg py-3 text-dark"&gt;
                小小接案家&lt;br class="d-none d-lg-block"&gt;
                NT 1500 /天
              &lt;/button&gt;
            &lt;/div&gt;
            &lt;div class="col"&gt;
              &lt;button type="button" class="btn btn-outline-info w-100 btn-lg py-3 text-dark"&gt;
                接一整天囉&lt;br class="d-none d-lg-block"&gt;
                NT 3500 /天
              &lt;/button&gt;
            &lt;/div&gt;
            &lt;div class="col"&gt;
              &lt;button type="button" class="btn btn-outline-info w-100 btn-lg py-3 text-white active btn-special"&gt;
                盡心盡力的人生&lt;br class="d-none d-lg-block"&gt;
                客製化詢價
              &lt;/button&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;!-- 自行練習製作 表單 start --&gt;
          &lt;h3 class="deco-line mb-3"&gt;填寫資料&lt;/h3&gt;
          &lt;div class="row g-3"&gt;
            &lt;div class="col-md-6"&gt;
              &lt;label for="inputText1" class="form-label"&gt;名字&lt;/label&gt;
              &lt;input type="text" class="form-control" id="inputText1"&gt;
            &lt;/div&gt;
            &lt;div class="col-md-6"&gt;
              &lt;label for="inputText2" class="form-label"&gt;姓氏&lt;/label&gt;
              &lt;input type="text" class="form-control" id="inputText2"&gt;
            &lt;/div&gt;
            &lt;div class="col-12"&gt;
              &lt;label for="inputTel1" class="form-label"&gt;手機號碼&lt;/label&gt;
              &lt;input type="tel" class="form-control" id="inputTel1" placeholder="範例：0989-222-333"&gt;
            &lt;/div&gt;
            &lt;div class="col-12"&gt;
              &lt;label for="inputEmail1" class="form-label"&gt;電子郵件&lt;/label&gt;
              &lt;input type="text" class="form-control" id="inputEmail1" placeholder="範例：receiver@gmail.com"&gt;
            &lt;/div&gt;
            &lt;div class="col-12"&gt;
              &lt;label for="inputAddress1" class="form-label"&gt;住址&lt;/label&gt;
              &lt;input type="text" class="form-control" id="inputAddress1"&gt;
            &lt;/div&gt;
            &lt;div class="col-12"&gt;
              &lt;label for="inputTime" class="form-label"&gt;方便聯繫時間&lt;/label&gt;
              &lt;select id="inputTime" class="form-select"&gt;
                &lt;option selected&gt;13:00- 17:00&lt;/option&gt;
                &lt;option&gt;09:00-12:00&lt;/option&gt;
              &lt;/select&gt;
            &lt;/div&gt;
            &lt;div class="col-12"&gt;
              &lt;label for="inputAddress2" class="form-label"&gt;住址&lt;/label&gt;
              &lt;input type="text" class="form-control" id="inputAddress2"&gt;
            &lt;/div&gt;
            &lt;div class="col-12"&gt;
              &lt;div class="form-check p-0"&gt;
                &lt;label class="form-label"&gt;加購服務&lt;/label&gt;
              &lt;/div&gt;
              &lt;div class="form-check form-check-inline"&gt;
                &lt;input class="form-check-input" type="checkbox" id="inlineCheckbox1" value="option1"&gt;
                &lt;label class="form-check-label" for="inlineCheckbox1"&gt;設計諮詢 1 次&lt;/label&gt;
              &lt;/div&gt;
              &lt;div class="form-check form-check-inline"&gt;
                &lt;input class="form-check-input" type="checkbox" id="inlineCheckbox2" value="option2"&gt;
                &lt;label class="form-check-label" for="inlineCheckbox2"&gt;功能諮詢 1 次&lt;/label&gt;
              &lt;/div&gt;
              &lt;div class="form-check form-check-inline"&gt;
                &lt;input class="form-check-input" type="checkbox" id="inlineCheckbox3" value="option3"&gt;
                &lt;label class="form-check-label" for="inlineCheckbox3"&gt;錯誤諮詢 1 次&lt;/label&gt;
              &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class="col-12 mb-2"&gt;
              &lt;label for="exampleFormControlTextarea1" class="form-label"&gt;備註說明&lt;/label&gt;
              &lt;textarea class="form-control" id="exampleFormControlTextarea1" rows="3"&gt;&lt;/textarea&gt;
            &lt;/div&gt;
            &lt;div class="col-12"&gt;
              &lt;button type="submit" class="btn btn-info w-100 py-2 text-dark"&gt;選擇方案&lt;/button&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;!-- 自行練習製作 表單 end --&gt;
        &lt;/form&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/section&gt;
  &lt;!-- Langing Page 設計稿練習：章節練習說明 end --&gt;

  &lt;!-- 自行練習製作 練習和 footer start --&gt;
  &lt;section class="py-5 container"&gt;
    &lt;h2 class="text-center mb-4"&gt;需要可以聯絡我們&lt;/h2&gt;
    &lt;div class="row row-cols-1 row-cols-lg-3 g-3 g-lg-4 justify-content-center"&gt;
      &lt;div class="col-lg-3 col-9"&gt;
        &lt;div class="card border-0 shadow h-100"&gt;
          &lt;div class="card-body text-center py-4 fs-4"&gt;
            &lt;a href="#" class="text-decoration-none link-dark stretched-link"&gt;
              &lt;i class="bi bi-telephone-fill text-info me-2"&gt;&lt;/i&gt; 06-222-3333
            &lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="col-lg-3 col-9"&gt;
        &lt;div class="card border-0 shadow h-100"&gt;
          &lt;div class="card-body text-center py-4 fs-4"&gt;
            &lt;a href="#" class="text-decoration-none link-dark stretched-link"&gt;
              &lt;i class="bi bi-facebook text-info me-2"&gt;&lt;/i&gt; 我就是個接案家
            &lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="col-lg-3 col-9"&gt;
        &lt;div class="card border-0 shadow h-100"&gt;
          &lt;div class="card-body text-center py-4 fs-4"&gt;
            &lt;a href="#" class="text-decoration-none link-dark stretched-link"&gt;
              &lt;i class="bi bi-question-lg text-info me-2"&gt;&lt;/i&gt; 常見問題
            &lt;/a&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/section&gt;

  &lt;footer class="bg-secondary text-white py-4"&gt;
    &lt;div class="container"&gt;
      &lt;p class="text-center m-0"&gt;Copyright © 2022 接案家.All rights reserved.&lt;/p&gt;
    &lt;/div&gt;
  &lt;/footer&gt;
  &lt;!-- 自行練習製作 練習和 footer end --&gt;

  &lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<h2 class="has-background" style="background-color:#ff6663">CH15 – 最終挑戰</h2>



<h3>最終作業繳交說明</h3>



<h3>最終挑戰說明</h3>



<h3>最終挑戰課程資源</h3>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Bootstrap 5 網頁切版整合術(1)</title>
		<link>/wordpress_blog/bs5-weblayout-1/</link>
		
		<dc:creator><![CDATA[gee.hsu]]></dc:creator>
		<pubDate>Mon, 28 Mar 2022 05:11:00 +0000</pubDate>
				<category><![CDATA[六角學院]]></category>
		<guid isPermaLink="false">/wordpress_blog/?p=320</guid>

					<description><![CDATA[課程學習：六角學院 CH2 – 環境建置 Bootstrap 文 [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p>課程學習：<a href="https://courses.hexschool.com/p/bootstrap-5" target="_blank" rel="noreferrer noopener">六角學院</a></p>



<h2>CH2 – 環境建置</h2>



<h3>Bootstrap 文件介紹</h3>



<figure class="wp-block-table"><table><tbody><tr><td>Getting started</td><td>快速開始</td></tr><tr><td>Customize</td><td>自定義</td></tr><tr><td>Layout</td><td>排版</td></tr><tr><td>Content</td><td>內容</td></tr><tr><td>Form</td><td>表單</td></tr><tr><td>Components</td><td>元件</td></tr><tr><td>Helpers</td><td>工具</td></tr><tr><td>Utilities</td><td>通用類別</td></tr><tr><td>Extend</td><td>擴增</td></tr><tr><td>About</td><td>關於</td></tr></tbody></table><figcaption>中英文對照</figcaption></figure>



<h3>Bootstrap 中英文文件連結</h3>



<ul><li><a href="https://getbootstrap.com/" target="_blank" rel="noreferrer noopener">官方原文 Bootstrap</a></li><li><a href="https://bootstrap5.hexschool.com/" target="_blank" rel="noreferrer noopener">六角學院繁體中文版本</a></li></ul>



<h3>VSCode 基礎環境建置</h3>



<h3>VSCode 與相關資源連結</h3>



<ul><li><a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer noopener">VSCode 官方網站</a></li></ul>



<p>相關套件:</p>



<ul><li><a rel="noreferrer noopener" href="https://www.casper.tw/development/2019/12/01/vscode-chinese/" target="_blank">繁體中文版安裝說明</a></li><li><a rel="noreferrer noopener" href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer" target="_blank">Live Server</a></li><li><a rel="noreferrer noopener" href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.live-sass" target="_blank">Live Sass (後方課程會運用到)</a></li><li><a rel="noreferrer noopener" href="https://www.casper.tw/development/2020/12/13/vscode-extension/" target="_blank">更多參考套件</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=andischerer.theme-atom-one-dark" target="_blank" rel="noreferrer noopener">老師使用的樣式主題 Atom One Dark</a></li></ul>



<h3>語系設置與 Bootstrap CDN</h3>



<ul><li><a href="https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry" target="_blank" rel="noreferrer noopener">語系參考文件</a></li></ul>



<pre class="wp-block-code"><code>// index.html - 1 語系

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-TW"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Document&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;p lang="zh-TW"&gt;繁體台灣 zh-TW：骨，花、學、崎、雨&lt;/p&gt;
  &lt;p lang="zh-HK"&gt;繁體香港 zh-HK：骨，花，學、崎、雨&lt;/p&gt;
  &lt;p lang="zh-CN"&gt;簡中 zh-CN：骨，花、學、崎、雨&lt;/p&gt;
  &lt;p lang="ja"&gt;日文 ja：骨、花、學、崎、雨&lt;/p&gt;
  &lt;hr&gt;
  &lt;p lang="zh-TW"&gt;繁體台灣 zh-TW：骨，花、學、崎、雨&lt;/p&gt;
  &lt;p lang="zh-Hant-TW"&gt;繁體台灣 zh-Hant-TW：骨，花、學、崎、雨&lt;/p&gt;
  &lt;p lang="zh-HK"&gt;繁體香港 zh-HK：骨，花，學、崎、雨&lt;/p&gt;
  &lt;p lang="zh-Hant-HK"&gt;繁體香港 zh-Hant-HK：骨，花，學、崎、雨&lt;/p&gt;

&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// index.html - 2

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-TW"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Bootstrap 5&lt;/title&gt;
  &lt;link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-F3w7mX95PdgyTmZZMECAngseQB83DfGTowi0iMjiWaeVhAn4FJkqJByhZMI3AhiU" crossorigin="anonymous"&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;button type="button" class="btn btn-primary"&gt;Primary&lt;/button&gt;
  &lt;button type="button" class="btn btn-secondary"&gt;Secondary&lt;/button&gt;
  &lt;button type="button" class="btn btn-success"&gt;Success&lt;/button&gt;
  &lt;button type="button" class="btn btn-danger"&gt;Danger&lt;/button&gt;
  &lt;button type="button" class="btn btn-warning"&gt;Warning&lt;/button&gt;
  &lt;button type="button" class="btn btn-info"&gt;Info&lt;/button&gt;
  &lt;button type="button" class="btn btn-light"&gt;Light&lt;/button&gt;
  &lt;button type="button" class="btn btn-dark"&gt;Dark&lt;/button&gt;

  &lt;button type="button" class="btn btn-link"&gt;Link&lt;/button&gt;

  &lt;hr&gt;

  &lt;button type="button" class="btn btn-outline-primary" data-bs-toggle="button" autocomplete="off"&gt;Toggle button&lt;/button&gt;
  &lt;button type="button" class="btn btn-outline-primary active" data-bs-toggle="button" autocomplete="off" aria-pressed="true"&gt;Active toggle button&lt;/button&gt;
  &lt;button type="button" class="btn btn-outline-primary" disabled data-bs-toggle="button" autocomplete="off"&gt;Disabled toggle button&lt;/button&gt;


  &lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-/bQdsTh/da6pkI1MST/rWKFNjaCP5gBSY4sEBT38Q/9RBh9AH40zEOg7Hlq2THRZ" crossorigin="anonymous"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/getting-started/introduction/" target="_blank" rel="noreferrer noopener">快速開始 &gt; 簡介</a></li></ul>



<h3>CSS 的 Class 運用</h3>



<h4>樣式補充說明</h4>



<pre class="wp-block-code"><code>&lt;button type="button" class="btn btn-primary"&gt;Primary&lt;/button&gt;</code></pre>



<p>Bootstrap 中會加入大量的 Class 來套用樣式，每一個 Class 都代表了部分的結構、樣式、狀態等等…</p>



<p>Class 其中的:</p>



<ul><li>class 是 HTML 標籤的屬性名稱 – 每個標籤只能有一個</li><li>btn 則是其值 – 每個 Class 可以用空白隔開多個值</li></ul>



<h3 class="has-background" style="background-color:#ff6663">快速體驗 Bootstrap 建立一個網站</h3>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="zh-TW"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Bootstrap 5&lt;/title&gt;
  &lt;link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-F3w7mX95PdgyTmZZMECAngseQB83DfGTowi0iMjiWaeVhAn4FJkqJByhZMI3AhiU" crossorigin="anonymous"&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;nav class="navbar navbar-expand-lg navbar-dark bg-dark"&gt;
    &lt;div class="container-fluid"&gt;
      &lt;a class="navbar-brand" href="#"&gt;Navbar&lt;/a&gt;
      &lt;button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation"&gt;
        &lt;span class="navbar-toggler-icon"&gt;&lt;/span&gt;
      &lt;/button&gt;
      &lt;div class="collapse navbar-collapse" id="navbarSupportedContent"&gt;
        &lt;ul class="navbar-nav me-auto mb-2 mb-lg-0"&gt;
          &lt;li class="nav-item"&gt;
            &lt;a class="nav-link active" aria-current="page" href="#"&gt;Home&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item"&gt;
            &lt;a class="nav-link" href="#"&gt;Link&lt;/a&gt;
          &lt;/li&gt;
          &lt;li class="nav-item dropdown"&gt;
            &lt;a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false"&gt;
              Dropdown
            &lt;/a&gt;
            &lt;ul class="dropdown-menu" aria-labelledby="navbarDropdown"&gt;
              &lt;li&gt;&lt;a class="dropdown-item" href="#"&gt;Action&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a class="dropdown-item" href="#"&gt;Another action&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;hr class="dropdown-divider"&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a class="dropdown-item" href="#"&gt;Something else here&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li class="nav-item"&gt;
            &lt;a class="nav-link disabled"&gt;Disabled&lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
        &lt;form class="d-flex"&gt;
          &lt;input class="form-control me-2" type="search" placeholder="Search" aria-label="Search"&gt;
          &lt;button class="btn btn-outline-success" type="submit"&gt;Search&lt;/button&gt;
        &lt;/form&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/nav&gt;

  &lt;div class="container my-4"&gt;
    &lt;div class="row row-cols-1 row-cols-md-2 g-4"&gt;
      &lt;div class="col"&gt;
        &lt;div class="card"&gt;
          &lt;img src="https://images.unsplash.com/photo-1645516956968-dee62f4a9090?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=870&amp;q=80" class="card-img-top" alt="..."&gt;
          &lt;div class="card-body"&gt;
            &lt;h5 class="card-title"&gt;Card title&lt;/h5&gt;
            &lt;p class="card-text"&gt;This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.&lt;/p&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="col"&gt;
        &lt;div class="card"&gt;
          &lt;img src="https://images.unsplash.com/photo-1645516956968-dee62f4a9090?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=870&amp;q=80" class="card-img-top" alt="..."&gt;
          &lt;div class="card-body"&gt;
            &lt;h5 class="card-title"&gt;Card title&lt;/h5&gt;
            &lt;p class="card-text"&gt;This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.&lt;/p&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="col"&gt;
        &lt;div class="card"&gt;
          &lt;img src="https://images.unsplash.com/photo-1645516956968-dee62f4a9090?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=870&amp;q=80" class="card-img-top" alt="..."&gt;
          &lt;div class="card-body"&gt;
            &lt;h5 class="card-title"&gt;Card title&lt;/h5&gt;
            &lt;p class="card-text"&gt;This is a longer card with supporting text below as a natural lead-in to additional content.&lt;/p&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="col"&gt;
        &lt;div class="card"&gt;
          &lt;img src="https://images.unsplash.com/photo-1645516956968-dee62f4a9090?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=870&amp;q=80" class="card-img-top" alt="..."&gt;
          &lt;div class="card-body"&gt;
            &lt;h5 class="card-title"&gt;Card title&lt;/h5&gt;
            &lt;p class="card-text"&gt;This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.&lt;/p&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;

  &lt;footer class="bg-light py-4"&gt;
    &lt;div class="container"&gt;
      &lt;p class="mb-0"&gt;這裡是 Footer&lt;/p&gt;
    &lt;/div&gt;
  &lt;/footer&gt;

  &lt;script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-/bQdsTh/da6pkI1MST/rWKFNjaCP5gBSY4sEBT38Q/9RBh9AH40zEOg7Hlq2THRZ" crossorigin="anonymous"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<h2>CH3 – Bootstrap 文件介紹</h2>



<h3>知識點：box-sizing</h3>



<p>由於 padding 及 border 會改變元素運算後的寬度，避免麻煩的計算，Bootstrap 預設載入 box-sizing: border-box</p>



<p><strong>定義的寬度 = 實際呈現的寬度</strong></p>



<figure class="wp-block-gallery has-nested-images columns-2 is-cropped">
<figure class="wp-block-image size-large"><img loading="lazy" width="1275" height="801" data-id="327"  src="/wordpress_blog/wp-content/uploads/2022/04/border-box.png" alt="" class="wp-image-327"/><figcaption>box-sizing: content-box</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1369" height="807" data-id="326"  src="/wordpress_blog/wp-content/uploads/2022/04/content-box.png" alt="" class="wp-image-326"/><figcaption>box-sizing: border-box</figcaption></figure>
</figure>



<h3>知識點：CSS Variables (CSS 變數)</h3>



<pre class="wp-block-code"><code>// 範例程式碼

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Bootstrap 5&lt;/title&gt;
  &lt;style&gt;
    /* 全域 */
    :root {
      --primary: #69f0ae;
    }

    .box {
      height: 100px;
      width: 100px;
      padding: 20px;
      border: 5px solid #eee;
    }

    .bg-primary {
      background-color: var(--primary);
    }

    /* 進階技巧 */
    .local {
      --primary: orange;
    }

  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;div class="box bg-primary"&gt;&lt;/div&gt;
  &lt;div class="local"&gt;
    &lt;div class="box bg-primary"&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<h3>知識點：rem 單位</h3>



<p>網頁文字預設大小是 16px。</p>



<p>rem 與 em 的差別。</p>



<p>最外層設定會使用 :root 或者 html</p>



<pre class="wp-block-code"><code>// css_rem_em.html - 範例程式碼

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Bootstrap 5&lt;/title&gt;
  &lt;style&gt;
    html {
      font-size: 20px;
    }
    .em2 {
      font-size: 2em;
    }
    .rem2 {
      font-size: 2rem;
    }
    .py-1 {
      padding-top: 1rem;
      padding-bottom: 1rem;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;div&gt;
    Lorem, ipsum.
  &lt;/div&gt;
  &lt;div class="em2"&gt;
    Lorem, ipsum.
    &lt;strong class="em2"&gt;Lorem, ipsum.&lt;/strong&gt;
  &lt;/div&gt;
  &lt;hr&gt;
  &lt;div class="rem2 py-1"&gt;
    Lorem, ipsum.
    &lt;strong class="rem2"&gt;Lorem, ipsum.&lt;/strong&gt;
  &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<h3>知識點：系統預設字體</h3>



<h4>樣式補充說明</h4>



<figure class="wp-block-image size-full"><img loading="lazy" width="1536" height="601" src="/wordpress_blog/wp-content/uploads/2022/04/樣式補充說明.png" alt="" class="wp-image-329"/><figcaption>樣式補充說明</figcaption></figure>



<h4>Bootstrap 預設字體</h4>



<figure class="wp-block-image size-full"><img loading="lazy" width="1511" height="693" src="/wordpress_blog/wp-content/uploads/2022/04/Bootstrap預設字體.png" alt="" class="wp-image-330"/><figcaption>Bootstrap 預設字體</figcaption></figure>



<h3>CSS Reset 做了什麼</h3>



<ul><li><a href="https://github.com/twbs/bootstrap/blob/v5.1.0/dist/css/bootstrap-reboot.css" target="_blank" rel="noreferrer noopener">Reboot 專用 CSS</a></li></ul>



<pre class="wp-block-code"><code>// reboot.html - 範例程式碼

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Bootstrap 5&lt;/title&gt;
  &lt;link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-F3w7mX95PdgyTmZZMECAngseQB83DfGTowi0iMjiWaeVhAn4FJkqJByhZMI3AhiU" crossorigin="anonymous"&gt;
  &lt;style&gt;
    .box {
      height: 100px;
      width: 100px;
      padding: 20px;
      background-color: #ccc;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;!-- 重點 1: 會套用 Bootstrap 預設字體、字體大小、行間距等等 --&gt;
  &lt;h1&gt;h1. Bootstrap heading&lt;/h1&gt;
  &lt;h2&gt;h2. Bootstrap heading&lt;/h2&gt;

  &lt;!-- 重點 2: 套用 box-sizing --&gt;
  &lt;div class="box"&gt;&lt;/div&gt;

  &lt;!-- 重點 3: 套用 list 等其他標準 Normalize 樣式 --&gt;
  &lt;ul&gt;
    &lt;li&gt;All lists have their top margin removed&lt;/li&gt;
    &lt;li&gt;And their bottom margin normalized&lt;/li&gt;
    &lt;li&gt;
      Nested lists have no bottom margin
      &lt;ul&gt;
        &lt;li&gt;This way they have a more even appearance&lt;/li&gt;
        &lt;li&gt;Particularly when followed by more list items&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;The left padding has also been reset&lt;/li&gt;
  &lt;/ul&gt;

  &lt;!-- 重點 4: 包含 Bootstrap 所釋出的變數色彩 --&gt;
  &lt;div class="box" style="background-color: var(--bs-primary);"&gt;

  &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/content/reboot/" target="_blank" rel="noreferrer noopener">內容 &gt; 重置</a></li></ul>



<h3>六角學院專屬「Bootstrap 練習手冊」</h3>



<p>使用 ctrl + p 然後把檔名貼上，開啟練習的檔案。</p>



<h3>Bootstrap 5 練習手冊連結</h3>



<ul><li><a href="https://github.com/hexschool/bootstrap5-starter-files" target="_blank" rel="noreferrer noopener">Bootstrap 5 練習手冊</a></li></ul>



<p>解壓縮後請<strong>務必使用 Live Server 開啟</strong>。</p>



<h3>文字運用</h3>



<p>建議使用上使用 &lt;del&gt;、&lt;ins&gt;，避免使用舊的標籤 &lt;s&gt;、&lt;u&gt;。</p>



<p>text-align: left, right, center</p>



<p>left → start、right → end</p>



<p>list-unstyled 開發中常用的 class</p>



<p>dl、dt、dd</p>



<p>格線系統</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/content/typography/" target="_blank" rel="noreferrer noopener">內容 &gt; 文字排版</a></li></ul>



<h3>基本圖片運用</h3>



<p>img-fluid</p>



<p>rounded、img-thumbnail</p>



<p>clearfix、float-start、float-end</p>



<p>mx-auto</p>



<p>text-center</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/content/images/" target="_blank" rel="noreferrer noopener">內容 &gt; 圖片</a></li></ul>



<h3>圖片區</h3>



<p>figure、figure-caption</p>



<p>text-center、text-end</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/content/figures/" target="_blank" rel="noreferrer noopener">內容 &gt; 圖片區</a></li></ul>



<h3>表格運用</h3>



<p>table、thead、tbody、tfoot</p>



<p>table-primary、table-success、table-dark</p>



<p>table-primary、table-secondary、table-success、table-danger、table-warning、table-info、table-light、table-dark</p>



<p>table-striped</p>



<p>table-hover</p>



<p>table-active</p>



<p>table-bordered、border-warning</p>



<p>table-borderless</p>



<p>align-middle、align-top、align-bottom</p>



<p>巢狀</p>



<p>結構: 表頭 thead、表尾 tfoot、tbody、表格標題 caption, caption-top</p>



<p>table-responsive、table-responsive{-sm|-md|-lg|-xl|-xxl}</p>



<ul><li><a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.1/content/tables/" target="_blank">內容 &gt; 表格</a></li><li><a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.1/utilities/borders/" target="_blank">通用類別 &gt; 邊框</a></li><li><a href="https://bootstrap5.hexschool.com/docs/5.1/utilities/vertical-align/" target="_blank" rel="noreferrer noopener">通用類別 &gt; 垂直對齊</a></li></ul>



<h3>測驗：Bootstrap 文件介紹</h3>



<h2>CH4 – Flex 與網格系統介紹</h2>



<h3>基礎格線觀念</h3>



<p>但是網頁並不像是平面設計是靜止不動的，會因為使用者的裝置大小、瀏覽器顯示區域、甚至是操作方式，都會改變內容或者排版。<br><strong>所以說，在網頁設計上的格線尺寸該如何分割?</strong></p>



<p>會以 960px 為基準，也是因為早期電腦螢幕通常為1024px，960px 的設計是最為剛好。<br>而 12 欄則是較多數字的<strong>公倍數</strong>。</p>



<p>12 Column Grid</p>



<ul><li>3 9</li><li>6 6</li><li>3 3 3 3</li></ul>



<p>Total Width、Number of Columns、Gutter on outside、Gutter Width、Column Width</p>



<p>Columns、Count、Width、Gutter</p>



<p>Bootstrap 則是基於此概念作為延伸。</p>



<h4>Bootstrap 5 還有…</h4>



<ol><li>預設包含 12 欄</li><li>除了預設欄以外，亦可使用等比欄位劃分</li><li>包含 5 種預設 Gutter 寬度</li><li>提供欄、列的組合形式</li></ol>



<h3>繪圖軟體與格線之間的關聯性</h3>



<ul><li><a rel="noreferrer noopener" href="https://www.figma.com/" target="_blank">Figma</a></li></ul>



<h3>響應式中斷點</h3>



<p>在 Bootstrap 的格線系統、後面的章節都非常重要。</p>



<p>斷點在特定的寬度會觸發樣式。</p>



<p>Bootstrap 是行動優先。</p>



<p>none、block</p>



<p>技巧: 先思考行動版，再補桌面版。</p>



<p>d-{breakpoint}-{value}</p>



<p>d-none、d-xl-none、d-xxl-none</p>



<p>d-none, d-xl-block</p>



<p>text-center, text-lg-start</p>



<ul><li><a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.1/layout/breakpoints/" target="_blank">排版 &gt; 斷點</a></li><li><a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.1/utilities/display/" target="_blank">通用類別 &gt; Display</a></li><li><a href="https://bootstrap5.hexschool.com/docs/5.1/utilities/text/" target="_blank" rel="noreferrer noopener">通用類別 &gt; 文字</a></li></ul>



<h3>格線容器</h3>



<p>容器就是主要內容放置的區塊。</p>



<h4>Bootstrap 容器概念</h4>



<p>Bootstrap 的 container Class 主要是用來定義最外層的容器<br>在使用上分為兩大類:<br>分別為應對<strong>滿版寬度</strong>及<strong>階段固定寬度</strong>兩種</p>



<h4>container-fluid</h4>



<figure class="wp-block-image size-full"><img loading="lazy" width="1307" height="869" src="/wordpress_blog/wp-content/uploads/2022/04/container-fluid.png" alt="" class="wp-image-333"/><figcaption>container-fluid</figcaption></figure>



<p>如果網頁內容<strong>不需要嚴謹的定義最大寬度</strong><br>可以使用 container-fluid</p>



<p>對於網頁內容寬度的階段美感都很要求<br>且<strong>需要最大寬度的限制</strong>可使用 container</p>



<figure class="wp-block-gallery has-nested-images columns-1">
<figure class="wp-block-image size-large"><img loading="lazy" width="1536" height="687" data-id="339"  src="/wordpress_blog/wp-content/uploads/2022/04/container-1.png" alt="" class="wp-image-339"/><figcaption>container-1</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1536" height="684" data-id="338"  src="/wordpress_blog/wp-content/uploads/2022/04/container-2.png" alt="" class="wp-image-338"/><figcaption>container-2</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1536" height="651" data-id="336"  src="/wordpress_blog/wp-content/uploads/2022/04/container-3.png" alt="" class="wp-image-336"/><figcaption>container-3</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1536" height="668" data-id="335"  src="/wordpress_blog/wp-content/uploads/2022/04/container-4.png" alt="" class="wp-image-335"/><figcaption>container-4</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1536" height="715" data-id="337"  src="/wordpress_blog/wp-content/uploads/2022/04/container-5.png" alt="" class="wp-image-337"/><figcaption>container-5</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1536" height="592" data-id="340"  src="/wordpress_blog/wp-content/uploads/2022/04/container-6.png" alt="" class="wp-image-340"/><figcaption>container-6</figcaption></figure>
</figure>



<p>最常用的是 container、container-fluid</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/layout/containers/" target="_blank" rel="noreferrer noopener">排版 &gt; 容器</a></li></ul>



<h3>欄:上篇</h3>



<p>格線的基本架構 container, row, col</p>



<p>外層至少要有一層 container</p>



<p>網頁開發中出現水平卷軸算是蠻嚴重的失誤。</p>



<p>寬度運用: 限制單欄寬度 (預設為 12 欄)、換行、等寬欄(col)、彈性寬度(col-auto)</p>



<p>col 會自動平均分配剩餘的空間</p>



<p>col-auto 會依據內容調整空間</p>



<p>巢狀</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/layout/columns/" target="_blank" rel="noreferrer noopener">排版 &gt; 欄</a></li></ul>



<h3>欄:下篇</h3>



<p>響應式</p>



<p>技巧: 先思考行動版，再補桌面版。</p>



<p>行動版 &gt; 平板 md &gt; 桌面版 xl</p>



<p>col-6、col-md-4、col-xl-3</p>



<p>行動版是單欄情況下，我們可以不製作 col-12。<br>當有其他 col 中斷點，可不加入 col-12。</p>



<p>推移 (offset): 目前大多會透過 flex 特性推移，offset 的運用情境較少。</p>



<h3>欄與欄的間距: Gutter 觀念說明</h3>



<h4>Gutter 的運作概念</h4>



<p>Gutter 在 CSS 中是如何製作的?</p>



<pre class="wp-block-code"><code>// 範例程式碼

.row {
  margin-right: -0.75rem;
  margin-left: -0.75rem;
}

.col-* {
  padding-right: 0.75rem;
  padding-left: 0.75rem;
}</code></pre>



<pre class="wp-block-code"><code>// Bootstrap 實作的程式碼

.row {
  --bs-gutter-x: 1.5rem;
  margin-right: calc(var(--bs-gutter-x) * -.5);
  margin-left: calc(var(--bs-gutter-x) * -.5);
}

.row &gt; * {
  padding-right: calc(var(--bs-gutter-x) * .5);
  padding-left: calc(var(--bs-gutter-x) * .5);
}</code></pre>



<ol><li>格線系統結構由外而內為 .container, .row, .col-**</li><li>class=”row” 內層建議使用 class=”col-xx”</li><li>最外層，在幫它補一個 class=”container” 吧</li></ol>



<h3>欄與欄的間距: Gutter</h3>



<p>Gutter 的運用: 查看 gutter 的原始碼</p>



<p>可調整的 gutter: 使用 gx-{ 1-5 } 調整水平間距</p>



<p>運用情境: 在內層加上 gx-2</p>



<p>延伸: 垂直 gutter，使用方式: gx, gy, g</p>



<p>延伸: no-gutters，使用 gx-0 移除 gutter</p>



<p>響應式: 桌面版使用大間距、行動版移除間距</p>



<p>行列式: 使用 row-cols-{欄數} 定義內層欄數</p>



<p>運用情境: 使用 row-cols-{中斷點}-{欄數} 來製作不同欄線規劃，桌面版 xl: 4 大欄、平板 md: 3 大欄、行動版 xs: 2 欄</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/layout/gutters/" target="_blank" rel="noreferrer noopener">排版 &gt; Gutter</a></li></ul>



<h3 class="has-background" style="background-color:#ff6663">CSS Flex 與格線系統</h3>



<h4>Flex 需要了解的</h4>



<figure class="wp-block-gallery has-nested-images columns-1 is-cropped">
<figure class="wp-block-image size-large"><img loading="lazy" width="1755" height="659" data-id="346"  src="/wordpress_blog/wp-content/uploads/2022/04/Flex01.png" alt="" class="wp-image-346"/></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1715" height="669" data-id="345"  src="/wordpress_blog/wp-content/uploads/2022/04/Flex02.png" alt="" class="wp-image-345"/></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1885" height="713" data-id="348"  src="/wordpress_blog/wp-content/uploads/2022/04/Flex03.png" alt="" class="wp-image-348"/></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1883" height="713" data-id="347"  src="/wordpress_blog/wp-content/uploads/2022/04/Flex04.png" alt="" class="wp-image-347"/></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1907" height="707" data-id="349"  src="/wordpress_blog/wp-content/uploads/2022/04/Flex05.png" alt="" class="wp-image-349"/></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1895" height="715" data-id="350"  src="/wordpress_blog/wp-content/uploads/2022/04/Flex06.png" alt="" class="wp-image-350"/></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1909" height="709" data-id="351"  src="/wordpress_blog/wp-content/uploads/2022/04/Flex07.png" alt="" class="wp-image-351"/></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1895" height="733" data-id="353"  src="/wordpress_blog/wp-content/uploads/2022/04/Flex08.png" alt="" class="wp-image-353"/></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1915" height="763" data-id="354"  src="/wordpress_blog/wp-content/uploads/2022/04/Flex09.png" alt="" class="wp-image-354"/></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1857" height="695" data-id="352"  src="/wordpress_blog/wp-content/uploads/2022/04/Flex10.png" alt="" class="wp-image-352"/></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1863" height="695" data-id="355"  src="/wordpress_blog/wp-content/uploads/2022/04/Flex11.png" alt="" class="wp-image-355"/></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1835" height="503" data-id="356"  src="/wordpress_blog/wp-content/uploads/2022/04/Flex12.png" alt="" class="wp-image-356"/></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1477" height="573" data-id="357"  src="/wordpress_blog/wp-content/uploads/2022/04/Flex13.png" alt="" class="wp-image-357"/></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1571" height="543" data-id="358"  src="/wordpress_blog/wp-content/uploads/2022/04/Flex14.png" alt="" class="wp-image-358"/></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1445" height="651" data-id="362"  src="/wordpress_blog/wp-content/uploads/2022/04/Flex15.png" alt="" class="wp-image-362"/></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1413" height="613" data-id="359"  src="/wordpress_blog/wp-content/uploads/2022/04/Flex16.png" alt="" class="wp-image-359"/></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1787" height="401" data-id="360"  src="/wordpress_blog/wp-content/uploads/2022/04/Flex17.png" alt="" class="wp-image-360"/></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1763" height="509" data-id="361"  src="/wordpress_blog/wp-content/uploads/2022/04/Flex18.png" alt="" class="wp-image-361"/></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1771" height="521" data-id="363"  src="/wordpress_blog/wp-content/uploads/2022/04/Flex19.png" alt="" class="wp-image-363"/></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1891" height="657" data-id="366"  src="/wordpress_blog/wp-content/uploads/2022/04/Flex20.png" alt="" class="wp-image-366"/></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1921" height="675" data-id="364"  src="/wordpress_blog/wp-content/uploads/2022/04/Flex21.png" alt="" class="wp-image-364"/></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1921" height="667" data-id="365"  src="/wordpress_blog/wp-content/uploads/2022/04/Flex22.png" alt="" class="wp-image-365"/><figcaption>Flex 01~22</figcaption></figure>
</figure>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/utilities/flex/" target="_blank" rel="noreferrer noopener">通用類別 &gt; Flex</a></li></ul>



<h3 class="has-background" style="background-color:#ff6663">Utilities 通用類別: 間隔 Spacing</h3>



<p>{property}{sides}-{size}、{property}{sides}-{breakpoint}-{size}</p>



<p>property 設定: m、p</p>



<p>sides 設定: t、b、s、e、x、y、blank</p>



<p>size 設定: 0、1、2、3、4、5</p>



<p>基本運用: 為以下區塊推移不同水平距離、為以下區塊推移垂直距離、清除文字的向下 margin、為按鈕加上更大的水平 padding。</p>



<p>水平置中 margin-left: auto; margin-right: auto;、mx-auto</p>



<p>負值運用，注意：此功能預設是被關閉的，需要調整設定檔案才會開啟，未來課程會介紹如何調整 Bootstrap Sass 即可開啟此功能。</p>



<p>Gap: display grid 適合排版極為複雜的格線，大部分的網頁運用建議還是以 Bootstrap 網格系統為主。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/utilities/spacing/" target="_blank" rel="noreferrer noopener">通用類別 &gt; 間距</a></li></ul>



<h3 class="has-palette-1-color-5-background-color has-background">Utilities 通用類別: Flex</h3>



<p>啟用 flex，flex 包含行內及區塊兩種 (大多實戰以區塊為主，行內則較少使用)</p>



<p>方向性:<br>使用&nbsp;<code>.flex-row</code>&nbsp;來設定水平的方向(瀏覽器預設值)，或是使用&nbsp;<code>.flex-row-reverse</code>&nbsp;來作水平方向的反轉。<br>使用&nbsp;<code>.flex-column</code>&nbsp;設置垂直方向，或者使用&nbsp;<code>.flex-column-reverse</code>&nbsp;作垂直方向的反轉。</p>



<p>Justify content，包含以下的 justify content 運用方式<br>justify-content-start、justify-content-end、justify-content-center、justify-content-between、justify-content-around、justify-content-evenly</p>



<p>Align items，包含以下 align-items 運用方式<br>align-items-start、align-items-end、align-items-center、align-items-baseline、align-items-stretch</p>



<p>Align self，內層元素的對齊方式<br>align-self-start、align-self-end、align-self-center、align-self-baseline、align-self-stretch</p>



<p>Auto margins (重要技巧)，使用 margin auto 推移區塊<br>me-auto、ms-auto</p>



<p>With align-items<br>mb-auto、mt-auto</p>



<p>Wrap，使用&nbsp;<code>.flex-nowrap</code>&nbsp;完全不換行 (瀏覽器預設)，使用&nbsp;<code>.flex-wrap</code>&nbsp;進行換行，或使用&nbsp;<code>.flex-wrap-reverse</code>&nbsp;進行反向換行</p>



<p>Order，<code>order</code>&nbsp;只能使用從 0 到 5 的整數值，任何額外值則需要自定義的 CSS</p>



<p>Align content，<strong>注意！</strong>&nbsp;此特性對於單行的 Flex 項目沒有作用。<br>align-content-start、align-content-end、align-content-center、align-content-around、align-content-stretch</p>



<p>Media object，加入 flex-row-reverse 為區塊反轉</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/utilities/flex/" target="_blank" rel="noreferrer noopener">通用類別 &gt; Flex</a></li></ul>



<h3>格線系統與 Utilities 的混合運用</h3>



<p>Flex 運用，置中排列、分散排列、兩端分散、反轉、垂直置中、單一元素垂直置中、order 排序。</p>



<p>Spacing 運用，推移置另一端、換行間距(使用 utilites margin)。</p>



<ul><li><a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.1/layout/grid/" target="_blank">排版 &gt; 網格</a></li><li><a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.1/utilities/flex/" target="_blank">通用類別 &gt; Flex</a></li><li><a href="https://bootstrap5.hexschool.com/docs/5.1/utilities/spacing/" target="_blank" rel="noreferrer noopener">通用類別 &gt; 間距</a></li></ul>



<h3 class="has-background" style="background-color:#ff6663">格線系統: 實作練習</h3>



<p>置中圖片，不需要所有內容都佔滿 12 欄寬。</p>



<p>基本三欄式，可以善用 flex 特性，將部分內容進行推移達到等高的視覺效果。</p>



<p>交錯式排列，技巧</p>



<ul><li>只有主要內容需要套用容器、格線，背景可不需要套用</li><li>左右交錯也是很棒的視覺方式</li></ul>



<p>左選單、右側內容</p>



<ul><li>可善用 gutter 的大小差異，製作不同間距的格線</li><li>相同視覺群組，距離會較為接近</li></ul>



<h3 class="has-background" style="background-color:#ff6663">格線系統: 常見錯誤</h3>



<p>外層缺少 .container</p>



<p>.row 內層加入 .col 以外的內容</p>



<p>都是 12 欄，可不需要使用格線功能</p>



<p>.col-md… 在行動版都是 .col-12，因此不需要加入</p>



<p>調整格線系統的水平間距(有風險的行為)</p>



<h3>測驗: Flex 與網格系統介紹</h3>



<h2>CH5 – 通用類別 Utilities 與 工具 Helpers</h2>



<h3>Utilities 與 Helpers 基本介紹</h3>



<ul><li><a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.1/utilities/api/" target="_blank">通用類別 &gt; API</a></li><li><a href="https://bootstrap5.hexschool.com/docs/5.1/helpers/clearfix/" target="_blank" rel="noreferrer noopener">工具 &gt; 清楚浮動</a></li></ul>



<h3>Background – 背景色彩 ★★</h3>



<p>Background color，情境色均可套用在被景色另外還包含額外幾種背景專屬色彩，bg-body、bg-white、bg-transparent。</p>



<p>漸層色，另外可加上 .bg-gradient 套用漸層色。<strong>注意：此功能預設不會開啟，需要調整變數才能啟用</strong>。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/utilities/background/" target="_blank" rel="noreferrer noopener">通用類別 &gt; 背景</a></li></ul>



<h3>Border – 邊框 ★★</h3>



<p>Border，增加、對於無邊框來說可以加上 .border，或是 .border-{‘ 向} 來加入 border，減少、也可以加上 .border-0，或是 .border-{方向}-0 來移除 border。</p>



<p>邊框顏色，使用 .border-{情境色彩} 來加入 border 的顏色。</p>



<p>邊框寬度，使用 .border-{1-5 數值} 來調整邊框寬度。</p>



<p>Border-radius，可以加上 .rounded，或是 .rounded-{方向} 來加入 圓角。以及使用 .rounded-pill、.rounded-circle 來製作不同圓的樣式。尺寸，可以加上 .rounded-{ 0-3 } 來調整 圓角 大小。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/utilities/borders/" target="_blank" rel="noreferrer noopener">通用類別 &gt; 邊框</a></li></ul>



<h3>Text color – 文字色彩</h3>



<p>Colors，單純的文字顏色，可以使用 .text- { 情境色彩 } 來進行套用。</p>



<ul><li><a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.1/utilities/colors/" target="_blank">通用類別 &gt; 顏色</a></li><li><a href="https://bootstrap5.hexschool.com/docs/5.1/helpers/colored-links/" target="_blank" rel="noreferrer noopener">工具 &gt; 連結顏色</a></li></ul>



<h3>Display – 盒模型 ★★★</h3>



<p>Notation，.d-{value} for 預設裝置、.d-{breakpoint}-{value} for sm, md, lg, xl, and xxl。</p>



<p>value 為以下其中一個: none、inline、inline-block、block、grid、table、table-cell、table-row、flex、inline-flex。</p>



<p>Examples，使用 display inline、display-block 轉換以下盒模型。</p>



<p>隱藏元素，需求: 桌面板顯示、行動版隱藏。</p>



<p>運用在列印的 Display。</p>



<p>Flex 常見運用情境，水平等距排列、兩左一右、垂直排列。<br>justify-content-between、ms-auto、flex-column</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/utilities/display/" target="_blank" rel="noreferrer noopener">通用類別 &gt; Display</a></li></ul>



<h3>Float – 浮動</h3>



<p>Overview，float-start、float-end、float-none。</p>



<p>Responsive</p>



<p>實戰運用，製作繞圖排文 float-start, me-3, mb-3、float-end, ms-3, mb-3。</p>



<p>清除浮動: 為以下元素套用 clearfix，使用 Google Elments 檢視。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/utilities/float/" target="_blank" rel="noreferrer noopener">通用類別 &gt; 浮動</a></li></ul>



<h3>Interactions – 互動 ★</h3>



<p>Text selection，user-select-all、user-select-auto、user-select-none。</p>



<p>Pointer events，pe-none、pe-auto。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/utilities/interactions/" target="_blank" rel="noreferrer noopener">通用類別 &gt; 互動</a></li></ul>



<h3>Overflow- 溢出</h3>



<p>使用四個預設的值與類別，即時的調整&nbsp;<code>overflow</code>&nbsp;屬性。預設情況下這些類別並非響應式的</p>



<p>overflow-auto、overflow-hidden、overflow-visible、overflow-scroll。</p>



<p>實戰技巧，使用 overflow-auto 製作水平滾動項目。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/utilities/overflow/" target="_blank" rel="noreferrer noopener">通用類別 &gt; 溢出</a></li></ul>



<h3>Position – 位置 ★★</h3>



<p>Arrange elements，格式為 {property}-{position}<br>property 為以下的其中一種:<br>top、start、bottom、end<br>position 為以下的其中一種:<br>0 – 0、50 – 50%、100 – 100%<br><br>你可以為元素加上 position-absolute, position-relative 改變定位形式，同時可透過 {property}-{position} 的形式加上定位。</p>



<p>Center elements<br>可以透過轉換通用類別&nbsp;<code>.translate-middle</code>&nbsp;將元素置中。<br>透過添加&nbsp;<code>.translate-middle-x</code>&nbsp;或&nbsp;<code>.translate-middle-y</code>&nbsp;類別，元素將只能在水平或垂直方向上定位。</p>



<p>Examples<br>可以將這些類別與現有的元件結合使用，創造新的元件。請記得你可以透過在&nbsp;<code>$position-values</code>&nbsp;變數添加實體以擴展它的功能。</p>



<p>Fixed top，將元素固定在螢幕的頂端 .fixed-top<br>Fixed bottom，將元素固定在螢幕的底部 .fixed-bottom</p>



<p>Sticky top，只有在滾動離開該元素之後才會執行。&nbsp;<code>.sticky-top</code>&nbsp;通用類別使用 CSS 的&nbsp;<code>position: sticky</code>，並非所有瀏覽器都完全支持。</p>



<p>Responsive sticky top，.sticky-top 通用類別也支持響應式變化<br>sticky-sm-top、sticky-md-top、sticky-lg-top、sticky-xl-top。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/utilities/position/" target="_blank" rel="noreferrer noopener">通用類別 &gt; 位置</a></li></ul>



<h3>Shadow – 陰影 ★</h3>



<p>Examples，為以下方框加入不同等級陰影<br>shadow-none、shadow-sm、shadow、shadow-lg</p>



<p>案例說明: 請千萬不要把陰影加在格線上。</p>



<p>陰影的運用<br><a href="https://material-design.hexschool.io/environment/elavation.html#material-design-%E4%B8%AD%E7%9A%84%E5%B1%A4%E9%AB%98" target="_blank" rel="noreferrer noopener">很棒的陰影運用文章</a></p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/utilities/shadows/" target="_blank" rel="noreferrer noopener">通用類別 &gt; 陰影</a></li></ul>



<h3>Sizing – 尺寸 ★★</h3>



<p>Relative to the parent<br>分別加入 25%, 50%, 75%, 100% 和 auto</p>



<p>實戰運用<br>讓你的卡片等高呈現</p>



<p>還可以根據需求使用&nbsp;<code>max-width: 100%;</code>&nbsp;和&nbsp;<code>max-height: 100%;</code>&nbsp;通用類別</p>



<p>相對於視窗<br>vh, vw 以及 min</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/utilities/sizing/" target="_blank" rel="noreferrer noopener">通用類別 &gt; 尺寸</a></li></ul>



<h3>Text – 文字 ★</h3>



<p>Text alignment (文字對齊)<br>加入 text-{start, center, end}</p>



<p>中斷點示範:<br>桌面版靠左、行動版置中</p>



<p>Text wrapping and overflow<br>使用&nbsp;<code>.text-wrap</code>&nbsp;類別來斷行文字。<br>可搭配&nbsp;<code>.text-nowrap</code>&nbsp;類別防止換行。</p>



<p>Word break (文字斷行)<br>使用&nbsp;<code>.text-break</code>&nbsp;設定&nbsp;<code>word-wrap: break-word</code>&nbsp;和&nbsp;<code>word-break: break-word</code>&nbsp;預防長文破壞元件的排版。</p>



<p>Text transform (文字變換)<br>請注意&nbsp;<code>.text-capitalize</code>&nbsp;只有將第一個字母轉為大寫，而其他字母不受影響。</p>



<p>Font size (文字大小)<br>使用 fs-{ 1-6} 來調整文字大小。</p>



<p>Font weight and italics (文字粗細和斜體)<br><code>font-style</code>&nbsp;通用類別的縮寫為&nbsp;<code>.fst-*</code>，&nbsp;<code>font-weight</code>&nbsp;通用類別的縮寫為&nbsp;<code>.fw-*</code>。</p>



<p>Line height (行高)</p>



<p>Monospace (等寬字體)</p>



<p>Reset color (重置色彩)<br>使用&nbsp;<code>.text-reset</code>&nbsp;來重置一個文字或連結色彩，以便它們繼承父層的顏色。</p>



<p>Text decoration (文字裝飾)<br>加入 .text-decoration-{ underline, line-through, none } 改變文字裝飾。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/utilities/text/" target="_blank" rel="noreferrer noopener">通用類別 &gt; 文字</a></li></ul>



<h3>Vertical alignment – 垂直對齊 ★</h3>



<p>使用&nbsp;<a rel="noreferrer noopener" href="https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align" target="_blank">vertical-alignment</a>&nbsp;通用類別改變元素的對齊<br>請注意，垂直對齊僅影響 inline、inline-block、inline-table、和 table 元素。</p>



<p>搭配 inline 元素:<br>註：inline 中不太建議調整 align-*，這會受到字體不同影響其結果。</p>



<p>搭配 table cell 元素:<br>註：這是實戰常用技巧，尤其是 align-middle。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/utilities/vertical-align/" target="_blank" rel="noreferrer noopener">通用類別 &gt; 垂直對齊</a></li></ul>



<h3>Visibility – 可視性</h3>



<p>依需求使用&nbsp;<code>.visible</code>&nbsp;或&nbsp;<code>.invisible</code><br>這完全不會改變&nbsp;<code>display</code>&nbsp;的值，也不影響佈局 –&nbsp;<code>.invisible</code>&nbsp;元素仍會佔用頁面空間。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/utilities/visibility/" target="_blank" rel="noreferrer noopener">通用類別 &gt; 可視性</a></li></ul>



<h3>Helper: Clearfix – 清除浮動</h3>



<p>清除浮動<br>透過將&nbsp;<code>.clearfix</code>&nbsp;<strong>添加到父元素之中</strong>&nbsp;可以輕鬆的清除&nbsp;<code>float</code>&nbsp;所造成的副作用。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/helpers/clearfix/" target="_blank" rel="noreferrer noopener">工具 &gt; 清除浮動</a></li></ul>



<h3>Helper: Colored links – 連結顏色 ★★</h3>



<p>連結顏色<br>你可以使用&nbsp;<code>.link-*</code>&nbsp;類別為連結著色。不同於&nbsp;<a href="https://bootstrap5.hexschool.com/docs/5.0/utilities/colors/#colors" target="_blank" rel="noreferrer noopener">.text-* 類別</a>， 這些類別具有&nbsp;<code>:hover</code>&nbsp;和&nbsp;<code>:focus</code>&nbsp;狀態<br>將以下顏色替換為 .link-{情境色彩}</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/helpers/colored-links/" target="_blank" rel="noreferrer noopener">工具 &gt; 連結顏色</a></li></ul>



<h3>Helper: Ratio – 比例 ★</h3>



<p>Example<br>將所有嵌入如&nbsp;<code>&lt;iframe&gt;</code>&nbsp;包在帶有&nbsp;<code>.ratio</code>&nbsp;和長寬比 class 的父元素中。我們的通用選擇器&nbsp;<code>.ratio &gt; *</code>&nbsp;會自動調整直接子元素的大小。<br>加入 ratio-{ 16×9, 1×1, 4×3, 21×9 } 調整以下比例。</p>



<p>Custom ratios (自訂比率)<br>例如，要創建 2×1 的長寬比，請在&nbsp;<code>.ratio</code>&nbsp;上設置&nbsp;<code>--bs-aspect-ratio: 50%</code><br>必要設定寬、數值為寬的 %</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/helpers/ratio/" target="_blank" rel="noreferrer noopener">工具 &gt; 比例</a></li></ul>



<h3>Helper: Visually hidden – 視覺隱藏</h3>



<p>視覺隱藏<br>在視覺上隱藏元素，但仍允許其透過&nbsp;<code>.visually-hidden</code>&nbsp;呈現給輔助技術（例如螢幕閱讀器）。在預設的情況下，使用&nbsp;<code>.visually-hidden-focusable</code>&nbsp;可以在視覺上隱藏元素，但是當元素被聚焦時（例如，使用鍵盤的用戶）可以顯示該元素。也可以將&nbsp;<code>.visually-hidden-hidden-focusable</code>&nbsp;應用於容器中的&nbsp;<code>:focus-within</code>，當容器的任何子元素都獲得焦點時，將顯示該容器。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/helpers/visually-hidden/" target="_blank" rel="noreferrer noopener">工具 &gt; 視覺隱藏</a></li></ul>



<h3>Helper: Stretched link – 連結延伸 ★★</h3>



<p>連結延伸<br>在一個連結上添加&nbsp;<code>.stretched-link</code>&nbsp;將可以使它的&nbsp;<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block">containing block</a>&nbsp;變得可點擊，這是透過&nbsp;<code>::after</code>&nbsp;虛擬元素達成的。在大多數的情況下，這意味著本身帶有&nbsp;<code>position: relative;</code>，且內部包裝了具有&nbsp;<code>.stretched-link</code>&nbsp;類別之連結的元素將變得可點擊</p>



<p>在 Bootstrap 中卡片元件預設便帶有&nbsp;<code>position: relative</code>，因此在這個情況下你可以安全的在卡片中的連結添加&nbsp;<code>.stretched-link</code>，而無須更改任何其他 HTML。<br>為以下連結加入 .stretched-link</p>



<p>大多數自定義的元件並不預設帶有&nbsp;<code>position: relative</code>，因此必須添加&nbsp;<code>position: relative</code>，避免連結延伸到父容器以外的地方。<br>請確保延伸的外層包含 .position-relative</p>



<p>Identifying the containing block<br>如果延伸連結沒有確實運作，<a rel="noreferrer noopener" href="https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block" target="_blank">containing block</a>&nbsp;將可能是問題所在。以下的 CSS 屬性將使一個元素成為 containing block。<br>static 以外的 position 值<br>none 以外的 transform 或 perspective 值<br>在 transform 或 perspective 使用 will-change 作為值<br>none 以外的 filter 值，或是在 filter 使用 will-change 作為值 (只會在 Firefox 作用)</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/helpers/stretched-link/" target="_blank" rel="noreferrer noopener">工具 &gt; 連結延伸</a></li></ul>



<h3>Helper: Text truncation – 文字截斷 ★</h3>



<p>文字截斷<br>對於較長的內容，可以添加&nbsp;<code>.text-truncate</code>&nbsp;類別，以透過刪節號截斷文字。<strong>需為&nbsp;<code>display: inline-block</code>&nbsp;或是&nbsp;<code>display: block</code></strong>。</p>



<p>實戰案例、補充</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/helpers/text-truncation/" target="_blank" rel="noreferrer noopener">工具 &gt; 文字截斷</a></li></ul>



<h3>測驗: 通用類別 Utilities 與 工具</h3>



<h2>CH6 – 表單運用</h2>



<h3>知識點: 網頁親和性</h3>



<p>範例<br>幫助文字需要與控制元件相關聯<br>幫助文字應該使用&nbsp;<code>aria-describedby</code>&nbsp;與表單控制元件相關連，這將確保輔助技術（例如螢幕閱讀器）在用戶 focus 或輸入 input 時將了解此幫助文字。</p>



<p>關於 ARIA 的文章<br><a href="https://developer.mozilla.org/zh-TW/docs/Learn/Accessibility/WAI-ARIA_basics" target="_blank" rel="noreferrer noopener">MDN WAI-ARIA 基礎</a>、<a href="https://developers.google.com/web/fundamentals/accessibility/semantics-aria?hl=zh-tw" target="_blank" rel="noreferrer noopener">Google ARIA 簡介</a></p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/getting-started/accessibility/" target="_blank" rel="noreferrer noopener">快速開始 &gt; 網頁親和性</a></li></ul>



<h3>表單運用概觀</h3>



<p>概觀<br>確保在輸入框上使用正確的&nbsp;<code>type</code>&nbsp;屬性（例如，<code>email</code>&nbsp;用於電子郵件地址或&nbsp;<code>number</code>&nbsp;用於數字信息），以利用較新的輸入控制，如電子郵件驗證、號碼選擇等。相關內容可參考：<a rel="noreferrer noopener" href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input" target="_blank">連結</a><br>完成以下表單範例:<br>加上 .form-control, .form-label, .form-text<br>確保 label for 與 input id 有正確對應<br>確保 input type 使用正確<br>確保 button 有正確套用 type</p>



<p>表單文字<br>加上 .form-text (且 id 與 input 屬性的 aria-describedby 進行對應)</p>



<p>可以使用任何典型的行內 HTML 元素實現行內文字。</p>



<p>禁用表格<br>為以下表單加上 disabled</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/forms/overview/" target="_blank" rel="noreferrer noopener">表單 &gt; 概觀</a></li></ul>



<h3>表單元素常用的 form-control</h3>



<p>範例<br>為表單加上 .form-control</p>



<p>尺寸<br>為表單加上 .form-control-{ sm, lg } 等不同尺寸</p>



<p>禁用<br>為表單加上 disabled 屬性</p>



<p>僅能閱讀<br>為表單加上 readonly 屬性</p>



<p>僅能閱讀的文本<br>為 input 套用 readonly 及加上 .form-control-plaintext 樣式</p>



<p>檔案 input</p>



<p>顏色<br>為 input 加上 .form-control-color 樣式</p>



<p>資料清單<br>資料清單允許你創造一組可以在 input 內部被存取 (並自動補齊) 的&nbsp;<code>&lt;option&gt;</code>。它們跟&nbsp;<code>&lt;select&gt;</code>&nbsp;元素很相似，但是在樣式設定上具有更多限制與差異。雖然大部分的瀏覽器和作業系統都包含一些對於&nbsp;<code>&lt;datalist&gt;</code>&nbsp;元素的支持，但他們的樣式充其量是不一致的。<br>建立 datalist 結構 (包含 datalist 及option 元素)<br>datalist 補上 id，並與 input list 屬性進行對應</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/forms/form-control/" target="_blank" rel="noreferrer noopener">表單 &gt; 表單控制</a></li></ul>



<h3>表單 Select .form-select</h3>



<p>預設<br>為元素補上 .form-select</p>



<p>尺寸<br>為元素加上 .form-select-{ sm, lg } 調整尺寸</p>



<p>同時支持 multiple 屬性<br>為元素加上 multiple 使其可以多選<br>為元素加上 size 限制顯示尺寸</p>



<p>禁用<br>為元素加上 disabled 使其無法運作</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/forms/select/" target="_blank" rel="noreferrer noopener">表單 &gt; 選擇功能表</a></li></ul>



<h3>表單的 Radio 與 Checkbox 運用</h3>



<p>檢查<br>為元素分別加上 .form-check, .form-check-input, .form-check-label<br>注意，label 與 input id 請務必對應上</p>



<p>Indeterminate (狀態不確定)<br>啟用下方的 JavaScript 查看結果。</p>



<p>禁用<br>為以下元素加上 disabled</p>



<p>選項按鈕<br>使用 type=”radio” 看有何不同 (注意: name 屬性必須一致)</p>



<p>禁用<br>為以下元素加上 disabled</p>



<p>切換開關<br>為以下元素加上 .form-switch 套用視覺效果</p>



<p>行內<br>加上 .form-check-inline 使其轉換成單行</p>



<p>沒有標籤</p>



<p>切換按鈕<br>通過使用&nbsp;<code>.btn</code>&nbsp;而非&nbsp;<code>.form-check-label</code>&nbsp;樣式在&nbsp;元素上創建類似 button 的核取方塊和選項按鈕。<br>核取方塊切換按鈕<br>此方法並沒有套用 JavaScript，是使用純 CSS 所完成，套用條件:<br>必須加上 .btn-check<br>id 必須完全對應<br>input 與 label 元素必須相鄰</p>



<p>選項切換按鈕</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/forms/checks-radios/" target="_blank" rel="noreferrer noopener">表單 &gt; 核取方塊和選項按鈕</a></li></ul>



<h3>表單的 Range 樣式</h3>



<p>概觀<br>將以下的 input type 改為 range<br>為以下元素加上 .form-range</p>



<p>禁用<br>為以下元素加上 disabled</p>



<p>最小與最大<br>有隱含值&nbsp;<code>min</code>&nbsp;和&nbsp;<code>max, 0</code>&nbsp;和&nbsp;<code>100</code>&nbsp;的區別，可以為&nbsp;<code>min</code>&nbsp;和&nbsp;<code>max</code>&nbsp;屬性賦予新的值<br>為以下元素加上 min 及 max 屬性</p>



<p>間距數值 (steps)<br>預設的情況，範圍輸入會 “讀取” 整數值。可以使用 step 值來改變<br>為以下元素加上 step 屬性</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/forms/range/" target="_blank" rel="noreferrer noopener">表單 &gt; 範圍</a></li></ul>



<h3>群組式 input</h3>



<p>基本範例<br>透過 input-group, input-group-text, form-control 製作群組 input</p>



<p>Wrapping<br>加入 flex-nowrap 調整換行形式</p>



<p>尺寸<br>不支援調整 input 群組中單一元素的大小<br>使用 .input-group-{ sm, lg } 調整大小 (不支援各別元素調整)</p>



<p>核取方塊和選項按鈕<br>使用 input-group-text 搭配 form-check-input 製作選項按鈕</p>



<p>多個 input<br>驗證樣式僅適用於只有單個 &lt;input&gt; 的 input 群組。</p>



<p>多附加組件</p>



<p>按鈕附加元件<br>搭配 .btn 製作 input-group</p>



<p>帶下拉式選單的按鈕<br>搭配元件的 .dropdown-toggle 製作下拉式選單</p>



<p>分段按鈕<br>加入 .dropdown-toggle-split 製作分段按鈕</p>



<p>自訂表單<br>自定義選單樣式<br>搭配 .form-select 製作選單樣式<br>自定義檔案 input</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/forms/input-group/" target="_blank" rel="noreferrer noopener">表單 &gt; Input 群組</a></li></ul>



<h3>表單驗證技巧</h3>



<p>自定義樣式<br>為了自定義 Bootstrap 表單驗證訊息，您需要將布林屬性&nbsp;<code>novalidate</code>&nbsp;添加到&nbsp;<code>&lt;form&gt;</code>&nbsp;中。這將會禁用瀏覽器預設的回饋工具提示，不過 JavaScript 的表單驗證 API 依然有效。<br>如何啟用 JavaScript 驗證<br>表單加入 novalidate 屬性<br>表單加入 needs-validation className(名稱可自訂)<br>加入 valid-feedback, invalid-feedback 回應結果<br>加入 JavaScript 驗證片段程式碼</p>



<p>瀏覽器預設值<br>瀏覽器本身就存在著預設驗證功能，但這並不會調整任何樣式</p>



<p>伺服器端<br>伺服器端意味著手動加入回饋樣式，回饋樣式包含:<br>is-valid, is-invalid<br>valid-feedback, invalid-feedback</p>



<p>支持的元素<br><code>&lt;input&gt;</code>&nbsp;和帶有&nbsp;<code>.form-control</code>&nbsp;的&nbsp;<code>&lt;textarea&gt;</code>&nbsp;(在 input 群組中最多包含一個&nbsp;<code>.form-control</code>)<br>帶有&nbsp;<code>.form-select</code>&nbsp;的&nbsp;<code>&lt;select&gt;</code><br><code>.form-check</code><br><br>,was-validated 是一個狀態，代表已經驗證過 (但驗證狀態還是會依據用戶行為再次調整)</p>



<p>工具提示<br>加上 valid-tooltip, invalid-tooltip 加上工具提示的視覺效果</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/forms/validation/" target="_blank" rel="noreferrer noopener">表單 &gt; 驗證</a></li></ul>



<h3 class="has-background" style="background-color:#ff6663">新的表單樣式! form-floating</h3>



<p>範例<br>加入 .form-floating 製作浮動標籤</p>



<p>如果已經定義 value ，則&nbsp;<code>&lt;label&gt;</code>&nbsp;會自動調整為其浮動位置。<br>加入 value 屬性在以下 input</p>



<p>表單驗證樣式也可以按預期運作</p>



<p>文字欄位<br>預設情況下，帶有 .form-control 的&nbsp;<code>&lt;textarea&gt;</code>&nbsp;會跟&nbsp;<code>&lt;input&gt;</code>&nbsp;有相同的高度。<br>將以下改為 textarea 標籤</p>



<p>不要使用&nbsp;<code>rows</code>&nbsp;屬性來自定義&nbsp;<code>&lt;textarea&gt;</code>&nbsp;的高度，而是使用 height 屬性 (透過行內設定，或是自定義的 CSS)</p>



<p>選擇<br>為以下套用 .form-floating, form-select</p>



<p>排版<br>請確保將表單元素放在 column 類別裡面<br>將以下表單套用格線系統</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/forms/floating-labels/" target="_blank" rel="noreferrer noopener">表單 &gt; 浮動標籤</a></li></ul>



<h3>表單排版技巧</h3>



<p>通用類別<br>使用 mb-{ 1-5 } 調整表單間距</p>



<p>表單網格<br>使用格線系統排版表單</p>



<p>Gutters<br>調整表單之間的 gutter</p>



<p>可以使用網格 (Grid) 系統建立更複雜的排版。<br>使用格線系統，並加入 g-{ 1-5 } 完成複雜的排版</p>



<p>水平表單<br>透過將&nbsp;<code>.row</code>&nbsp;類別加入表單群組來建立使用網格系統的水平表單，並使用&nbsp;<code>.col-*-*</code>&nbsp;類別來指定標籤和表單控制 (Form controls) 的寬度。請確保有在&nbsp;<code>&lt;label&gt;</code>&nbsp;添加&nbsp;<code>.col-form-label</code>&nbsp;，使它們與相關的表單控制垂直置中。<br>在以下 label 加入 col-form-label 使其對齊</p>



<p>水平表單標籤尺寸<br>使用 col-form-label-{ sm, lg } 改變標籤尺寸</p>



<p>欄尺寸<br>使用不同 col-{ 中斷點 } 製作不同寬度 input</p>



<p>自動調整尺寸<br>使用 col-auto 符合 input 尺寸</p>



<p>你可以再次將其與有指定大小的 column 類別混合使用</p>



<p>行內表單<br>使用 .row-cols-* 類別來建立水平排版。<br>使用 .row-cols-lg-auto 來套用水平、垂直自動切換的排版形式</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/forms/layout/" target="_blank" rel="noreferrer noopener">表單 &gt; 排版</a></li></ul>



<h2 class="has-background" style="background-color:#ff6663">CH7 – Bootstrap 最實用的工具 – 元件</h2>



<h3>元件簡介</h3>



<h4>元件結構<br>結構與樣式分離</h4>



<figure class="wp-block-image size-full"><img loading="lazy" width="1536" height="664" src="/wordpress_blog/wp-content/uploads/2022/04/結構與樣式分離.png" alt="" class="wp-image-390"/><figcaption>結構與樣式分離</figcaption></figure>



<h4>元件組合規則</h4>



<p>元件模組大致包含以下規則</p>



<ul><li>模組 (button, modal, pagination)</li><li>主題 (theme colors, primary, danger…)</li><li>樣式 (size, style)</li><li>狀態 (active, disabled)</li></ul>



<figure class="wp-block-gallery has-nested-images columns-1 is-cropped">
<figure class="wp-block-image size-large"><img loading="lazy" width="1455" height="801" data-id="393"  src="/wordpress_blog/wp-content/uploads/2022/04/元件簡介01.png" alt="" class="wp-image-393"/><figcaption>元件簡介01</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1536" height="847" data-id="397"  src="/wordpress_blog/wp-content/uploads/2022/04/元件簡介02.png" alt="" class="wp-image-397"/><figcaption>元件簡介02</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1483" height="649" data-id="396"  src="/wordpress_blog/wp-content/uploads/2022/04/元件簡介03.png" alt="" class="wp-image-396"/><figcaption>元件簡介03</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1536" height="714" data-id="394"  src="/wordpress_blog/wp-content/uploads/2022/04/元件簡介04.png" alt="" class="wp-image-394"/><figcaption>元件簡介04</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1536" height="730" data-id="398"  src="/wordpress_blog/wp-content/uploads/2022/04/元件簡介05.png" alt="" class="wp-image-398"/><figcaption>元件簡介05</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1536" height="782" data-id="395"  src="/wordpress_blog/wp-content/uploads/2022/04/元件簡介06.png" alt="" class="wp-image-395"/><figcaption>元件簡介06</figcaption></figure>
</figure>



<h3>元件與 JavaScript 之間的關係</h3>



<p>關於 Data 屬性<br>在 Bootstrap 中，如果要透過 HTML 正確對應 JavaScript 互動方法，均需要使用 data-bs-* 來調用。</p>



<p>建構方式呼叫 Bootstrap JavaScript API</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/modal/" target="_blank" rel="noreferrer noopener">元件 &gt; 互動視窗</a></li></ul>



<h3>手風琴 (Accordion)</h3>



<p>範例<br>使用 Accordion 的摺疊效果<br>務必載入 Bootstrap JavaScript<br>外層元素必須要有 ID，內層的元素 data-bs-parent 必須對應外層（確保只會展開一個<br>被折疊的項目，必須有獨立的 ID 名稱，按鈕加入 data-bs-toggle=”collapse” 及 data-bs-target 對應此名稱</p>



<p>Flush<br>加上&nbsp;<code>.accordion-flush</code>&nbsp;來移除預設&nbsp;<code>background-color</code>、 外框和圓角使該手風琴能和父容器緊鄰。</p>



<p>Always open<br>移除內層 data-bs-parent 則可以將 accordion 的效果總是展開。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/accordion/" target="_blank" rel="noreferrer noopener">元件 &gt; 手風琴 (Accordion)</a></li></ul>



<h3>警報 (Alerts) ★</h3>



<p>範例<br>使用 alert 加上 alert- {情境色} 製作警告框</p>



<p>連結顏色<br>使用 alert-link 套用警告框內的連結色彩</p>



<p>額外的內容<br>alert 的樣式還包含了 .alert-heading、分隔線、段落等。</p>



<p>Icons<br>You can use&nbsp;<a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.0/utilities/flex/" target="_blank">flexbox utilities</a>&nbsp;and&nbsp;<a rel="noreferrer noopener" href="https://icons.getbootstrap.com/" target="_blank">Bootstrap Icons</a>&nbsp;to create alerts with icons.<br>使用 Flex 重新對齊以下內容<br>快速使用 Bootstrap Icon 在 Alert 內<br>載入 Bootstrap ICON CDN<br>加入 ICON，並使用 utilities 調整大小、間距</p>



<p>移除<br>加上一個關閉按鈕 並賦予&nbsp;<code>.alert-dismissible</code>&nbsp;類別，使警報的右上角新增額外的 padding 和關閉按鈕。<br>在關閉按鈕加上&nbsp;<code>data-bs-dismiss="alert"</code>&nbsp;屬性來觸發 JavaScript 函式。務必使用&nbsp;<code>&lt;button&gt;</code>&nbsp;元素，讓它可以跨裝置正常運行。<br>要以動態方式移除警報，可以使用&nbsp;<code>.fade</code>&nbsp;和&nbsp;<code>.show</code>&nbsp;類別。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/alerts/" target="_blank" rel="noreferrer noopener">元件 &gt; 警報 (Alerts)</a></li></ul>



<h3>標籤 (Badges) ★</h3>



<p>範例<br>標籤可以運用在標題上<br>標籤可以做為連結或按鈕的一部分</p>



<p>背景顏色<br>可以使用 bg-{情境色} 來調整 badge 的色彩，必要時可加入 text-dark 將文字改為深色。</p>



<p>膠囊標籤<br>使用&nbsp;<code>.rounded-pill</code>&nbsp;通用類別可以透過&nbsp;<code>border-radius</code>&nbsp;使標籤增加圓角。</p>



<p>定位技巧<br>使用通用類別，製作按鈕的額外提示效果。<br>外層加入: position-relative<br>內層: position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/badge/" target="_blank" rel="noreferrer noopener">元件 &gt; 標籤 (Badge)</a></li></ul>



<h3>麵包屑 (Breadcrumb) ★</h3>



<p>Example<br>加入麵包屑<br>外層 ol 加入 .breadcrumb<br>li 加入 .breadcrumb-item<br>當前頁面加入 .active</p>



<p>Dividers<br>透過&nbsp;<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/::before">::before</a>&nbsp;以及&nbsp;<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/content">content</a>&nbsp;而自動被加入在 CSS 中。可以透過修改本地 CSS 自定義屬性&nbsp;<code>--bs-breadcrumb-divider</code>&nbsp;或&nbsp;<code>$breadcrumb-divider</code>&nbsp;Sass 變數來改變<br>也可以使用<strong>嵌入式 SVG 圖示</strong>。通過我們的 CSS 自定義屬性，或是使用 Sass 變數來應用它。</p>



<ul><li><a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.1/components/breadcrumb/" target="_blank">元件 &gt; 麵包屑 (Breadcrumb</a><a href="https://bootstrap5.hexschool.com/docs/5.1/components/breadcrumb/" target="_blank" rel="noreferrer noopener">)</a></li></ul>



<h3>按鈕 (Buttons) ★★★</h3>



<p>Examples<br>按鈕結構包含 btn 加入 btn-{情境色}。</p>



<p>Button tags<br>按鈕可以運用在各種標籤上。</p>



<p>Outline buttons<br>可以使用 btn-outline-{情境色} 製作 outline 形式的按鈕。</p>



<p>Sizes<br>可以使用 btn-lg, btn-sm 製作大小類型的按鈕。</p>



<p>Disabled state<br>button 標籤的按鈕可以加入 disabled 的屬性禁用按鈕。<br>使用&nbsp;<code>&lt;a&gt;</code>&nbsp;元素的禁用其行為與其他按鈕略有不同：<br><code>&lt;a&gt;</code>&nbsp;不支援&nbsp;<code>disabled</code>&nbsp;屬性，所以你必須添加&nbsp;<code>.disabled</code>&nbsp;使它在視覺上看起來被禁用。<br>加入一些友善的樣式，以禁用游標上的所有&nbsp;<code>pointer-events</code>。<br>禁用按鈕應包含&nbsp;<code>aria-disabled="true"</code>&nbsp;屬性來向輔助性技術指示元素的狀態。<br>tabindex=”-1″</p>



<p>Block buttons<br>官方文件寫法 Display Grid（加入 d-grid gap-2）。<br>另一種寫法搭配使用 width: 100%。</p>



<p>以下為一個響應式的範例<br>行動版為滿寬，桌面版為單行。</p>



<p>可以使用網格系統的欄 (column) 類別來調整區塊級別按鈕的寬度（加入 col-6）。</p>



<p>Toggle states<br>加入&nbsp;<code>data-bs-toggle="button"</code>&nbsp;來切換按鈕的&nbsp;<code>active</code>&nbsp;狀態。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/buttons/" target="_blank" rel="noreferrer noopener">元件 &gt; 按鈕 (Buttons)</a></li></ul>



<h3>按鈕群組 (Button group) ★★</h3>



<p>Basic example<br>使用 btn-group 為多個按鈕加入群組。</p>



<p>Mixed styles<br>內層按鈕可以加上 btn-{情境色}。</p>



<p>Outlined styles<br>btn-outline-{情境色} 的外框按鈕一樣可以運用。</p>



<p>Checkbox and radio button groups<br>可以搭配 input, label 製作<br>checkbox 需加上 .btn-check<br>input 在前、label 在後<br>label for 與 input id 需要對應<br>之前在表單的核取方塊切換按鈕也有介紹過。</p>



<p>Button toolbar<br>btn-toolbar 可以包含多個 btn-group</p>



<p>將 input 群組與工具列中的按鈕群組進行混合<br>可以搭配 input-group 一起使用</p>



<p>Sizing<br>只需要在每個帶有&nbsp;<code>.btn-group</code>&nbsp;的元件加上&nbsp;<code>.btn-group-{lg, sm}</code>&nbsp;即可。</p>



<p>Nesting<br>當您想要下拉式功能表與按鈕群組混合時，只需要將&nbsp;<code>.btn-group</code>&nbsp;放在另一個&nbsp;<code>.btn-group</code>&nbsp;中即可。</p>



<p>Vertical variation<br>加入 .btn-group-vertical 將一組按鈕垂直堆疊而不是水平呈現。<strong>此處不支援分割下拉式功能表</strong>。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/button-group/" target="_blank" rel="noreferrer noopener">元件 &gt; 按鈕群組 (Button group)</a></li></ul>



<h3 class="has-background" style="background-color:#ff6663">卡片 (Cards) ★★★</h3>



<p>Example<br>加入以下 .card 套用卡片效果</p>



<p>Content types</p>



<p>Body<br>卡片的建構區塊為&nbsp;<code>.card-body</code>。當你需要在卡片填充內容的時候請使用它</p>



<p>Titles, text, and links<br>.card-title, .card-link, .card-subtitle</p>



<p>Images<br>.card-img-top, .card-text</p>



<p>List groups<br>使用&nbsp;<code>.list-group-flush</code>&nbsp;在卡片內建立列表群組</p>



<p>混合樣式<br>卡片可以搭配 list-group 製作不同組合</p>



<p>Header and footer<br>為以下範例加入 .card-header<br>卡片頁首的樣式可以透過在&nbsp;<code>&lt;h*&gt;</code>&nbsp;元素添加&nbsp;<code>.card-header</code>&nbsp;來調整<br>為以下範例加入 .card-header, .card-footer</p>



<p>Sizing<br>卡片預設沒有特定的起始&nbsp;<code>width</code>，除非另有聲明，否則它們的寬度將是 100％<br>搭配格線系統安排卡片排版</p>



<p>Using utilities<br>使用 utilities w-* 限制卡片寬度</p>



<p>Using custom CSS<br>直接使用 style 限制寬度也是沒問題的</p>



<p>Text alignment<br>使用 utilities 調整卡片內文字對齊</p>



<p>Navigation<br>搭配 nav-tabs 製作導覽列</p>



<p>Images<br>Image caps<br>使用 .card-img-top, card-img-bottom 將圖片符合卡片視覺效果。</p>



<p>Image overlays<br>使用 .card-img, card-img-overlay 將圖片置於背景。</p>



<p>Horizontal<br>使用格線系統，製作水平類型的排版效果。</p>



<p>Card styles<br>Background and color<br>使用 bg-{情境色} 製作不同顏色的卡片</p>



<p>Border<br>使用 border-{情境色} 製作不同邊框色彩的卡片</p>



<p>Mixins utilities</p>



<p>Card layout<br><strong>這些排版選項還不是響應式的</strong><br>Card groups<br>加入 .card-group 製作群組卡片<br>當在卡片群組使用 .card-footer，它們的內容將會自動對齊</p>



<p>網格卡片<br>使用行列式製作<br>行動版為單欄、桌面版為雙欄<br>如果需要相等高度時，把&nbsp;<code>.h-100</code>&nbsp;添加於卡片上。如果希望卡片預設就是等高，可以在 Sass 設置 $card-height: 100%。<br>卡片頁尾也會自動對齊</p>



<ul><li><a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.1/components/card/" target="_blank">元件 &gt; 卡片 (Card)</a></li></ul>



<h3>輪播 (Carousel)</h3>



<p>Example<br><strong>需要將&nbsp;<code>.active</code>&nbsp;添加到其中一個輪播元素上</strong>，否則輪播將不可見。另外一定要在&nbsp;<code>.carousel&nbsp;</code>上為控制項元件設置一個唯一的&nbsp;<code>id</code>，特別是當你在一個頁面上使用多個輪播的時候。控制項和指示器元素必須具有與&nbsp;<code>.carousel</code>&nbsp;元素之 id 符合的&nbsp;<code>data-bs-target</code>&nbsp;屬性（或是連結的&nbsp;<code>href</code>）。</p>



<p>Slides only<br>外層加上 data-bs-ride=”carousel”，並給予唯一的 ID<br>內層元素需要有一個 active</p>



<p>With controls<br>加入上一個與下一個控制項時，我們建議使用&nbsp;<code>&lt;button&gt;</code>&nbsp;元素，當然你也可以使用&nbsp;<code>&lt;a&gt;</code>&nbsp;來當作 button 使用，記得要替&nbsp;<code>&lt;a&gt;</code>&nbsp;元素加上&nbsp;<code>role="button"</code>。<br>打開以下註解使用控制器，注意：控制器上的 data-bs-target 需對應外層 ID。</p>



<p>With indicators<br>打開以下註解使用指引器，指引器的 data-bs-target 需對應外層 ID，並且 data-bs-slide-to 需對應特定的投影片索引（從 0 開始計算）。</p>



<p>With captions<br>在任意&nbsp;<code>.carousel-item</code>&nbsp;中使用&nbsp;<code>.carousel-caption</code>&nbsp;替幻燈片添加字幕。</p>



<p>Crossfade<br>將&nbsp;<code>.carousel-fade</code>&nbsp;加到輪播中，以使用淡入淡出的取代滑動的動畫效果。</p>



<p>Individual&nbsp;<code>.carousel-item</code>&nbsp;interval<br>在&nbsp;<code>.carousel-item</code>&nbsp;上添加&nbsp;<code>data-bs-interval=""</code>&nbsp;以更改自動循環至下一個項目的延遲時間。</p>



<p>Disable touch swiping<br>使用 data-bs-touch=”false” 禁止觸控事件。</p>



<p>Dark variant<br>在&nbsp;<code>.carousel</code>&nbsp;上添加&nbsp;<code>.carousel-dark</code>&nbsp;以獲得暗色系的控制項、指示器及字幕。控制項已透過 CSS 屬性&nbsp;<code>filter</code>&nbsp;從它們預設的白色充填反轉。字幕與控制項具有用來自定義&nbsp;<code>color</code>&nbsp;及&nbsp;<code>background-color</code>&nbsp;的額外 Sass 變數。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/carousel/" target="_blank" rel="noreferrer noopener">元件 &gt; 輪播 (Carousel)</a></li></ul>



<h3>關閉按鈕 (Close button) ★</h3>



<p>之前有提到是在元件 &gt; 警報 的移除的地方有提到、使用到。</p>



<p>Example<br>提供一個選項，透過&nbsp;<code>.btn-close</code>&nbsp;以關閉或解除元件。</p>



<p>Disabled state</p>



<p>White variant<br>透過&nbsp;<code>.btn-close-white</code>&nbsp;類別將預設的&nbsp;<code>.btn-close</code>&nbsp;改為白色。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/close-button/" target="_blank" rel="noreferrer noopener">元件 &gt; 關閉按鈕 (Close button)</a></li></ul>



<h3>摺疊 (Collapse) ★★</h3>



<p>像是一個功能。</p>



<p>Example<br>點擊以下按鈕，透過改變 Class 來顯示及隱藏另一個元素：<br>.collapse 隱藏內容。<br><code>.collapsing</code>&nbsp;會在轉換的過程中被套用。<br><code>.collapse.show</code>&nbsp;顯示內容。<br>基本使用方式：<br>按鈕加上 data-bs-toggle=”collapse”<br>加上 href 或 data-bs-target 來對應項目</p>



<p>Multiple targets<br>id 僅能用來對應單一元素，如果要對應複數元素則可以使用 className。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/collapse/" target="_blank" rel="noreferrer noopener">元件 &gt; 摺疊 (Collapse)</a></li></ul>



<h3>下拉選單 (Dropdowns) ★</h3>



<p>Examples<br>Single button<br>在&nbsp;<code>.dropdown</code>&nbsp;中包裝下拉選單的切換（你的按鈕或連結）和下拉式功能表，或者另外一個聲明&nbsp;<code>position：relative;</code>&nbsp;的元素。 可以從&nbsp;<code>&lt;a&gt;</code>&nbsp;或&nbsp;<code>&lt;button&gt;</code>&nbsp;元素裡觸發下拉選單。<br>按鈕外層加上 .dropdown、<br>按鈕加上 .dropdown-toggle、<br>下拉選單項目為 .dropdown-menu、<br>按鈕加上 data-bs-toggle=”dropdown”。<br>透過&nbsp;<code>&lt;a&gt;</code>：</p>



<p>尺寸<br>按鈕下拉選單可以使用所有尺寸的按鈕，包括預設及分割下拉按鈕(套用 btn-sm, btn-lg) 。</p>



<p>Split button<br>添加了&nbsp;<code>.dropdown-toggle-split</code>&nbsp;以在下拉插入符號做適當間隔。</p>



<p>Dark dropdowns<br>透過在目前現有的&nbsp;<code>.dropdown-menu</code>&nbsp;增加&nbsp;<code>.dropdown-menu-dark</code>&nbsp;屬性。</p>



<p>Directions<br>Dropup<br>可以加上 dropup, dropend, dropstart 改變方向性。</p>



<p>Menu items<br>可以選擇在下拉選單中使用&nbsp;<code>&lt;button&gt;</code>&nbsp;元素，而不是僅使用&nbsp;<code>&lt;a&gt;</code>。<br>可以使用&nbsp;<code>.dropdown-item-text</code>&nbsp;創建非交互式下拉選單。</p>



<p>Active</p>



<p>Disabled</p>



<p>Menu alignment<br>在預設的情況下，下拉選單會自動從父選單的頂部與左邊開始定位 100％。將因此若將&nbsp;<code>.dropdown-menu-end</code>&nbsp;加入至&nbsp;<code>.dropdown-menu</code>&nbsp;則會使下拉選單靠右對齊。</p>



<p>Responsive alignment<br>如果要使用響應式對齊，請增加&nbsp;<code>data-display="static"</code>&nbsp;屬性來禁用動態定位，並使用響應式變數類別。<br>如果要讓在特定斷點以上讓下拉選單靠&nbsp;<strong>右</strong>&nbsp;對齊，請加上&nbsp;<code>.dropdown-menu{-sm|-md|-lg|-xl}-end</code>。</p>



<p>各種對齊範例</p>



<p>Menu content<br>Headers<br>使用 .dropdown-header 為列表加入標頭。</p>



<p>Dividers<br>使用 hr 標籤搭配 .dropdown-divider 製作分隔線。</p>



<p>Text<br>可以搭配 Utilities 自行排版樣式。</p>



<p>Forms<br>表單範例</p>



<p>Dropdown options<br>使用&nbsp;<code>data-bs-offset</code>&nbsp;或&nbsp;<code>data-bs-reference</code>&nbsp;來改變下拉選單的位置。</p>



<p>自動關閉的方法</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/dropdowns/" target="_blank" rel="noreferrer noopener">元件 &gt; 下拉選單 (Dropdowns)</a></li></ul>



<h3>列表群組 (List group) ★</h3>



<p>Basic example<br>外層使用 list-group、<br>內層使用 list-group-item。</p>



<p>Active items<br>加上 .active 啟用視覺效果。</p>



<p>Disabled items<br>加上 disabled 禁用特定項目。</p>



<p>Links and buttons<br>使用&nbsp;<code>&lt;a&gt;</code>&nbsp;或&nbsp;<code>&lt;button&gt;</code>&nbsp;，並加入&nbsp;<code>.list-group-item-action</code>&nbsp;來創建具有 hover、禁用和啟用狀態的動態列表群組。<br><strong>確保不要在這裡使用標準的&nbsp;<code>.btn</code></strong><br>將以下結構改為 a 標籤。<br>對於&nbsp;<code>&lt;button&gt;</code>，你也可以使用 disabled 屬性而不是&nbsp;<code>.disabled</code>&nbsp;class。</p>



<p>Flush<br>使用 .list-group-flush 取消外框視覺效果。</p>



<p>Numbered<br>使用 ol 標籤搭配 .list-group-numbered 為項目加上數值。<br>運用範例。</p>



<p>Horizontal<br>使用 list-group-horizontal 及 list-group-horizontal-{中斷點} 將項目改為水平排列。</p>



<p>Contextual classes<br>使用 .list-group-item-{情境色} 製作不同底色的列表。<br>也可以使用&nbsp;<code>.list-group-item-action</code>。請注意，在前面的範例中不存在 hover 樣式。另外還有支持&nbsp;<code>.active</code>&nbsp;狀態，應用它來指示情境列表群組項目上的啟用狀態。</p>



<p>With badges<br>使用 flex 搭配 badge。</p>



<p>Custom content</p>



<p>Checkboxes and radios<br>可以在不使用&nbsp;<code>&lt;label&gt;</code>&nbsp;的情況下使用它們，但請記住要包含&nbsp;<code>aria-label</code>&nbsp;以及必要的內容。</p>



<p>將&nbsp;<code>&lt;label&gt;</code>&nbsp;作為&nbsp;<code>.list-group-item</code>&nbsp;使用以創造較大的點擊區域。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/list-group/" target="_blank" rel="noreferrer noopener">元件 &gt; 列表群組 (List group)</a></li></ul>



<h3>互動視窗 (Modal) ★★</h3>



<p>Examples<br>Modal 結構包含：<br>modal、<br>modal-dialog、<br>modal-content、<br>modal-header, modal-body, modal-footer, …modal-title。</p>



<p>Live demo<br>啟用 Modal 功能<br>按鈕加上 data-bs-toggle=”modal”、<br>使用 href 或 data-bs-target 對應 modal ID<br>使用 data-bs-dismiss=”modal” 關閉 Modal</p>



<p>Static backdrop<br>加入 data-bs-backdrop=”static”，互動視窗不會因為點擊背景而關閉。</p>



<p>較長內容的滾動狀態<br>可以透過在&nbsp;<code>.modal-dialog</code>&nbsp;中加入&nbsp;<code>.modal-dialog-scrollable</code>&nbsp;來創建一個 body 可滾動互動視窗。</p>



<p>Vertically centered<br>加入&nbsp;<code>.modal-dialog-centered</code>&nbsp;到&nbsp;<code>.modal-dialog</code>&nbsp;來使互動視窗垂直置中。</p>



<p>在兩個 Modal 中切換</p>



<p>Optional sizes<br>在 modal-dialog 加入 modal-{xl, lg, sm} 來改變 modal 尺寸。</p>



<p>Fullscreen Modal<br>使用 modal-fullscreen 製作滿版 modal，或使用 modal-fullscreen-{中斷點}-down 在特定寬度下運行。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/modal/" target="_blank" rel="noreferrer noopener">元件 &gt; 互動視窗 (Modal)</a></li></ul>



<h3>導覽與頁籤 (Navs and tabs)</h3>



<p>Base nav<br>結構說明：<br>ul 為 .nav、<br>li 為 .nav-item、<br>a 則是使用 .nav-link</p>



<p>如果項目的順序很重要，可以使用與&nbsp;<code>&lt;ul&gt;</code>&nbsp;類似的&nbsp;<code>&lt;ol&gt;</code>，或者使用&nbsp;<code>&lt;nav&gt;</code>&nbsp;元素。<br>也可以直接使用 a 標籤，則不需要使用 nav-item。</p>



<p>Available styles<br>Horizontal alignment<br>使用&nbsp;<code>.justify-content-center</code>&nbsp;置中對齊:<br>使用&nbsp;<code>.justify-content-end</code>&nbsp;靠右對齊:</p>



<p>Vertical<br>通過使用&nbsp;<code>.flex-column</code>&nbsp;通用類別更改 flex 的軸線方向以堆疊導覽。</p>



<p>Tabs<br>加入&nbsp;<code>.nav-tabs</code>&nbsp;以生成具有分頁標籤的介面。</p>



<p>Pills</p>



<p>Fill and justify<br>使用&nbsp;<code>.nav-fill</code>&nbsp;會將&nbsp;<code>.nav-item</code>&nbsp;內容按照比例分配空間。注意，這會佔用所有的水平空間，但並不是每個導覽項目都具有相同寬度。<br>使用&nbsp;<code>&lt;nav&gt;</code>&nbsp;導覽時，您可以忽略&nbsp;<code>.nav-item</code>，因為客製化&nbsp;<code>&lt;a&gt;</code>&nbsp;元素的樣式僅需要&nbsp;<code>.nav-link</code>。<br>創建等寬元素請使用&nbsp;<code>.nav-justified</code>。所有的水平空間將被導覽連結佔據，但與上面的&nbsp;<code>.nav-fill</code>&nbsp;不同，每個導覽項都將是相同的寬度。</p>



<p>Working with flex utilities<br>在下面的範例中，我們的導覽將在最小中斷點以下堆疊，並從 small 斷點開始採用水平排版以填滿所有可用寬度。<br>行動版垂直排列、桌面版水平排列。</p>



<p>Using dropdowns<br>Tabs with dropdowns<br>搭配下拉式結構一樣式沒有問題的，加入 data-bs-toggle=”dropdown” 在以下範例中。</p>



<p>Pills with dropdowns<br>各種樣式互相搭配都是沒有問題的。</p>



<p>JavaScript 頁籤<br>分頁外層為&nbsp;<code>tab-content</code>，內層為&nbsp;<code>tab-pane fade</code>，並且其中一個加入&nbsp;<code>show active</code>、<br>每個分頁需要有獨立的 id、<br>按鈕加上 data-bs-toggle=”tab”，並使用 data-bs-target 分別對應 id。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/navs-tabs/" target="_blank" rel="noreferrer noopener">元件 &gt; 導覽與頁籤 (Navs &amp; tabs)</a></li></ul>



<h3>導覽列 (Navbar) ★★</h3>



<p>結構說明：<br>外層<br>navbar 最外導覽列結構、<br>navbar-expand-{中斷點} 選單內容展開中斷點、<br>navbar-{dark, light}，亮暗色切換、<br>內層<br><code>.navbar-brand</code>&nbsp;用於您的公司，產品或專案名稱。<br><code>.navbar-nav</code>&nbsp;提供高度完整和輕便的導航（包括對下拉清單的支持）。<br><code>.navbar-toggler</code>&nbsp;用於我們的折疊插件和其他&nbsp;<a href="http://127.0.0.1:5500/components/navbar.html#responsive-behaviors">navigation toggling</a>&nbsp;行為。<br>Flex 與 spacing 通用類別，用於表單控制與行為。<br><code>.navbar-text</code>&nbsp;用於垂直居中的文本字串。<br><code>.collapse.navbar-collapse</code>&nbsp;透過父層斷點來群組、隱藏導覽列內容。<br>加入一個選填的屬性&nbsp;<code>.navbar-scroll</code>&nbsp;來設置&nbsp;<code>max-height</code>&nbsp;，然後&nbsp;<a href="http://127.0.0.1:5500/components/navbar.html#scrolling">滾動展開內容</a>.。</p>



<p>Brand<br><code>.navbar-brand</code>&nbsp;可以應用於大多數元素，但對錨點最有效，因為某些元素可能需要通用類別 Class 或自訂樣式。</p>



<p>Text<br>為以下程式碼加入 .navbar-brand</p>



<p>Image<br>可以將&nbsp;<code>.navbar-brand</code>&nbsp;中的文字替換為&nbsp;<code>&lt;img&gt;</code>。</p>



<p>Nav<br><strong>在導覽列中的導覽元件會盡可能的佔用水平空間</strong>，以保持您的導覽列內容安全對齊。<br>結構：<br>最外層：navbar-nav、<br>li：nav-item、<br>a：nav-link。<br>導覽有專屬的類別，依照需求你可以避免完全使用列表的方法，也可不使用 .nav-item。<br>在以下範例中加入 navbar-nav, nav-link。<br>還可以在導覽列的導覽元件使用下拉式選單。下拉式選單需要一個包裝元素進行定位，請確保為&nbsp;<code>.nav-item</code>&nbsp;和&nbsp;<code>.nav-link</code>&nbsp;使用單獨及巢狀的元素。<br>在以下結構中加入 data-bs-toggle=”dropdown”。</p>



<p>Forms<br><code>.navbar</code>&nbsp;中的直接子元素使用 flex 排版，預設為&nbsp;<code>justify-content: space-between</code>。 根據需要使用其他&nbsp;<a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.0/utilities/flex/" target="_blank">flex utilities</a>&nbsp;來調整此行為。<br>打開以下註解查看表單的位置。<br>input 群組也可以這樣使用。如果導覽列整個都是表單，或者大部分是表單，則可以使用&nbsp;<code>&lt;form&gt;&gt;</code>&nbsp;元素作為容器並保存 HTML。</p>



<p>Text<br>透過&nbsp;<code>.navbar-text</code>&nbsp;導覽列可以包含一些文本。</p>



<p>色彩方案<br>從&nbsp;<code>.navbar-light</code>&nbsp;選用淺色背景顏色，或者&nbsp;<code>.navbar-dark</code>&nbsp;用於深色背景顏色。 然後，使用&nbsp;<code>.bg-*</code>&nbsp;通用類別自訂。</p>



<p>Containers<br>可以把導覽列包裝在&nbsp;<code>.container</code>&nbsp;中，將其置中於頁面 – 請注意，內部的 container 還是必要的。或是你可以在&nbsp;<code>.navbar</code>&nbsp;中包裝一個 container。<br>使用任意響應式容器以更改導覽列中內容的顯示寬度。</p>



<p>Placement<br>固定的導覽列使用&nbsp;<code>position：fixed</code>，這意味著它們會脫離正常的 DOM 的文件流，並且可能需要自定義 CSS（例如&nbsp;<code>&lt;body&gt;&nbsp;</code>上的&nbsp;<code>padding-top</code>），以防止與其他元素重疊。<br>還要注意&nbsp;<code>.sticky-top</code>&nbsp;使用&nbsp;<code>position：sticky</code>，<a href="https://caniuse.com/css-sticky" target="_blank" rel="noreferrer noopener"><strong>並沒有被所有瀏覽器支持</strong></a>。</p>



<p>滾動效果<br>行動版選單可透過設置&nbsp;<code>--bs-scroll-height: 100px;</code>&nbsp;為行動版的下拉選單限制高度，並維持滾動的效果。</p>



<p>Responsive behaviors<br>可以使用&nbsp;<code>.navbar-toggler, .navbar-collapse</code>&nbsp;和&nbsp;<code>.navbar-expand{-sm|-md|-lg|-xl}</code>&nbsp;決定它們的內容何時會摺疊。<br>對於不需要折疊的導覽列，在導覽列中加入&nbsp;<code>.navbar-expand</code>。對於總是折疊的導覽列，不要加任何&nbsp;<code>.navbar-expand</code>&nbsp;class。</p>



<p>Toggler<br>在最小中斷點沒有&nbsp;<code>.navbar-brand</code>：<br>在以下程式碼中加入 .navbar-expand-lg，.navbar-collapse 將會在 lg 以上尺寸展開。</p>



<p>External content<br>可以使用 data-bs-target 展開 navbar 上方的額外內容。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/navbar/" target="_blank" rel="noreferrer noopener">元件 &gt; 導覽列 (Navbar)</a></li></ul>



<h3>Offcanvas – 側欄滑動導覽 ★</h3>



<p>Examples<br>Offcanvas components<br>offcanvas 是從畫面側邊出現的元件，透過 JS 來切換期顯示與否。<br>外層包含 offcanvas, offcanvas-start，start, end, top, bottom 決定顯示方向、<br>必須給予一個特定 id、<br>內層包含 offcanvas-header, offcanvas-body, offcanvas-title 等樣式。</p>



<p>Live demo<br>為按鈕加上 data-bs-toggle=”offcanvas”、<br>使用 href 或 data-bs-target 指向 offcanvas id。</p>



<p>Placement<br>試著加入 offcanvas-top, offcanvas-bottom, offcanvas-end 查看其方向性。</p>



<p>Backdrop<br>可以使用 data-bs-scroll=”true” 在 offcanvas 開啟時維持背景滾動，使用 data-bs-backdrop=”false” 關閉覆蓋的背景色。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/offcanvas/" target="_blank" rel="noreferrer noopener">元件 &gt; Offcanvas (畫布)</a></li></ul>



<h3>分頁 (Pagination) ★</h3>



<p>Overview<br>在外層使用&nbsp;<code>&lt;nav&gt;</code>&nbsp;元素讓螢幕閱讀器和其他輔助技術用來識別為導航區塊。<br>分頁結構<br>外層 nav 標籤<br>ul 使用 .pagination<br>li 使用 .page-item<br>a 使用 .page-link</p>



<p>Disabled and active states<br>使用&nbsp;<code>.disabled</code>&nbsp;來顯示禁用狀態、&nbsp;<code>.active</code>&nbsp;顯示當前頁數。<br>您可以選擇將 active 或 disabled 的錨點改為&nbsp;<code>&lt;span&gt;</code>，或是在上一個/下一個箭頭的情況下，省略連結以刪除點擊功能，在保留預期樣式的同時防止鍵盤 focus。</p>



<p>Sizing<br>使用 pagination-lg, pagination-sm 改變大小。</p>



<p>Alignment<br>使用 Utilities 進行對分頁對齊（置中、置右）。</p>



<ul><li><a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.1/components/pagination/" target="_blank">元件 &gt; 分頁 (Pagination)</a></li></ul>



<h3>佔位符 (Placeholders)</h3>



<p>應該是 v5.1 新功能。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/placeholders/" target="_blank" rel="noreferrer noopener">元件 &gt; 佔位符 (Placeholders)</a></li></ul>



<h3>彈出提示框 (Popovers)</h3>



<p>Example<br>注意：Popovers 預設是不會啟用的！<br>使用 Popover 在專案中：<br>元素加入：data-bs-toggle=”popover”、<br>title 屬性加入標題、<br>data-bs-content=”…” 加入內文、<br>加入相關 JavaScript（請放在 HTML 文件最後)。</p>



<p>Four directions<br>使用 data-bs-placement 加入 top, right, bottom, left 改變呈現的方向。</p>



<p>Dismiss on next click<br>點擊外部隱藏 Popover 可以加入 data-bs-trigger=”focus”，注意：在此請使用 a 標籤搭配 tabindex=”0″。</p>



<p>Disabled elements<br>對於禁用的彈出提示框觸發，您可能傾向使用&nbsp;<code>data-bs-trigger="hover focus"</code>&nbsp;來直接為用戶提供視覺回饋，因為用戶預期不會去&nbsp;<em>點擊</em>&nbsp;禁用的元素。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/popovers/" target="_blank" rel="noreferrer noopener">元件 &gt; 彈出提示框 (Popovers)</a></li></ul>



<h3>進度條 (Progress) ★</h3>



<p>How it works<br>外層使用 .progress 定義結構、<br>我們在內層使用 .progress-bar 來指定進度條目前的值。<br>為以下的 .progress-bar 加上寬度。</p>



<p>Labels<br>在&nbsp;<code>.progress-bar</code>&nbsp;中放置文字內容。</p>



<p>Height<br>為以下 progress 設置高度。</p>



<p>Backgrounds<br>使用背景色 Utilities 套用不同背景色。</p>



<p>Multiple bars<br>一個 .progress 內也可有多個 .progress-bar 已呈現堆疊的效果。</p>



<p>Striped<br>加入 .progress-bar-striped 至以下範例中以呈現條紋的視覺效果。</p>



<p>Animated stripes<br>條紋漸變也可以製成動畫。 將&nbsp;<code>.progress-bar-animated</code>&nbsp;加到&nbsp;<code>.progress-bar</code>&nbsp;中。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/progress/" target="_blank" rel="noreferrer noopener">元件 &gt; 進度條 (Progress)</a></li></ul>



<h3>滾動監控 (Scrollspy)</h3>



<p>How it works<br>必須使用在 Bootstrap&nbsp;<a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.0/components/navs-tabs/" target="_blank">導覽元件 nav</a>&nbsp;或&nbsp;<a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.0/components/list-group/" target="_blank">列表群組 list group</a>.、<br>滾動監控需要在被監控的元素上設定&nbsp;<code>position: relative;</code>，通常是&nbsp;<code>&lt;body&gt;</code>.、<br>錨點 (<code>&lt;a&gt;</code>) 是必要的，且必須指向到該元素的 id.。</p>



<p>Example in navbar<br>被監控的結構需加上&nbsp;<code>position-relative</code>、<br>被監控的元素加上&nbsp;<code>data-bs-spy="scroll" data-bs-offset="0"</code>，並使用 data-bs-target 指向列表 id。<br>將&nbsp;<code>data-bs-spy="scroll" data-bs-target="#navbar-example2"</code>&nbsp;加入程式碼套用 scrollspy 的效果。</p>



<p>Example with nested nav<br>滾動監控也適用於巢狀的&nbsp;<code>.nav</code>。如果巢狀&nbsp;<code>.nav</code>&nbsp;是&nbsp;<code>.active</code>, 它的父層也會是&nbsp;<code>.active</code>&nbsp;狀態。</p>



<p>Example with list-group</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/scrollspy/" target="_blank" rel="noreferrer noopener">元件 &gt; 滾動監控 (Scrollspy)</a></li></ul>



<h3>讀取圖示 (Spinners) ★★</h3>



<p>Border spinner<br>使用 spinner-border 套用旋轉的讀取效果。</p>



<p>Colors<br>使用 text-{情境色} 來套用顏色。<br>原理：顏色是使用 CSS 變數中的 currentColor 來套用文字色彩。</p>



<p>Growing spinner<br>使用 spinner-grow 放大的讀取效果。<br>使用 text-{情境色} 來套用顏色。</p>



<p>Alignment<br>Margin<br>Placement<br>Flex<br>水平置中<br>垂直置中<br>Text align</p>



<p>Size<br>增加&nbsp;<code>.spinner-border-sm</code>&nbsp;和&nbsp;<code>.spinner-grow-sm</code>&nbsp;製作一個較小的讀取圖示。<br>使用自定義 CSS 或 inline 來根據需要更改尺寸，為以下元素加入 style=”width: 3rem; height: 3rem;” 的程式碼。</p>



<p>Buttons<br>在按鈕中加入讀取的視覺效果。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/spinners/" target="_blank" rel="noreferrer noopener">元件 &gt; 讀取圖示 (Spinners)</a></li></ul>



<h3>吐司 (Toasts) ★★</h3>



<p>Overview<br>出於效能原因吐司是選擇性加入的，所以<strong>您必須自己將它們初始化</strong>。</p>



<p>Examples<br>Basic<br>Toast 結構：<br>外層包含 .toast<br>內層包含 .toast-header, .toast-body<br>可使用 data-bs-dismiss=”toast” 關閉吐司元件</p>



<p>Live<br>實際展示，Toast 需要使用 JavaScript 手動將它開啟，請打開後方 JS 的註解。</p>



<p>Translucent<br>吐司包含半透明的結構。</p>



<p>Stacking<br>透過將吐司包裝於&nbsp;<code>.toast-container</code>&nbsp;來推疊。<br>也可以在吐司添加額外的控制項與元件。</p>



<p>Color schemes<br>一樣可以透過 Utilities 來客製化各種的樣式及色彩。</p>



<p>Placement<br>使用 Utilities 重新調整 Toast 的定位。<br>對於會推播更多通知的系統，請考慮使用包裝元素的方式，讓它們可以堆疊顯示。<br>還可以使用 flexbox 通用類別來對吐司做水平 和/或 垂直的對齊。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/toasts/" target="_blank" rel="noreferrer noopener">元件 &gt; 吐司 (Toasts)</a></li></ul>



<h3>工具提示框 (Tooltips) ★</h3>



<p>Examples<br>在預設情況下，Tooltip 並不會啟用，啟用方式：<br>元素中加入，data-bs-toggle=”tooltip”、<br>加入 title 內容、<br>開啟後方的 JavaScript。<br>使用 data-bs-placement={ top, right, bottom, left } 來改變 tooltip 的呈現方向。<br>加入自定義 HTML:<br>加入 data-bs-html=”true”、<br>title 內使用 html 結構。<br>禁用的元素<br>禁用的元素是無法被 hover、focus 的，如果要解決可以：<br>加入&nbsp;<code>data-bs-toggle="tooltip" title="Disabled tooltip"</code>、<br>補上&nbsp;<code>tabindex="0"</code>。</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/tooltips/" target="_blank" rel="noreferrer noopener">元件 &gt; 工具提示框 (Tooltips)</a></li></ul>



<h2>CH8 – JavaScript 操作</h2>



<h3>Bootstrap JS 操作簡介</h3>



<p>使用 data-bs 套用方法<br>請至少要載入 CDN 才能使用此方法</p>



<p>使用 JS 套用方法<br>CDN 中的 bootstrap 可單獨啟用此方法</p>



<p>搭配 Webpack 運作<br>在 Webpack 中，所有的 JS 都建議使用模組的方式引入，此方法較為進階，建議有 ESM 相關知識後再行學習即可。</p>



<ul><li><a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.1/components/modal/#methods" target="_blank">元件 &gt; 互動視窗 (Modal) &gt; 方法</a></li><li><a href="https://bootstrap5.hexschool.com/docs/5.0/getting-started/webpack/#installing-bootstrap" target="_blank" rel="noreferrer noopener">快速開始 &gt; Webpack</a></li></ul>



<h3 class="has-background" style="background-color:#ff6663">JavaScript 初始化行為</h3>



<p>使用建構函式調用 Bootstrap 方法</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/collapse/#methods" target="_blank" rel="noreferrer noopener">元件 &gt; 摺疊 (Collapse) &gt; 透過 JavaScript &gt; 方法</a></li></ul>



<h3 class="has-background" style="background-color:#ff6663">選項、方法以及事件</h3>



<p>options：建立實體時所傳入的參數<br>methods：實體建立以後可以調用的方法<br>events：實體方法觸發時的監聽事件</p>



<ul><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/modal/#via-javascript" target="_blank" rel="noreferrer noopener">元件 &gt; 互動視窗 (Modal) &gt; 透過 JavaScript</a></li></ul>



<h3>萬年不敗 jQuery</h3>



<p>十年不敗 jQuery</p>



<ul><li><a rel="noreferrer noopener" href="https://bootstrap5.hexschool.com/docs/5.1/components/toasts/#usage" target="_blank">元件 &gt; 吐司 (Toasts) &gt; Usage</a></li><li><a href="https://bootstrap5.hexschool.com/docs/5.1/components/tooltips/#example-enable-tooltips-everywhere" target="_blank" rel="noreferrer noopener">元件 &gt; 工具提示框 (Tooltips) &gt; 範例：在任何地方啟用工具提示</a></li></ul>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Vue 出一個電商網站 (4)</title>
		<link>/wordpress_blog/vue-hexschool-4/</link>
		
		<dc:creator><![CDATA[gee.hsu]]></dc:creator>
		<pubDate>Mon, 28 Mar 2022 01:06:00 +0000</pubDate>
				<category><![CDATA[六角學院]]></category>
		<guid isPermaLink="false">/wordpress_blog/?p=581</guid>

					<description><![CDATA[第１１節：Vue&#160;出一個電商網站 (下) GitHub [&#8230;]]]></description>
										<content:encoded><![CDATA[
<h2>第１１節：Vue&nbsp;出一個電商網站 (下)</h2>



<h5>GitHub –&nbsp;<a href="https://github.com/GeeHsu/vue-dashboard-record" target="_blank" rel="noreferrer noopener">vue-dashboard-record</a></h5>



<h3>Dashboard&nbsp;新增模擬購物頁面&nbsp;–&nbsp;新增卡片式產品列表</h3>



<p>操作與講解</p>



<ol><li>接下來我們要來做模擬訂單的部分，不過在模擬訂單之前，我們先補一下這個登出的功能，那我們就直接打開 Navbar.vue 這個頁面，所以我們在製作登出的時候，它每個元件都可以獨立的運作。不過這登出難度並不會很高，所以這邊我們就不重頭講解，我們直接把現成的程式碼先貼進來之後，在講解說這段程式碼做了哪些事情，那上面這段是 Navbar 的元件，一樣是 const vm = this，const url 這段是 API 登出的路徑，在往下這裡確定登出之後就會把頁面轉回 /signin 的地方，(上面登出的連結補上 @click.prevent=”signout”)，那我們存檔來試一次看看。完成 Sign out 之後我們一樣可以測試先前的一些行為，像是我們在網址的地方直接輸入 admin/orders 能不能直接進去那個頁面，按下去是沒有任何的反應，當然你也可以透過 Console 來看一下它到底有沒有跳轉這個頁面、admin/orders，當然它是沒有跳轉頁面。</li><li>我們先來看一下模擬訂單的畫面，模擬訂單的畫面首先我們要先把上面這個列表先把它完成，完成之後我們下一個章節再來介紹怎麼取得單一筆的資料以及加入購物車的部分。</li><li>那麼這一段我們操作就會比較快一點，相關的行為跟先前都差不多，那一樣新增一個元件 pages/CustomerOrders.vue，這一段會提供現成的卡片的 Template 讓我們可以直接套用。這段我們就先把這個元件建起來。</li><li>接下來我們把新增的頁面加到 Vue Router 裡面來 import CustomerOrders from ‘@/components/pages/CustomerOrders’。import 進來之後我們要在下方新增相對應的路徑，我們可以先複製先前所建立好的 admin 路由，然後在往下建立一個相同的，但是這一段要不太一樣，我們在製作這一段的時候它不用掛在 admin 的頁面下面，我們可以用相同的模板但是我們不需要掛在 admin 下面，然後它的 component 是 CustomerOrder。但是它不需要經過驗證就可以使用，所以等一下可以直接透過這個路徑直接傳進來，路徑也要稍微調整一下、然後 name 也改一下。</li><li>接下來我們把這個路徑直接放到 Sidebar.vue 上面，to=”/customer_order”、然後存檔。接下來我們直接在登入的地方如果輸入 /customer_order 就可以直接進入這個頁面，但是如果在此我們想要進入其他路徑就會被登出。</li><li>我們在 CustomerOrders.vue 頁面下我們直接貼上現成的程式碼，因為這一段的流程跟先前非常接近，所以我們就不重頭寫一次給大家看。我們直接講解一下這裡做了哪些事情，和先前一樣我們先定義一個 products，並且加入用戶端取得資料的路徑。那麼用戶端取得資料的路徑我們要選擇的是<a rel="noreferrer noopener" href="https://github.com/hexschool/vue-course-api-wiki/wiki/%E5%AE%A2%E6%88%B6%E8%B3%BC%E7%89%A9-%5B%E5%85%8D%E9%A9%97%E8%AD%89%5D" target="_blank">客戶購物 [免驗證]</a>&nbsp;這一個、取得商品列表這一段，<strong>並不是用 admin 的那一段這裡要特別注意</strong>，然後一樣可以加入讀取的效果，然後取得資料之後將資料存到 products，然後接下來我們就可以把 products 的資料陳列在這上面。</li><li>那麼我們剛有使用讀取的效果，那讀取的效果也做好了。接下來我們要把卡片的資料內容補上，這裡可以使用 .row.mt-4 這是與上方有一些間距，那這個 row 是 Bootstrap 4 做格線用的，因為這個卡片是有運用道格線的技巧，接下來我們在把卡片整個貼進來，然後這裡使用 v-for=”item in products”，然後在補上一個 :key=”item.id”、我們來存檔一次。</li><li>我們回到畫面上重新整理，現在就可以看到這裡就有一張一張的卡片，我們只要將這些資料一個一個綁定上來就可以，現在我們將這些資料全部替換上來。上方有一張產品的圖片我們先把它加進來，可以使用 :style 等於裡面一樣是個物件，<strong>不過這裡要特別注意</strong>，background的時候後面的Image I 要大寫 Image (backgroundImage)，可以用 ES6 的反引號來製作這一段的連結 url，接下來我們要用$配合大括號，這是 ES6 反引號裡面插入變數的方法，然後使用 item.imageUrl，這是我們先前插入連結的方式，我們再重新整理看一下圖片有沒有進來。接下來下方有分類、以及標題、還有內容，相關內容我們就可以一一的補上。(備註：前者顯示僅有原價的、後者顯示僅有原價 + 優惠價。)，現在這個卡片列表已經完成了。</li><li>這段就先製作登出、以及模擬訂單的產品列表這一段。完成之後我們再繼續來製作加到購物車的部分。</li></ol>



<pre class="wp-block-code"><code>// 1. Navbar.vue
    &lt;ul class="navbar-nav px-3"&gt;
      &lt;li class="nav-item text-nowrap"&gt;
        &lt;a class="nav-link" href="#" @click.prevent="signout"&gt;Sign out&lt;/a&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

&lt;script&gt;
export default {
  name: 'Navbar',
  data () {
    return {
      msg: 'Welcome to Your Vue.js App'
    }
  },
  methods: {
    signout() {
      const api = `${process.env.APIPATH}/logout`;
      const vm = this;
      this.$http.post(api).then((response) =&gt; {
        // console.log(response.data);
        if (response.data.success) {
          // vm.$router.push('/login');
          vm.$router.push('/signin');
        }
      });
    }
  }
}
&lt;/script&gt;</code></pre>



<pre class="wp-block-code"><code>// 4. router/index.js
// 把CustomerOrder給載進來
import CustomerOrder from '@/components/pages/CustomerOrders'

    // 客戶購物的路徑(使用與Dashboard相同的模板)
    {
      path: '/',
      name: 'Dashboard',
      component: Dashboard,
      children: &#91;
        // CustomerOrder的路徑
        {
          path: 'customer_order',
          name: 'CustomerOrder',
          component: CustomerOrder,
        },
      ],
    },</code></pre>



<pre class="wp-block-code"><code>// 5. Sidebar.vue
      &lt;ul class="nav flex-column mb-2"&gt;
        &lt;li class="nav-item"&gt;
          &lt;router-link  class="nav-link" to="/customer_order"&gt;
            &lt;i class="fas fa-shopping-cart"&gt;&lt;/i&gt;
            模擬訂單
          &lt;/router-link&gt;
        &lt;/li&gt;
      &lt;/ul&gt;</code></pre>



<pre class="wp-block-code"><code>// 6~8.  CustomerOrders.vue
&lt;template&gt;
  &lt;div&gt;
    &lt;loading :active.sync="isLoading"&gt;&lt;/loading&gt;
    &lt;div class="row mt-4"&gt;
      &lt;div class="col-md-4 mb-4" v-for="item in products" :key="item.id"&gt;
        &lt;div class="card border-0 shadow-sm"&gt;
          &lt;div style="height: 150px; background-size: cover; background-position: center"
            :style="{backgroundImage: `url(${item.imageUrl})`}"&gt;
          &lt;/div&gt;
          &lt;div class="card-body"&gt;
            &lt;span class="badge badge-secondary float-right ml-2"&gt;{{ item.category }}&lt;/span&gt;
            &lt;h5 class="card-title"&gt;
              &lt;a href="#" class="text-dark"&gt;{{ item.title }}&lt;/a&gt;
            &lt;/h5&gt;
            &lt;p class="card-text"&gt;{{ item.content }}&lt;/p&gt;
            &lt;div class="d-flex justify-content-between align-items-baseline"&gt;
              &lt;div class="h5" v-if="!item.price"&gt;{{ item.origin_price }}&lt;/div&gt;
              &lt;del class="h6" v-if="item.price"&gt;{{ item.origin_price }}&lt;/del&gt;
              &lt;div class="h5" v-if="item.price"&gt;{{ item.price }}&lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="card-footer d-flex"&gt;
            &lt;button type="button" class="btn btn-outline-secondary btn-sm"&gt;
              &lt;i class="fas fa-spinner fa-spin"&gt;&lt;/i&gt;
              查看更多
            &lt;/button&gt;
            &lt;button type="button" class="btn btn-outline-danger btn-sm ml-auto"&gt;
              &lt;i class="fas fa-spinner fa-spin"&gt;&lt;/i&gt;
              加到購物車
            &lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  data() {
    return {
      products: &#91;],
      isLoading: false,
    };
  },
  methods: {
    getProducts() {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/products`;
      vm.isLoading = true;
      this.$http.get(url).then((response) =&gt; {
        vm.products = response.data.products;
        console.log(response);
        vm.isLoading = false;
      });
    },
  },
  created() {
    this.getProducts();
  },
};
&lt;/script&gt;</code></pre>



<h3>取得單一產品</h3>



<p>操作與講解</p>



<ol><li>做出彈出 Modal 的效果，像這樣子點起來之後它就會將這個 Modal 彈開，不過跟之前比較不一樣是它這個彈出 Modal 之前，它會取得資料之後再將 Modal 打開，然後在彈出 Modal 之後它還可以選購說它需要多少數量的產品。為什麼要這樣做，我們來看一下接下來可能會做到的作業，在作業的部分我們來看一下這個畫面，這裡面有非常多的產品，但是點擊這個搶購去的時候，它是到這個頁面再重新將資料取得一次。我們可以看一下上面的網址，上面是帶入 product/ 以及這個 product id，然後將這個產品的資料取出來，我們常常在呈現這個資料列表時它這裡所取得的資料並非完整的資料，如果要看詳細的資料會在重新取得單一筆的特定資料，所以在這裡要做的是我們點擊的時候才將完整的資料取出。</li><li>接下來我們來看一下取得單一筆資料的 API，這裡有一個單一商品細節，那單一商品的話我們取得跟先前差不多，不過這個 product 是沒有 s 的，我們在取得多筆資料的時候是有 s 的，那麼取得單筆是沒有 s 並且後面會帶上 id。</li><li>現在我們來製作取得單一筆資料的 Modal，我們要做的行為會放在查看更多的按鈕上，在這部分我們就可以在 methods 的部分先加上 getProduct 但是沒有 s、參數的話會帶上 id，然後先把大括號補上。接下來我們回到 &lt;html&gt; 的地方，我們將上面這個(&lt;button&gt;)查看更多補上 @click=”getProduct”，另外要帶上 id (@click=”getProduct(item.id)”)，那 id 的話在上面這裡有個 item，我們把 item 的 id 帶進來。接下來 id 之後，這段程式碼跟先前的差異不大，我們可以直接複製過來，複製過來之後將這個 s 去掉補上 id。</li><li>接下來我們就可以取得單一筆資料，然後我們取得單一筆資料會在 Modal 裡面顯示。Modal 的部分我們另外定義一個 product 的物件來存放 Modal 的資料，所以在這裡會有一個 vm.product = response.data.product;，不過在存放之前我們還是看一下這個結果是否正常。重新整理、打開 Console 來看一下，接下來點擊查看更多然後看一下這個資料內容，看起來是有正確的呈現，我們剛剛點擊的是 Vue 課程好棒棒，那麼我們把這個 product 打開之後這個 title 也是 Vue 課程好棒棒。</li><li>接下來我們把這個關掉之後回到 CustomerOrders.vue 的頁面上，這段是取得資料之後再將 Modal 打開，那 Modal 的話我們先前是使用 jQuery 的方式，在這裡也是用相同的方式，我們 import $ from ‘jquery’;，然後將 jquery 載進來。</li><li>載進來以後我們這個 Modal 就不完全重新製作了，裡面的內容跟先前都差異不大，所以我們這裡先複製已經製作好的部分，但是比較重要的地方我們在這裡還是會重新講解，像是這裡有許多的資料內容，像是這裡有 {{ product.title }}、content、description，這裡都是直接帶入的。</li><li>接下來我們要將 Modal 打開，那 Modal 打開的話我們就會把它放在 AJAX 結束之後將 Modal 打開，那這個 Modal 的名字叫做 #productModal，這個載入資料也要把它打開，所以我們在這個地方會先將資料讀取進來之後再將 Modal 打開，所以我們一打開 Modal 它基本上就會有資料，我們現在點擊查看更多，這個時候資料已經帶進來了。我們現在點擊查看更多，讀取之後這裡就會出現完整的資料。</li><li>不過在這部分我們要介紹一個比較不一樣的讀取方式，像是這裡已經有預設準備很多旋轉的讀取效果，那麼我們就要將這個全畫面的讀取效果替換成單一個的讀取效果，那我們在這個部分就可以再新增一個狀態叫做 status，在這個 status 內再新增一個值叫做 loadingItem。那這段是要判斷目前畫面上是哪一個元素正在讀取中，loadingItem 要存放的值就是產品的 id，所以在這裡我們可以把這個 isLoading 改成 status.loadingItem，然後這裡要替換的是 id。那當然讀取完之後我們要將值替換成空的，和先前一樣。接下來這個 loadingItem 我們要把它放到上面這個地方來，我們可以把剛剛的 loadingItem 帶上來 v-if 假設 status 的 loadingItem 與我們目前的 item.id 是相符合的時候，我們就會將這個讀取效果呈現出來。那我們也把這段複製過來，重新整理之後我們按下查看更多，這個時候會跳出一小段時間的讀取效果，然後在將這個畫面呈現出來。但是我們只有在點擊的那個物件上才會出現讀取效果、然後並且將相關的資料呈現出來。</li></ol>



<pre class="wp-block-code"><code>// 3~8. CustomerOrders.vue
&lt;template&gt;
  &lt;div&gt;
    &lt;loading :active.sync="isLoading"&gt;&lt;/loading&gt;
    &lt;div class="row mt-4"&gt;
      &lt;div class="col-md-4 mb-4" v-for="item in products" :key="item.id"&gt;
        &lt;div class="card border-0 shadow-sm"&gt;
          &lt;div style="height: 150px; background-size: cover; background-position: center"
            :style="{backgroundImage: `url(${item.imageUrl})`}"&gt;
          &lt;/div&gt;
          &lt;div class="card-body"&gt;
            &lt;span class="badge badge-secondary float-right ml-2"&gt;{{ item.category }}&lt;/span&gt;
            &lt;h5 class="card-title"&gt;
              &lt;a href="#" class="text-dark"&gt;{{ item.title }}&lt;/a&gt;
            &lt;/h5&gt;
            &lt;p class="card-text"&gt;{{ item.content }}&lt;/p&gt;
            &lt;div class="d-flex justify-content-between align-items-baseline"&gt;
              &lt;div class="h5" v-if="!item.price"&gt;{{ item.origin_price }}&lt;/div&gt;
              &lt;del class="h6" v-if="item.price"&gt;原價 {{ item.origin_price }} 元&lt;/del&gt;
              &lt;div class="h5" v-if="item.price"&gt;現在只要 {{ item.price }} 元&lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="card-footer d-flex"&gt;
            &lt;button type="button" class="btn btn-outline-secondary btn-sm"
              @click="getProduct(item.id)"&gt;
              &lt;i class="fas fa-spinner fa-spin" v-if="status.loadingItem === item.id"&gt;&lt;/i&gt;
              查看更多
            &lt;/button&gt;
            &lt;button type="button" class="btn btn-outline-danger btn-sm ml-auto"&gt;
              &lt;i class="fas fa-spinner fa-spin" v-if="status.loadingItem === item.id"&gt;&lt;/i&gt;
              加到購物車
            &lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;!-- Modal CustomerOrders --&gt;
    &lt;div class="modal fade" id="productModal" tabindex="-1" role="dialog"
      aria-labelledby="exampleModalLabel" aria-hidden="true"&gt;
      &lt;div class="modal-dialog" role="document"&gt;
        &lt;div class="modal-content"&gt;
          &lt;div class="modal-header"&gt;
            &lt;h5 class="modal-title" id="exampleModalLabel"&gt;{{ product.title }}&lt;/h5&gt;
            &lt;button type="button" class="close" data-dismiss="modal" aria-label="Close"&gt;
              &lt;span aria-hidden="true"&gt;&amp;times;&lt;/span&gt;
            &lt;/button&gt;
          &lt;/div&gt;
          &lt;div class="modal-body"&gt;
            &lt;img :src="product.imageUrl" class="img-fluid" alt=""&gt;
            &lt;blockquote class="blockquote mt-3"&gt;
              &lt;p class="mb-0"&gt;{{ product.content }}&lt;/p&gt;
              &lt;footer class="blockquote-footer text-right"&gt;{{ product.description }}&lt;/footer&gt;
            &lt;/blockquote&gt;
            &lt;div class="d-flex justify-content-between align-items-baseline"&gt;
              &lt;div class="h4" v-if="!product.price"&gt;{{ product.origin_price }} 元&lt;/div&gt;
              &lt;del class="h6" v-if="product.price"&gt;原價 {{ product.origin_price }} 元&lt;/del&gt;
              &lt;div class="h4" v-if="product.price"&gt;現在只要 {{ product.price }} 元&lt;/div&gt;
            &lt;/div&gt;
            &lt;select name="" class="form-control mt-3" v-model="product.num"&gt;
              &lt;option :value="num" v-for="num in 10" :key="num"&gt;
                選購 {{ num }} {{ product.unit }}
              &lt;/option&gt;
            &lt;/select&gt;
          &lt;/div&gt;
          &lt;div class="modal-footer"&gt;
            &lt;div class="text-muted text-nowrap mr-3"&gt;
              小計 &lt;strong&gt;{{ product.num * product.price }}&lt;/strong&gt; 元
            &lt;/div&gt;
            &lt;button type="button" class="btn btn-primary"&gt;
              &lt;!-- &lt;i class="fas fa-spinner fa-spin" v-if="product.id === status.loadingItem"&gt;&lt;/i&gt; --&gt;
              加到購物車
            &lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
import $ from 'jquery';

export default {
  data() {
    return {
      products: &#91;],
      product: {},
      status: {
        loadingItem: '',
      },
      isLoading: false,
    };
  },
  methods: {
    getProducts() {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/products`;
      vm.isLoading = true;
      this.$http.get(url).then((response) =&gt; {
        vm.products = response.data.products;
        console.log(response);
        vm.isLoading = false;
      });
    },
    // 取得單一產品
    getProduct(id) {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/product/${id}`;
      // vm.isLoading = true;
      vm.status.loadingItem = id;
      this.$http.get(url).then((response) =&gt; {
        vm.product = response.data.product;
        $('#productModal').modal('show');
        console.log(response);
        // vm.isLoading = false;
        vm.status.loadingItem = '';
        vm.product.num = 1; // 所有商品初始值設置為 1
      });
    },
  },
  created() {
    this.getProducts();
  },
};
&lt;/script&gt;</code></pre>



<h5>討論串：查看更多選購數量問題</h5>



<p>商品預設顯示數量和回傳資料的 num 有關，<br>可以看到 CustomerOrders.vue 頁面中有使用 v-model=”product.num”<br>因此要調整這個預設數量<br>有兩個辦法</p>



<ol><li>可以在 Products.vue 頁面中新增關於 num 資料的詳細設定，如下：</li><li>可以在 CustomerOrders.vue 頁面的 getProduct 函式中，新增 vm.product.num = 1</li></ol>



<pre class="wp-block-code"><code>// 1. Products.vue
&lt;div class="form-group col-md-4"&gt;
  &lt;label for="num"&gt;預設單位&lt;/label&gt;
  &lt;input type="number" class="form-control" id="num" placeholder="請輸入預設單位" v-model="tempProduct.num" /&gt;
&lt;/div&gt;

// 這樣可以對每個商品的預設數量做調整。</code></pre>



<pre class="wp-block-code"><code>// 2. CustomerOrders.vue
getProduct(id){
  ...
  this.axios.get(url).then((response) =&gt; {
    console.log(response.data)
    vm.product = response.data.product;
    $('#productModal').modal('show')
    vm.product.num = 1;//多加了這行
    vm.status.loadingItem = '';
  });

// 這樣所有商品初始值就會變成1了。</code></pre>



<h5>討論串：如何將login改為首頁</h5>



<ul><li>若要改網站連結的路徑都是在 router/index.js 裡面去修改</li><li>課程只是示範顯示首頁的元件為 Dashboard 來當首頁，並不代表網站首頁都一定是 Dashboard，可自己選擇要用哪個元件來當首頁</li><li>路徑(path)的值可以自己去設定</li><li>名稱(name)的值相同會產生黃色錯誤</li></ul>



<h5>排除錯誤：we can’t find&nbsp;<code>`tsconfig.json` or `jsconfig.json`</code></h5>



<p><a rel="noreferrer noopener" href="https://vuejs.github.io/vetur/guide/setup.html#advanced" target="_blank">Vetur – Setup/Advanced</a></p>



<h5>修正：Navbar.vue</h5>



<pre class="wp-block-code"><code>// Navbar.vue
&lt;template&gt;
  &lt;nav class="navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow"&gt;
    &lt;a class="navbar-brand col-md-3 col-lg-2 mr-0 px-3" href="#"&gt;Company name&lt;/a&gt;
    &lt;button class="navbar-toggler position-absolute d-md-none collapsed"
      type="button" data-toggle="collapse" data-target="#sidebarMenu"
      aria-controls="sidebarMenu" aria-expanded="false" aria-label="Toggle navigation"&gt;
      &lt;span class="navbar-toggler-icon"&gt;&lt;/span&gt;
    &lt;/button&gt;
    &lt;input class="form-control form-control-dark w-100"
      type="text" placeholder="Search" aria-label="Search" /&gt;
    &lt;ul class="navbar-nav px-3"&gt;
      &lt;li class="nav-item text-nowrap"&gt;
        &lt;a class="nav-link" href="#" @click.prevent="signout"&gt;Sign out&lt;/a&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/nav&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  name: 'Navbar',
  data () {
    return {
      msg: 'Welcome to Your Vue.js App'
    }
  },
  methods: {
    signout() {
      const api = `${process.env.APIPATH}/logout`;
      const vm = this;
      this.$http.post(api).then((response) =&gt; {
        // console.log(response.data);
        if (response.data.success) {
          vm.$router.push('/login');
          // vm.$router.push('/signin');
        }
      });
    }
  }
}
&lt;/script&gt;</code></pre>



<h3>選購產品及加入購物車</h3>



<p>操作與講解</p>



<ol><li>這段要來介紹加入購物車，在加入購物車之前我們先來看一下這一段的操作行為，在這個畫面上我們按查看更多，裡面就可以加到購物車，不過加入購物車之前，這裡可以選擇數量，像是這裡我們選擇2的話，在按加入購物車，那下面這個購物車列表就會跳出我們加入了2堂。另外一個就是我們直接點選加入購物車，直接點選的話，我們就會加入1堂的數量，所以我們在這邊行為會有兩種。一種是可以選擇數量、另外一種是直接將單一筆加進去。</li><li>那我們來看 API(文件)的部分，在 API 的部分加入購物車這裡會傳入參數，參數的地方第一個是傳入產品的 id、第二個是傳入(產品的)數量，<strong>所以在這裡要特別注意，我們在傳入的時候基本上不會傳入產品的價格，用戶可以傳入產品的價格的話，用戶就可能可以篡改整個購物車最終所結帳的金額。</strong>所以這裡要特別注意，通常我們只會上傳 id，那金額的計算是由後端來決定的。</li><li>那我們來看一下購物車的列表，在購物車列表的地方這裡有一個 carts，那 carts 它裡面是個陣列，所以這裡面會有很多個產品，那產品的話它就會回傳它相關的價格、以及它產品的內容。<strong>還有這裡要特別注意，除了產品的列表之外，然後價格會有兩個，一個是它的原始價格、以及最終的價格，那這個最終價格會受到優惠券的影響，當然這也是一般電商在設計平台裡面最複雜的地方，因為價格的計算邏輯非常多種</strong>，但在課程中會用比較簡單的方式呈現給大家看。</li><li>接下來我們在回到 API 上面這一段，現在我們回到購物車這個地方，我們在來回顧一下參數的部分，參數的部分我們要傳入的是一個產品的 id、以及數量，那我們現在來開始撰寫 JavaScript 的部分。</li><li>我們一樣到 (CustomerOrders.vue) methods 這個地方，然後我們用 addtoCart()，然後這裡會傳入兩個參數，一個就是 id，product 的 id、以及它的數量 qty，這個數量它是基本上一定要傳入數量，傳入數量的話基本上最少就是1，所以這裡可以用 ES6 一個方法，叫做預設值。這裡如果使用 qty = 1的話，代表函式傳進來的時候，如果沒有帶入 qty，它會使用預設值1的方式。</li><li>接下來我們先把另外一個函式(getProduct(id))打開，因為執行的內容差不多，我們就先把另外一段給貼過來，貼過來之後我們把這邊的 API 的路徑稍微做一下調整，加入購物車是使用 cart，這裡一樣會有讀取，然後行為會改成 post，接下來我們要把資料結構定義起來，我們會使用 const cart 等於一個物件，那物件會傳入兩個參數，一個是 product_id，那 product_id 就是 id，那另外一個是 qty，那 qty 在這裡不用這樣子寫，我們可以只寫一個 qty 的變數，那這個的話就會直接將這 qty 以及它的值自動帶進來。接下來在把這個 cart 放到這個後方，然後我們在傳入的時候，要記得資料結構，它的資料結構是 data 裡面在包著購物車的內容，那麼我們把多餘的方法把它移除。</li><li>然後接下來我們把這個 addtoCart 加到 &lt;html&gt; 的部分來，在上面這個卡片的部分，這個加到購物車就可以把 @click=”addtoCart()” 帶進來，然後我們要帶進的參數是 item 的 id、以及數量，那數量的話我們可以不用帶，它的預設值就是1，加進來之後我們重新整理一下，看一下能不能順利的加入購物車。現在我們按一下這個加到購物車，按下去之後這裡有回傳一些訊息，這裡回傳訊息說 true、已經成功加入購物車了。</li><li>接下來我們要介紹一下 Modal 的部分，那 Modal 的部分我們這裡可以選擇數量，那麼數量的話我們先暫存在 product.num 裡面來，那這個 product 就是我們點下查看更多取回來的那個 product 資料，那我們就會把 num、就是數量的資訊先存在 product 這個物件裡面來。現在目前如果按下這個下拉選單，它只會跳出選購一件，因為我們是寫死這個數值，如果說我們要讓它可以選擇多筆的數量該怎麼做，我們在這裡可以使用 v-for 等於 num in 固定的數量，比如說我們可以直接輸入10，那接下來這個 num 就是從1~10，後面要記得帶上 :key 等於 num。value 的部分我們就可以把 num 帶上來，就是數量、選擇的數量，不過記得把這個 value 改成動態屬性。接下來我們在把相關的文字帶上去，選購幾件，後面這個件我們一樣可以把它改成 product 的 unit，那這樣子的話就會變成選購多少數量、以及數量的單位，我們存檔試一次看看、重新整理。接下來按查看更多，那這邊的下拉選單就會出現選購幾堂，那這個堂這個字就是我們帶入的 product.unit，加到購物車的時候，我們就可以帶入 product 的 id、以及 product 的數量，然後存檔。現在我們來試著來送出不同數量的數值，這裡我們就可以按選購5堂、然後按加到購物車，這裡的話回傳的數值就會跳出 success、然後我們的數量是5，我們把5堂的 Vue 的課程加到購物車。</li><li>當然我們這裡按下選購幾堂之後要記得把這個 Modal 也關掉，那在這個部分我們就可以在一樣的把 Modal 關掉，這裡有個 modal(‘show’)，我們把這個 modal(‘show’) 一樣把它貼過來，把它改成 modal(‘hide’)，加到購物車之後就把這個 Modal 隱藏起來，購物車完成之後我們就可以在取得購物車的內容，就是 getCart()，取得購物車的內容其實方法都跟之前差不多，我們在把先前的 API (getProducts()) 複製過來，那複製過來之後把這個 product 換成 cart，其他的行為差距不大，我們接下來把這個 getCart() 完成之後要記得在一開始的時候，我們就把購物車也取得回來、this.getCart();，然後另外一個就是加入購物車之後也一樣要把購物車給取得回來，vm.getCart();，我們來看一下這個購物車有沒有正確的取得，我們來看一下 Console、然後按加到購物車，加到購物車之後會有兩次 AJAX 的行為，第一次是將物件加到購物車內、第二個是將購物車的資料取得回來，那取得回來之後這裡就有一些資訊，它是放在 data 的 data 內，這裡會有兩個總價，一個是 total、一個是 final_total，final_total 就是經過計算可能是有一些優惠等等的，然後下方有另外一個是購物車的內容，那我們就可以把這購物車的內容再把它呈現出來。呈現的方式就會像這樣子，有表格、然後這裡有品名、數量、以及單價，那下方還有總計。</li><li>購物車的列表這一段就讓大家自己練習，下個章節我們要來介紹怎麼刪除單一個商品、以及套用優惠碼的細節，如果沒有問題的話，大家先製作這一段。</li></ol>



<pre class="wp-block-code"><code>// CustomerOrders.vue
&lt;template&gt;
  &lt;div&gt;
    &lt;loading :active.sync="isLoading"&gt;&lt;/loading&gt;
    &lt;div class="row mt-4"&gt;
      &lt;div class="col-md-4 mb-4" v-for="item in products" :key="item.id"&gt;
        &lt;div class="card border-0 shadow-sm"&gt;
          &lt;div style="height: 150px; background-size: cover; background-position: center"
            :style="{backgroundImage: `url(${item.imageUrl})`}"&gt;
          &lt;/div&gt;
          &lt;div class="card-body"&gt;
            &lt;span class="badge badge-secondary float-right ml-2"&gt;{{ item.category }}&lt;/span&gt;
            &lt;h5 class="card-title"&gt;
              &lt;a href="#" class="text-dark"&gt;{{ item.title }}&lt;/a&gt;
            &lt;/h5&gt;
            &lt;p class="card-text"&gt;{{ item.content }}&lt;/p&gt;
            &lt;div class="d-flex justify-content-between align-items-baseline"&gt;
              &lt;div class="h5" v-if="!item.price"&gt;{{ item.origin_price }}&lt;/div&gt;
              &lt;del class="h6" v-if="item.price"&gt;原價 {{ item.origin_price }} 元&lt;/del&gt;
              &lt;div class="h5" v-if="item.price"&gt;現在只要 {{ item.price }} 元&lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="card-footer d-flex"&gt;
            &lt;button type="button" class="btn btn-outline-secondary btn-sm"
              @click="getProduct(item.id)"&gt;
              &lt;i class="fas fa-spinner fa-spin" v-if="status.loadingItem === item.id"&gt;&lt;/i&gt;
              查看更多
            &lt;/button&gt;
            &lt;button type="button" class="btn btn-outline-danger btn-sm ml-auto"
              @click="addtoCart(item.id)"&gt;
              &lt;i class="fas fa-spinner fa-spin" v-if="status.loadingItem === item.id"&gt;&lt;/i&gt;
              加到購物車
            &lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;!-- Modal CustomerOrders --&gt;
    &lt;div class="modal fade" id="productModal" tabindex="-1" role="dialog"
      aria-labelledby="exampleModalLabel" aria-hidden="true"&gt;
      &lt;div class="modal-dialog" role="document"&gt;
        &lt;div class="modal-content"&gt;
          &lt;div class="modal-header"&gt;
            &lt;h5 class="modal-title" id="exampleModalLabel"&gt;{{ product.title }}&lt;/h5&gt;
            &lt;button type="button" class="close" data-dismiss="modal" aria-label="Close"&gt;
              &lt;span aria-hidden="true"&gt;&amp;times;&lt;/span&gt;
            &lt;/button&gt;
          &lt;/div&gt;
          &lt;div class="modal-body"&gt;
            &lt;img :src="product.imageUrl" class="img-fluid" alt=""&gt;
            &lt;blockquote class="blockquote mt-3"&gt;
              &lt;p class="mb-0"&gt;{{ product.content }}&lt;/p&gt;
              &lt;footer class="blockquote-footer text-right"&gt;{{ product.description }}&lt;/footer&gt;
            &lt;/blockquote&gt;
            &lt;div class="d-flex justify-content-between align-items-baseline"&gt;
              &lt;div class="h4" v-if="!product.price"&gt;{{ product.origin_price }} 元&lt;/div&gt;
              &lt;del class="h6" v-if="product.price"&gt;原價 {{ product.origin_price }} 元&lt;/del&gt;
              &lt;div class="h4" v-if="product.price"&gt;現在只要 {{ product.price }} 元&lt;/div&gt;
            &lt;/div&gt;
            &lt;select name="" class="form-control mt-3" v-model="product.num"&gt;
              &lt;option :value="num" v-for="num in 10" :key="num"&gt;
                選購 {{ num }} {{ product.unit }}
              &lt;/option&gt;
            &lt;/select&gt;
          &lt;/div&gt;
          &lt;div class="modal-footer"&gt;
            &lt;div class="text-muted text-nowrap mr-3"&gt;
              小計 &lt;strong&gt;{{ product.num * product.price }}&lt;/strong&gt; 元
            &lt;/div&gt;
            &lt;button type="button" class="btn btn-primary"
              @click="addtoCart(product.id, product.num)"&gt;
              &lt;!-- &lt;i class="fas fa-spinner fa-spin" v-if="product.id === status.loadingItem"&gt;&lt;/i&gt; --&gt;
              加到購物車
            &lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
import $ from 'jquery';

export default {
  data() {
    return {
      products: &#91;],
      product: {},
      status: {
        loadingItem: '',
      },
      isLoading: false,
    };
  },
  methods: {
    getProducts() {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/products`;
      vm.isLoading = true;
      this.$http.get(url).then((response) =&gt; {
        vm.products = response.data.products;
        console.log(response);
        vm.isLoading = false;
      });
    },
    // 取得單一產品
    getProduct(id) {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/product/${id}`;
      // vm.isLoading = true;
      vm.status.loadingItem = id;
      this.$http.get(url).then((response) =&gt; {
        vm.product = response.data.product;
        $('#productModal').modal('show');
        console.log(response);
        // vm.isLoading = false;
        vm.status.loadingItem = '';
        vm.product.num = 1; // 所有商品初始值設置為 1
      });
    },
    // 加入購物車
    addtoCart(id, qty = 1) {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/cart`;
      // vm.isLoading = true;
      vm.status.loadingItem = id;
      const cart = {
        product_id: id,
        qty,
      };
      this.$http.post(url, { data: cart }).then((response) =&gt; {
        console.log(response);
        // vm.isLoading = false;
        vm.status.loadingItem = '';
        vm.getCart();
        $('#productModal').modal('hide');
      });
    },
    // 取得購物車的內容
    getCart() {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/cart`;
      vm.isLoading = true;
      this.$http.get(url).then((response) =&gt; {
        // vm.products = response.data.products;
        console.log(response);
        vm.isLoading = false;
      });
    },
  },
  created() {
    this.getProducts();
    this.getCart();
  },
};
&lt;/script&gt;</code></pre>



<h3>刪除購物車品項及新增優惠碼</h3>



<p>操作與講解</p>



<ol><li>這個地方已經把購物車的列表都已經呈現出來了，那購物車(列表)的部分還缺少刪除以及加入優惠券的部分，那我們來看一下 API，API 的部分如果刪除特定的一筆資料其實也蠻單純的，就是將 API 的路由帶進去之後，後面在補上購物車內的產品 id 就可以了。那麼另外一個套用優惠券，比較不一樣是說我們要上傳的是優惠碼，那麼先前有請大家先製作優惠券的頁面，如果你已經做好優惠券的頁面的話，也就可以製作這一段，就是將優惠碼也套用進來。那麼套用優惠碼之後，它的價格也會調整，所以每次套用優惠券後，這整個購物車也必需要重新取得。</li><li>我們這個地方先來製作刪除特定購物車內容的部分，一樣回到下方(CustomerOrders.vue)，下面這個地方我們可以先把 AJAX 的操作先複製起來，接下來再新增一個行為叫做 removeCartItem() 的方法，然後並且把剛剛複製的 AJAX 行為先貼進來，那麼刪除購物車商品的時候它必須帶入 id，我們就可以把這個 id 一樣貼到這個後方 ${id}，<strong>然後要特別注意</strong>，在這個部分操作並不是使用 get 或 post，所使用的是 delete，我們會送出刪除的行為，然後後端就會把這一筆資料給刪掉，在刪除之前我們先把多的行為先把它關掉、然後把這個 removeCartItem() 貼到上面刪除的按鈕上面，我們使用 @click 等於 removeCartItem() 之後，並且把 item 的 id 帶進來。</li><li>那我們來試試看能不能正確的刪除，我們重新整理、然後打開 Console，這個時候按下這個刪除的按鈕，刪除之後這裡會跳出一個訊息就是已經刪除，那麼刪除之後記得整個購物車也要重新取得，我們再把後面的程式碼補上，刪除之後我們再重新取得購物車的內容(vm.getCart();)，當然讀取效果也要把它關掉，那我們重新整理，重新整理之後這裡購物車只剩一個品項、把它刪掉，刪除之後這裡就沒有品項，那實際製作的時候要確定購物車有沒有內容才顯示這個畫面，假設購物車都沒有內容的時候要記得把這個畫面把它隱藏起來，現在我們再把一些品項給加進來。</li><li>加進來之後，接下來我們要來套用優惠碼的部分，那套用優惠碼之前，這裡來跟大家講一個小技巧，這裡我們先準備好一個註解，那這個註解要呈現的是最終的一個價錢，那我們先存檔來試一次看看。現在因為我們沒有套用優惠券，所以這裡會有個總計的價錢、下面會有個折扣價，但是這兩個價格如果都同樣的時候，其實這個折扣價不需要出現，所以我們可以做個比對，假設 final_total 的價錢不等於 cart.total 的時候它才會顯示這一段，那我們重新整理、重新整理之後下面的我們比對之後總計下方就不會出現折扣價，接下來我們在把優惠碼給補上。</li><li>那優惠碼的部分這裡已經準備好表單，上方是一個 &lt;input&gt;、下方是一個按鈕，那在上面的部分，我們就可以補上一個 v-model 等於 coupon_code，那下方的部分我們就可以補上行為，不過在補上行為之前，我們先把行為寫出來，資料的部分剛剛有新增一個 coupon_code 先是一個空的(值)，然後接下來我們在把上面這一段(removeCartItem(id)裡面的程式碼)先複製一份，然後摺疊起來，addCouponCode()，然後把剛剛複製的那一段貼上來，那我們來看一下 coupon_code 的資料結構是什麼樣子，coupon_code 的資料結構是 data 裡面有個 code，那這個 code 裡面才包著你所提供的優惠碼。那我們在這裡就在宣告一個 coupon 等於 code、然後對應的是剛剛所新宣告的一個 coupon_code 的變數，那這裡剛剛是使用 delete，那我們要再把它改成 post、然後送出 data: coupon ，然後 API 的路徑也記得要稍作調整，這裡對應的是 coupon 的 API，不過套用前我們先來看一下它是否有正常的運作。程式碼寫好之後記得把這個(addCouponCode)行為放回剛剛的按鈕上，@click 等於 addCouponCode。</li><li>接下來這個地方我們就輸入優惠碼，先輸入錯誤的優惠碼試試看，輸入之後這邊會跳出兩個 request，第一個是送出優惠碼的訊息，那這裡就會出現 success: false，所以我們這裡的驗證還要加上一個 success: false、然後它會出現找不到優惠券，所以這邊就沒有套用優惠券的內容。接下來我們這裡輸入正確的優惠碼是 code，這 code 是我們從優惠券的後台去新增的，所以我們要新增自己的優惠碼才能套用，那這個地方就套用優惠券，套用優惠券之後這裡就會已經套用優惠券，並且在這個地方就會出現折扣價，然後接下來我們把購物車的內容在打開看一下，購物車的內容在 data 裡面，這裡面還是一樣有每個產品的內容，然後這裡就會多一個 coupon，我們在套用這 coupon 的時候是將這個 coupon_code 套用在每個商品上，所以每個商品的價錢也都會有調整，這裡的價錢就會不太一樣，原價是1650，那麼在套用之後這個優惠券就會影響這個的價錢。</li><li>那麼如果說我們要知道哪些產品有套用優惠碼的話，我們一樣可以在這個地方加入我們這邊有先註解好的一段，假設它裡面有包含優惠券的話就會跳出已套用優惠券的字樣，那麼我們重新整理一下、重新整理之後，這裡所有的商品就會套用優惠券的字樣，所以這些就是已經有套用優惠券的商品。</li><li>如果沒有問題的話，我們就準備到下一個章節，要把訂單給送出囉</li></ol>



<pre class="wp-block-code"><code>// CustomerOrders.vue
&lt;template&gt;
  &lt;div&gt;
    &lt;loading :active.sync="isLoading"&gt;&lt;/loading&gt;
    &lt;div class="row mt-4"&gt;
      &lt;div class="col-md-4 mb-4" v-for="item in products" :key="item.id"&gt;
        &lt;div class="card border-0 shadow-sm"&gt;
          &lt;div style="height: 150px; background-size: cover; background-position: center"
            :style="{backgroundImage: `url(${item.imageUrl})`}"&gt;
          &lt;/div&gt;
          &lt;div class="card-body"&gt;
            &lt;span class="badge badge-secondary float-right ml-2"&gt;{{ item.category }}&lt;/span&gt;
            &lt;h5 class="card-title"&gt;
              &lt;a href="#" class="text-dark"&gt;{{ item.title }}&lt;/a&gt;
            &lt;/h5&gt;
            &lt;p class="card-text"&gt;{{ item.content }}&lt;/p&gt;
            &lt;div class="d-flex justify-content-between align-items-baseline"&gt;
              &lt;div class="h5" v-if="!item.price"&gt;{{ item.origin_price }}&lt;/div&gt;
              &lt;del class="h6" v-if="item.price"&gt;原價 {{ item.origin_price }} 元&lt;/del&gt;
              &lt;div class="h5" v-if="item.price"&gt;現在只要 {{ item.price }} 元&lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="card-footer d-flex"&gt;
            &lt;button type="button" class="btn btn-outline-secondary btn-sm"
              @click="getProduct(item.id)"&gt;
              &lt;i class="fas fa-spinner fa-spin" v-if="status.loadingItem === item.id"&gt;&lt;/i&gt;
              查看更多
            &lt;/button&gt;
            &lt;button type="button" class="btn btn-outline-danger btn-sm ml-auto"
              @click="addtoCart(item.id)"&gt;
              &lt;i class="fas fa-spinner fa-spin" v-if="status.loadingItem === item.id"&gt;&lt;/i&gt;
              加到購物車
            &lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;!-- Modal CustomerOrders --&gt;
    &lt;div class="modal fade" id="productModal" tabindex="-1" role="dialog"
      aria-labelledby="exampleModalLabel" aria-hidden="true"&gt;
      &lt;div class="modal-dialog" role="document"&gt;
        &lt;div class="modal-content"&gt;
          &lt;div class="modal-header"&gt;
            &lt;h5 class="modal-title" id="exampleModalLabel"&gt;{{ product.title }}&lt;/h5&gt;
            &lt;button type="button" class="close" data-dismiss="modal" aria-label="Close"&gt;
              &lt;span aria-hidden="true"&gt;&amp;times;&lt;/span&gt;
            &lt;/button&gt;
          &lt;/div&gt;
          &lt;div class="modal-body"&gt;
            &lt;img :src="product.imageUrl" class="img-fluid" alt=""&gt;
            &lt;blockquote class="blockquote mt-3"&gt;
              &lt;p class="mb-0"&gt;{{ product.content }}&lt;/p&gt;
              &lt;footer class="blockquote-footer text-right"&gt;{{ product.description }}&lt;/footer&gt;
            &lt;/blockquote&gt;
            &lt;div class="d-flex justify-content-between align-items-baseline"&gt;
              &lt;div class="h4" v-if="!product.price"&gt;{{ product.origin_price }} 元&lt;/div&gt;
              &lt;del class="h6" v-if="product.price"&gt;原價 {{ product.origin_price }} 元&lt;/del&gt;
              &lt;div class="h4" v-if="product.price"&gt;現在只要 {{ product.price }} 元&lt;/div&gt;
            &lt;/div&gt;
            &lt;select name="" class="form-control mt-3" v-model="product.num"&gt;
              &lt;option :value="num" v-for="num in 10" :key="num"&gt;
                選購 {{ num }} {{ product.unit }}
              &lt;/option&gt;
            &lt;/select&gt;
          &lt;/div&gt;
          &lt;div class="modal-footer"&gt;
            &lt;div class="text-muted text-nowrap mr-3"&gt;
              小計 &lt;strong&gt;{{ product.num * product.price }}&lt;/strong&gt; 元
            &lt;/div&gt;
            &lt;button type="button" class="btn btn-primary"
              @click="addtoCart(product.id, product.num)"&gt;
              &lt;!-- &lt;i class="fas fa-spinner fa-spin" v-if="product.id === status.loadingItem"&gt;&lt;/i&gt; --&gt;
              加到購物車
            &lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;!-- 購物車列表 --&gt;
    &lt;div class="my-5 row justify-content-center"&gt;
      &lt;div class="col-md-6"&gt;
        &lt;table class="table"&gt;
          &lt;thead&gt;
            &lt;th&gt;&lt;/th&gt;
            &lt;th&gt;品名&lt;/th&gt;
            &lt;th&gt;數量&lt;/th&gt;
            &lt;th&gt;單價&lt;/th&gt;
          &lt;/thead&gt;
          &lt;tbody&gt;
            &lt;tr v-for="item in cart.carts" :key="item.id" v-if="cart.carts"&gt;
              &lt;td class="align-middle"&gt;
                &lt;button type="button" class="btn btn-outline-danger btn-sm"
                  @click="removeCartItem(item.id)"&gt;
                  &lt;i class="far fa-trash-alt"&gt;&lt;/i&gt;
                &lt;/button&gt;
              &lt;/td&gt;
              &lt;td class="align-middle"&gt;
                {{ item.product.title }}
                &lt;div class="text-success" v-if="item.coupon"&gt;
                  已套用優惠券
                &lt;/div&gt;
              &lt;/td&gt;
              &lt;td class="align-middle"&gt;{{ item.qty }}/{{ item.product.unit }}&lt;/td&gt;
              &lt;td class="align-middle text-right"&gt;{{ item.final_total }}&lt;/td&gt;
            &lt;/tr&gt;
          &lt;/tbody&gt;
          &lt;tfoot&gt;
            &lt;tr&gt;
              &lt;td colspan="3" class="text-right"&gt;總計&lt;/td&gt;
              &lt;td class="text-right"&gt;{{ cart.total }}&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr v-if="cart.final_total !== cart.total"&gt;
              &lt;td colspan="3" class="text-right text-success"&gt;折扣價&lt;/td&gt;
              &lt;td class="text-right text-success"&gt;{{ cart.final_total }}&lt;/td&gt;
            &lt;/tr&gt;
          &lt;/tfoot&gt;
        &lt;/table&gt;
        &lt;div class="input-group mb-3 input-group-sm"&gt;
          &lt;input type="text" class="form-control" v-model="coupon_code" placeholder="請輸入優惠碼"&gt;
          &lt;div class="input-group-append"&gt;
            &lt;button class="btn btn-outline-secondary" type="button" @click="addCouponCode"&gt;
              套用優惠碼
            &lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
import $ from 'jquery';

export default {
  data() {
    return {
      products: &#91;],
      product: {},
      status: {
        loadingItem: '',
      },
      cart: {},
      isLoading: false,
      coupon_code: '',
    };
  },
  methods: {
    getProducts() {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/products`;
      vm.isLoading = true;
      this.$http.get(url).then((response) =&gt; {
        vm.products = response.data.products;
        console.log(response);
        vm.isLoading = false;
      });
    },
    // 取得單一產品
    getProduct(id) {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/product/${id}`;
      // vm.isLoading = true;
      vm.status.loadingItem = id;
      this.$http.get(url).then((response) =&gt; {
        vm.product = response.data.product;
        $('#productModal').modal('show');
        console.log(response);
        // vm.isLoading = false;
        vm.status.loadingItem = '';
        vm.product.num = 1; // 所有商品初始值設置為 1
      });
    },
    // 加入購物車
    addtoCart(id, qty = 1) {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/cart`;
      // vm.isLoading = true;
      vm.status.loadingItem = id;
      const cart = {
        product_id: id,
        qty,
      };
      this.$http.post(url, { data: cart }).then((response) =&gt; {
        console.log(response);
        // vm.isLoading = false;
        vm.status.loadingItem = '';
        vm.getCart();
        $('#productModal').modal('hide');
      });
    },
    // 取得購物車的內容
    getCart() {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/cart`;
      vm.isLoading = true;
      this.$http.get(url).then((response) =&gt; {
        // vm.products = response.data.products;
        vm.cart = response.data.data;
        console.log(response);
        vm.isLoading = false;
      });
    },
    // 刪除購物車品項
    removeCartItem(id) {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/cart/${id}`;
      vm.isLoading = true;
      this.$http.delete(url).then(() =&gt; {
        vm.getCart();
        vm.isLoading = false;
      });
    },
    // 新增優惠碼
    addCouponCode() {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/coupon`;
      const coupon = {
        code: vm.coupon_code,
      };
      vm.isLoading = true;
      this.$http.post(url, { data: coupon }).then((response) =&gt; {
        console.log(response);
        vm.getCart();
        vm.isLoading = false;
      });
    },
  },
  created() {
    this.getProducts();
    this.getCart();
  },
};
&lt;/script&gt;</code></pre>



<h3>*建立訂單及表單驗證技巧</h3>



<h5>資源</h5>



<ul><li><a href="https://vee-validate.logaretm.com/v2/" target="_blank" rel="noreferrer noopener">Vee Validate 套件 – 課程版本</a></li><li><a href="https://vee-validate.logaretm.com/v2/guide/events.html#changing-default-events" target="_blank" rel="noreferrer noopener">Vee Validate 驗證事件 – 課程版本</a></li><li><a href="https://vee-validate.logaretm.com/v4/" target="_blank" rel="noreferrer noopener">Vee Validate 套件 – 更新版</a></li><li><a href="https://vee-validate.logaretm.com/v4/" target="_blank" rel="noreferrer noopener">Vee Validate 驗證事件 – 更新版</a></li></ul>



<p>操作與講解</p>



<ol><li>接下來來到建立訂單的部分，這個地方也是蠻重要而且比較困難的地方，我們在建立訂單的時候會把原本所選的購物車的內容全部刪掉，然後它會成立一個新的訂單，那麼在訂單送出前也必需把用戶的一些相關資訊也都存下來。</li><li>那我們來看一下畫面在這個部分會做什麼事情，下面這個地方就是訂單所要填入的內容，在這個部分最困難的就是說這個訂單不能隨意讓用戶送出，像我們現在直接按下送出訂單，這個訊息它會直接被阻擋，並且如果點一些特定的欄位，它會跳出提示說姓名欄位不得留空，在這個地方我們來填入錯誤的 email 內容，這裡會跳出說 email 必需是有效的電子郵件地址，所以我們在輸入這個表單的時候，要特別做這樣的驗證，不能讓用戶隨意送出空的表單內容。</li><li>這個時候就可以使用一個套件叫 vee-validate，這個套件使用上蠻容易的，等下課程也會介紹怎麼使用這個套件，而且這個套件還包含中文的語系檔，所以可以直接的使用。它可以在畫面上加入一些條件，像是這裡就可以要求說一定要 email 格式、或者是使用正規式的方式來驗證這個表單內容是否正確。VeeValidate 這個套件跟 Bootstrap 也是沒有問題的，那我們來開始製作。</li><li>我們回到畫面上，下方這個地方還沒有表單內容，那表單這部分我們就不重頭打，會直接提供現成的給大家，我們把表單的格式直接貼進來、重新排版，調整好之後，下面要建立對應的資料格式，那麼這個資料格式大家要記得對應送出的&nbsp;<a rel="noreferrer noopener" href="https://github.com/hexschool/vue-course-api-wiki/wiki/%E5%AE%A2%E6%88%B6%E8%B3%BC%E7%89%A9-%5B%E5%85%8D%E9%A9%97%E8%AD%89%5D#%E7%B5%90%E5%B8%B3%E9%A0%81%E9%9D%A2" target="_blank">API 的結構</a>，所以在這裡我們就要建立 form，那這個表單的結構大家可以直接參考 API 所提供的格式。</li><li>那下面的部分我們就來開始撰寫 AJAX，但是這個 AJAX 跟先前的方法也都差異不大，所以這段我們就加速帶過，訂單完成之後，補上一個訂單已建立的字樣，那這裡還沒有完成，先做到這部分就可以，接下來把這個 createOrder 加到這個表單上面來，這個方法可以清除它預設的 submit 行為、我們存檔。</li><li>存檔之後我們來看一下，這個表單格式錯誤、表單完成以後，我們先不要做驗證，先試試看這個送出的行為是否正確，那我們先輸入假的資料、然後將這個訂單給送出，那這個時候會跳出訂單已建立，所以我們現在 AJAX 行為是沒有問題的，接下來我們要來製作驗證的部分。</li><li>我們打開 Terminal(終端機)，然後將這個驗證工具把它裝下來，驗證工具安裝、npm install vee-validate，存檔(安裝)這部分一樣花一些時間，這部分我們就先來準備一些後面所需要的程式碼，它一樣是需要做 import，那我們打開 main.js，那我們就先把它給 import 進來，import 進來之後它一樣去啟用它、Vue.use(VeeValidate) 把它啟用、存檔之後，我們來將服務 run 起來 npm run dev。</li><li>這裡有寫一下它的使用方式，它的使用方式就是在你的元件上面加上 v-validate 這個字樣，那我們先把它加上來，先使用收件人姓名這個部分，我們把它加上來、然後後面 email 的部分先把它拿掉，我們先加上 required 就好、存檔。然後回到我們畫面上、重新整理這裡不會有任何變化，我們先試著把錯誤的訊息把它抓出來，下方有一個 &lt;span&gt; 這裡是會輸出紅色的字樣，我們先用兩個大括號使用 errors 這個是它所提供的一個變數、然後 has，然後假設它有 name 這個欄位，它對應的是我們 &lt;input&gt; 裡面 name 這個屬性，那剛好我們這個名稱是一樣，是叫做 name，那我們把它輸入進來、然後存檔 (註：在此條件是 “required”，所以是不得為空)。這個條件是當它被觸發之後，然後它的 name 並不存在的話，它就會跳出這個錯誤、那我們重新整理一下，重新整理我們到畫面上之後，現在我們還沒有觸發它，所以他現在是跳出 false，那麼我們先輸入一些內容，它還是 false，可是當這個欄位清空之後，它就會跳出 true，也就是說它這個欄位當被觸發過之後，但是如果他沒有輸入內容的話，它就會跳出錯誤，那我們再重新整理一次。現在我們先直接點一下、然後移出來(點空白處)，這個時候它就算錯誤。我應該要輸入這個欄位，但是我跳過的話，這個就算錯誤。</li><li>那接下來我們就可以用這個方式驗證它，當它為 true 的時候、當它為錯誤的時候，我們就顯示這個欄位 v-if=”errors.has(‘name’)”，那這個 name 是對應上面那個 name (值那個 name)，然後(&lt;span&gt;標籤內修改成姓名必須輸入)、存檔之後我們在重新整理，現在是空的、但是如果說我們點一下這個欄位、然後在點一下外面它就會跳出這個錯誤，姓名必須輸入，那這個方式我們也可以套用在這個 &lt;input&gt; 的 class 上面，我們可以在這個 &lt;input&gt; 上面再加上一個 :class 把它改為一個物件，前方我們加入 ‘is-invalid’，代表說它的驗證是錯誤的，那它的條件就是 errors.has(‘name’) 的時候，它會出現紅色的框框，那我們來試一次看看。重新整理之後，我們點一下收件者姓名、然後在點一下外面，這個時候它的框框就變紅色的，而且會跳出姓名必須輸入的字樣。</li><li>接下來我們來製作 Email 這個欄位，Email 這個欄位製作方式跟其他有一些些不同，我們直接參照它的官網，有一些特定的欄位它有提供特殊的驗證方法，那我們這一段就直接使用它的 Email 驗證，接下來我們回到 CustomerOrders.vue 的頁面上面來、然後並且將 v-validate 貼進來，貼進來之後它就會自動驗證 Email，那下方這個地方我們一樣用 v-if 去判斷 email 這個欄位是否正確，接下來裡面這一段驗證可以用它所提供的另一個方法，errors.first 然後括號、使用 email 這個欄位，這個方式會比較特別，它會直接告訴你說你的 Email 輸入錯誤在哪裡、那我們存檔。接下來重新整理之後，我們先點一下 Email 這個欄位，點一下之後再點擊外面，它會回應說這個欄位是必須的。那我們再輸入一些東西，那我們隨便輸入一些文字之後，這會跳出這個 Email 的欄位它不是有效的 Email 格式，用這種方式它就可以提供一些額外的回饋訊息，那當然如果說我們把它輸入成正確的格式，它這個回饋訊息就會移掉。現在這個回饋訊息由於是英文的，那當然我們會希望用中文的方式來呈現這個回饋訊息，我們就可以做一些些簡單的調整，就可以把它改成中文的回饋。</li><li>我們回到 main.js 、並且回到它的 node_modules 裡面(有個 vee-validate)，然後裡面有個 dist，dist 下面有一個 locale，這個 locale 下就是各種語系的檔案，那我們就把這個 locale import 進來，假設我們在這裡需要中文的話、import，import 之後就必需啟用它，接下來我們把它的、接下來選擇 Validator 這個物件，下方還有一個 localize 的一個方法，那這個方法就可以將中文語系載進來，zh_TW 然後把這個語系檔給載進來，這個載入方式比較特別，不過在它的文件裡面也有寫到，在這部分我們就直接打給大家看、存檔之後就可以使用它的中文語系。在這個部分它要求我們的單字要改一下、改成這樣，接下來存檔，存檔之後我們回到畫面上，我們再來試一次這個 Email 的格式，這個時候它就會改成中文的回饋，如果說我們改成錯誤的話，它一樣會跳出對應的訊息。</li><li>我們現在在看一下這個表單的部分，現在這個表單這個欄位，我們一樣留空，但是我們按下送出訂單，這個時候會跳出一個請填寫這個欄位，這個請填寫這個欄位是 Chrome 自動跳出來，只要你在 &lt;input&gt; 裡面有加上 required 的話，它就會跳出這個訊息，那假設說我們不要使用這個 required，我們要使用這個套件的功能，要阻止它送出的話，該怎麼做，像我們現在把這個 required 拿掉，如果按下送出，它是真的會送出這個表單，所以我們現在要確保我們在送出的時候，它的欄位是符合我們的套件的要求的、該怎麼做，我們在滑到下方程式碼的部分，它在它的 API 裡面有提供其中一段，就是在我們 submit 的時候可以先做一下我們套件的驗證。我們現在直接把這一段複製下來，貼到我們的程式碼裡面，這個 result 要加上括號，加進來之後，假設這邊有一個 if result 為 true 的時候，把這一段貼進來，那在另外一個地方加上 else 假設沒有成功的時候，我們跳出欄位不完整，我們先使用 console 來做一下就可以了，並且把這個 isLoading 拿掉，因為這個會擋到我們的畫面、然後存檔。接下來回到畫面上重新整理、然後我們這個時候按下送出訂單，按下去之後(Console)會跳出欄位不完整，並且我們往上看這上面的部分都會全部算是被驗證過的狀態，如果說我們這個欄位完全都沒有碰過，它一樣會顯示這個紅色的錯誤。</li><li>這邊就是一個比較完整的驗證模式，現在這個部分就給大家自己練習，把這個表單完整的製作完成，並且可以送出表單的狀態。</li></ol>



<pre class="wp-block-code"><code>// 7. VeeValidate 安裝
// npm
npm install vee-validate --save</code></pre>



<pre class="wp-block-code"><code>// 7. main.js
// import VeeValidate
import VeeValidate from 'vee-validate'</code></pre>



<h5>版本問題</h5>



<pre class="wp-block-code"><code>// 移除 vee-validate 套件 3.x.x 版本
npm uninstall vee-validate --save

// 安裝 vee-validate 套件 2.x.x 版本
npm install vee-validate@2.2.15 --save</code></pre>



<h5>即時監聽 – Focus 到 &lt;input&gt; 再點外面即時監聽到 &lt;span&gt; 的行為</h5>



<pre class="wp-block-code"><code>// main.js
// 修改 events，加上 blur
Vue.use(VeeValidate, {
  events: 'input|blur',
});</code></pre>



<pre class="wp-block-code"><code>// 11. main.js
// 中文語系
import zhTW_Validate from 'vee-validate/dist/locale/zh_TW';

VeeValidate.Validator.localize('zh_TW', zhTW_Validate)</code></pre>



<pre class="wp-block-code"><code>// 11. main.js
// 中文語系修改後
import zhTWValidate from 'vee-validate/dist/locale/zh_TW'

// 寫在這無法顯示中文
// VeeValidate.Validator.localize('zh_TW', zhTWValidate)
Vue.use(VeeValidate, {
  events: 'input|blur',
})
// 寫在這才能顯示中文
VeeValidate.Validator.localize('zh_TW', zhTWValidate)</code></pre>



<pre class="wp-block-code"><code>// CustomerOrders.vue
&lt;template&gt;
  &lt;div&gt;
    &lt;loading :active.sync="isLoading"&gt;&lt;/loading&gt;
    &lt;div class="row mt-4"&gt;
      &lt;div class="col-md-4 mb-4" v-for="item in products" :key="item.id"&gt;
        &lt;div class="card border-0 shadow-sm"&gt;
          &lt;div style="height: 150px; background-size: cover; background-position: center"
            :style="{backgroundImage: `url(${item.imageUrl})`}"&gt;
          &lt;/div&gt;
          &lt;div class="card-body"&gt;
            &lt;span class="badge badge-secondary float-right ml-2"&gt;{{ item.category }}&lt;/span&gt;
            &lt;h5 class="card-title"&gt;
              &lt;a href="#" class="text-dark"&gt;{{ item.title }}&lt;/a&gt;
            &lt;/h5&gt;
            &lt;p class="card-text"&gt;{{ item.content }}&lt;/p&gt;
            &lt;div class="d-flex justify-content-between align-items-baseline"&gt;
              &lt;div class="h5" v-if="!item.price"&gt;{{ item.origin_price }}&lt;/div&gt;
              &lt;del class="h6" v-if="item.price"&gt;原價 {{ item.origin_price }} 元&lt;/del&gt;
              &lt;div class="h5" v-if="item.price"&gt;現在只要 {{ item.price }} 元&lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="card-footer d-flex"&gt;
            &lt;button type="button" class="btn btn-outline-secondary btn-sm"
              @click="getProduct(item.id)"&gt;
              &lt;i class="fas fa-spinner fa-spin" v-if="status.loadingItem === item.id"&gt;&lt;/i&gt;
              查看更多
            &lt;/button&gt;
            &lt;button type="button" class="btn btn-outline-danger btn-sm ml-auto"
              @click="addtoCart(item.id)"&gt;
              &lt;i class="fas fa-spinner fa-spin" v-if="status.loadingItem === item.id"&gt;&lt;/i&gt;
              加到購物車
            &lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;!-- Modal CustomerOrders --&gt;
    &lt;div class="modal fade" id="productModal" tabindex="-1" role="dialog"
      aria-labelledby="exampleModalLabel" aria-hidden="true"&gt;
      &lt;div class="modal-dialog" role="document"&gt;
        &lt;div class="modal-content"&gt;
          &lt;div class="modal-header"&gt;
            &lt;h5 class="modal-title" id="exampleModalLabel"&gt;{{ product.title }}&lt;/h5&gt;
            &lt;button type="button" class="close" data-dismiss="modal" aria-label="Close"&gt;
              &lt;span aria-hidden="true"&gt;&amp;times;&lt;/span&gt;
            &lt;/button&gt;
          &lt;/div&gt;
          &lt;div class="modal-body"&gt;
            &lt;img :src="product.imageUrl" class="img-fluid" alt=""&gt;
            &lt;blockquote class="blockquote mt-3"&gt;
              &lt;p class="mb-0"&gt;{{ product.content }}&lt;/p&gt;
              &lt;footer class="blockquote-footer text-right"&gt;{{ product.description }}&lt;/footer&gt;
            &lt;/blockquote&gt;
            &lt;div class="d-flex justify-content-between align-items-baseline"&gt;
              &lt;div class="h4" v-if="!product.price"&gt;{{ product.origin_price }} 元&lt;/div&gt;
              &lt;del class="h6" v-if="product.price"&gt;原價 {{ product.origin_price }} 元&lt;/del&gt;
              &lt;div class="h4" v-if="product.price"&gt;現在只要 {{ product.price }} 元&lt;/div&gt;
            &lt;/div&gt;
            &lt;select name="" class="form-control mt-3" v-model="product.num"&gt;
              &lt;option :value="num" v-for="num in 10" :key="num"&gt;
                選購 {{ num }} {{ product.unit }}
              &lt;/option&gt;
            &lt;/select&gt;
          &lt;/div&gt;
          &lt;div class="modal-footer"&gt;
            &lt;div class="text-muted text-nowrap mr-3"&gt;
              小計 &lt;strong&gt;{{ product.num * product.price }}&lt;/strong&gt; 元
            &lt;/div&gt;
            &lt;button type="button" class="btn btn-primary"
              @click="addtoCart(product.id, product.num)"&gt;
              &lt;!-- &lt;i class="fas fa-spinner fa-spin" v-if="product.id === status.loadingItem"&gt;&lt;/i&gt; --&gt;
              加到購物車
            &lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;!-- 購物車列表 --&gt;
    &lt;div class="my-5 row justify-content-center"&gt;
      &lt;div class="col-md-6"&gt;
        &lt;table class="table"&gt;
          &lt;thead&gt;
            &lt;th&gt;&lt;/th&gt;
            &lt;th&gt;品名&lt;/th&gt;
            &lt;th&gt;數量&lt;/th&gt;
            &lt;th&gt;單價&lt;/th&gt;
          &lt;/thead&gt;
          &lt;tbody&gt;
            &lt;tr v-for="item in cart.carts" :key="item.id" v-if="cart.carts"&gt;
              &lt;td class="align-middle"&gt;
                &lt;button type="button" class="btn btn-outline-danger btn-sm"
                  @click="removeCartItem(item.id)"&gt;
                  &lt;i class="far fa-trash-alt"&gt;&lt;/i&gt;
                &lt;/button&gt;
              &lt;/td&gt;
              &lt;td class="align-middle"&gt;
                {{ item.product.title }}
                &lt;div class="text-success" v-if="item.coupon"&gt;
                  已套用優惠券
                &lt;/div&gt;
              &lt;/td&gt;
              &lt;td class="align-middle"&gt;{{ item.qty }}/{{ item.product.unit }}&lt;/td&gt;
              &lt;td class="align-middle text-right"&gt;{{ item.final_total }}&lt;/td&gt;
            &lt;/tr&gt;
          &lt;/tbody&gt;
          &lt;tfoot&gt;
            &lt;tr&gt;
              &lt;td colspan="3" class="text-right"&gt;總計&lt;/td&gt;
              &lt;td class="text-right"&gt;{{ cart.total }}&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr v-if="cart.final_total !== cart.total"&gt;
              &lt;td colspan="3" class="text-right text-success"&gt;折扣價&lt;/td&gt;
              &lt;td class="text-right text-success"&gt;{{ cart.final_total }}&lt;/td&gt;
            &lt;/tr&gt;
          &lt;/tfoot&gt;
        &lt;/table&gt;
        &lt;div class="input-group mb-3 input-group-sm"&gt;
          &lt;input type="text" class="form-control" v-model="coupon_code" placeholder="請輸入優惠碼"&gt;
          &lt;div class="input-group-append"&gt;
            &lt;button class="btn btn-outline-secondary" type="button" @click="addCouponCode"&gt;
              套用優惠碼
            &lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;!-- 建立訂購表單 --&gt;
    &lt;div class="my-5 row justify-content-center"&gt;
      &lt;form class="col-md-6" @submit.prevent="createOrder"&gt;
        &lt;div class="form-group"&gt;
          &lt;label for="useremail"&gt;Email&lt;/label&gt;
          &lt;input type="email" class="form-control" name="email" id="useremail"
            v-validate="'required|email'"
            :class="{'is-invalid': errors.has('email')}"
            v-model="form.user.email" placeholder="請輸入 Email"&gt;
          &lt;span class="text-danger" v-if="errors.has('email')"&gt;
            {{ errors.first('email') }}
          &lt;/span&gt;
        &lt;/div&gt;
      
        &lt;div class="form-group"&gt;
          &lt;label for="username"&gt;收件人姓名&lt;/label&gt;
          &lt;input type="text" class="form-control" name="name" id="username"
            :class="{'is-invalid': errors.has('name')}"
            v-model="form.user.name" v-validate="'required'" placeholder="輸入姓名"&gt;
          &lt;span class="text-danger" v-if="errors.has('name')"&gt;姓名必須輸入&lt;/span&gt;
        &lt;/div&gt;
      
        &lt;div class="form-group"&gt;
          &lt;label for="usertel"&gt;收件人電話&lt;/label&gt;
          &lt;input type="tel" class="form-control" name="tel" id="usertel"
            :class="{'is-invalid': errors.has('tel')}"
            v-model="form.user.tel" v-validate="'required'" placeholder="請輸入電話"&gt;
          &lt;span class="text-danger" v-if="errors.has('tel')"&gt;電話欄位不得留空&lt;/span&gt;
        &lt;/div&gt;
      
        &lt;div class="form-group"&gt;
          &lt;label for="useraddress"&gt;收件人地址&lt;/label&gt;
          &lt;input type="text" class="form-control" name="address" id="useraddress"
            :class="{'is-invalid': errors.has('address')}"
            v-model="form.user.address" v-validate="'required'" placeholder="請輸入地址"&gt;
          &lt;span class="text-danger" v-if="errors.has('address')"&gt;地址欄位不得留空&lt;/span&gt;
        &lt;/div&gt;
      
        &lt;div class="form-group"&gt;
          &lt;label for="comment"&gt;留言&lt;/label&gt;
          &lt;textarea name="" id="comment" class="form-control" cols="30" rows="10" v-model="form.message"&gt;&lt;/textarea&gt;
        &lt;/div&gt;
        &lt;div class="text-right"&gt;
          &lt;button class="btn btn-danger"&gt;送出訂單&lt;/button&gt;
        &lt;/div&gt;
      &lt;/form&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
import $ from 'jquery';

export default {
  data() {
    return {
      products: &#91;],
      product: {},
      status: {
        loadingItem: '',
      },
      form: {
        user: {
          name: '',
          email: '',
          tel: '',
          address: '',
        },
        message: '',
      },
      cart: {},
      isLoading: false,
      coupon_code: '',
    };
  },
  methods: {
    getProducts() {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/products`;
      vm.isLoading = true;
      this.$http.get(url).then((response) =&gt; {
        vm.products = response.data.products;
        console.log(response);
        vm.isLoading = false;
      });
    },
    // 取得單一產品
    getProduct(id) {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/product/${id}`;
      // vm.isLoading = true;
      vm.status.loadingItem = id;
      this.$http.get(url).then((response) =&gt; {
        vm.product = response.data.product;
        $('#productModal').modal('show');
        console.log(response);
        // vm.isLoading = false;
        vm.status.loadingItem = '';
        vm.product.num = 1; // 所有商品初始值設置為 1
      });
    },
    // 加入購物車
    addtoCart(id, qty = 1) {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/cart`;
      // vm.isLoading = true;
      vm.status.loadingItem = id;
      const cart = {
        product_id: id,
        qty,
      };
      this.$http.post(url, { data: cart }).then((response) =&gt; {
        console.log(response);
        // vm.isLoading = false;
        vm.status.loadingItem = '';
        vm.getCart();
        $('#productModal').modal('hide');
      });
    },
    // 取得購物車的內容
    getCart() {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/cart`;
      vm.isLoading = true;
      this.$http.get(url).then((response) =&gt; {
        // vm.products = response.data.products;
        vm.cart = response.data.data;
        console.log(response);
        vm.isLoading = false;
      });
    },
    // 刪除購物車品項
    removeCartItem(id) {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/cart/${id}`;
      vm.isLoading = true;
      this.$http.delete(url).then(() =&gt; {
        vm.getCart();
        vm.isLoading = false;
      });
    },
    // 新增優惠碼
    addCouponCode() {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/coupon`;
      const coupon = {
        code: vm.coupon_code,
      };
      vm.isLoading = true;
      this.$http.post(url, { data: coupon }).then((response) =&gt; {
        console.log(response);
        vm.getCart();
        vm.isLoading = false;
      });
    },
    // 建立訂購表單
    createOrder() {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/order`;
      const order = vm.form;
      // vm.isLoading = true;
      this.$validator.validate().then((result) =&gt; {
        if (result) {
          this.$http.post(url, { data: order }).then((response) =&gt; {
            console.log('訂單已建立', response);
            // vm.getCart();
            vm.isLoading = false;
          });
        } else {
          console.log('欄位不完整');
        }
      });
    },
  },
  created() {
    this.getProducts();
    this.getCart();
  },
};
&lt;/script&gt;</code></pre>



<pre class="wp-block-code"><code>// main.js
// The Vue build version to load with the `import` command
// (runtime-only or standalone) has been set in webpack.base.conf with an alias.
import Vue from 'vue'
// 第三方的套件
import axios from 'axios'
import VueAxios from 'vue-axios'
// import component
import Loading from 'vue-loading-overlay'
// import stylesheet
import 'vue-loading-overlay/dist/vue-loading.css'
import 'bootstrap'
// import VeeValidate
import VeeValidate from 'vee-validate'
// import 中文語系
import zhTWValidate from 'vee-validate/dist/locale/zh_TW'
// 自己撰寫
import App from './App'
import router from './router'
import './bus'
import currencyFilter from './filters/currency'
import dateFilter from './filters/date'

Vue.config.productionTip = false
Vue.use(VueAxios, axios)

// 寫在這無法顯示中文
// VeeValidate.Validator.localize('zh_TW', zhTWValidate)
Vue.use(VeeValidate, {
  events: 'input|blur',
})
// 寫在這才能顯示中文
VeeValidate.Validator.localize('zh_TW', zhTWValidate)

Vue.component('Loading', Loading)
Vue.filter('currency', currencyFilter)
Vue.filter('date', dateFilter)

// 前端跨域設定
axios.defaults.withCredentials = true;

/* eslint-disable no-new */
new Vue({
  el: '#app',
  router,
  components: { App },
  template: '&lt;App/&gt;'
})

// 導航守衛
router.beforeEach((to, from, next) =&gt; {
  // console.log('to', to, 'from', from, 'next', next);
  // ...
  if (to.meta.requiresAuth) {
    const api = `${process.env.APIPATH}/api/user/check`;
    axios.post(api).then((response) =&gt; {
      // console.log(response.data);
      if (response.data.success) {
        next();
      } else {
        next({
          path: '/login',
        });
      }
    });
  } else {
    next();
  }
})</code></pre>



<h3>表單驗證補充</h3>



<p>操作與講解</p>



<ol><li>在我們課程原本的介紹是使用第二版的 Vee Validate，那我們現在直接跳到指定的行數，在過去我們使用 Vee Validate 它的驗證主要是透過 Vue 的指令、它算是 HTML 的屬性來進行驗證。</li><li>那在新版就有很大的不同，新版的話主要是使用元件的方式來進行驗證，那相對來說使用元件的方式進行驗證會稍微複雜一點點，但是它會更符合 Vue 的邏輯，因此在這個地方我們就額外推出關於 Vee Validate 新版的驗證方式，也因為新版的驗證它稍微複雜一點點，所以在這個地方我們會提供完整的文件。</li><li>這個文件我們只要按照這個流程我們就可以把 Vee Validate 安裝好，我們就透過這個文件一一的解說我們到底做了哪些事情，我們先把多餘的 &lt;input&gt; 的欄位先把它關掉，我們先只留下 Email 這一段就好了，這個是對應我們的這個頁面、就是我們現在只留下這個 Email，那下面的收件人姓名到留言這一段，我們先把它們關掉，這個是 Email，因此我們就把下面的收件人姓名到留言這個地方，我們都先把它刪掉，現在我們只留下畫面的這一塊。接下來我們把原本的 Vee-Validate 解除安裝、然後並且安裝新版的 Vee-Validate，那我們來打開終端機、打開終端機之後，npm uninstall vee-validate，解除安裝之後，我們就可以準備直接安裝新版的 Vee-Validate，這個地方我們就輸入 npm install vee-validate –save，安裝完成之後，我們會建議先打開 package.json 這一個頁面，打開 package.json 之後我們要先確定我們 vee-validate 的版本，那目前來說它的使用版本是3.x.x的版本，那麼如果你是使用第四版測試版的話，它是支援 Vue 3。</li><li>我們先把 Vue 的環境運行起來 npm run dev，運行起來它預期會跳一些錯誤，因為新舊版是有一點點不同的，但是我們先不管它。現在我們先把多的頁面關掉，我們打開 main.js、我們在進入點上面需要做一點點調整。在原本 vee-validate 上面有進行一些設定像是這兩行，還有上面會有引入 vee-validate 的方法，我們先把這四行先把它刪掉，這是屬於舊版的驗證。</li><li>那現在我們要導入新版的驗證，存檔之後、我們現在跳到步驟二，我們必需先把新版是使用元件的方式進行驗證，所以我們先把元件給導入進來，這邊是 import&nbsp;相關的元件內容，那我們把它放在這個地方、原本的這個地方，我們先整理一下程式碼。接下來我們再把這裡有一些規則、以及元件的設定，我們先把它直接給貼進來，貼進來之後我們再一一解說這些程式碼到底代表什麼意思，我先稍微整理一下程式碼、存檔之後，我們現在來稍微做一下說明，在這個地方我們分別引入這些區塊，這邊是將元件、以及相關的驗證設定檔，從 VeeValidate 給導出來，validation-provider 是 input&nbsp;驗證元件、validation-observer&nbsp;則是整體 &lt;form&gt;&nbsp;驗證元件，(extend)這邊是VeeValidate的一些擴充功能、(localize)是關於語系的設定、(configure)是VeeValidate的一些設定檔，這是針對繁體中文的一些語系設定，它這個可以直接導出、讓我們就可以直接運用，然後另外一個這是一個比較大、不同的地方就是 VeeValidate&nbsp;在新版的時候，它所有驗證都是把它規則化，像是我們要驗證 email 的時候，它就提供 email&nbsp;的驗證規則，一般來說它可以自己撰寫、另外一種方式就是直接使用它所提供的一些規則，這些規則我們就把它全部導出出來，就不需要一個一個導入了。</li><li>那我們再往下看，下面這個地方是我們剛剛所加入的其他設定檔，那麼大家可能會比較疑惑的是屬於這一段，這一段是我們會把剛剛的規則全部都導出出來，並且把它加到 VeeValidate&nbsp;的擴充的裡面，就是把它的規則預設其實是沒有加入進去，我們就必須手動的把它導出之後，再把它加進去。這樣你才可以運用這些規則。這邊是運用繁體中文的語系檔，另外下方有兩個元件、下面這邊有兩個元件，兩個元件我們會分別做介紹，其中一個是針對單一 input&nbsp;的驗證，另外一個是針對表單完整的 form&nbsp;表單進行驗證。另外最後還有關於 class&nbsp;name&nbsp;的一些設定檔，那麼這個 class name&nbsp;的設定檔目前這邊所撰寫的這兩行是針對 Bootstrap&nbsp;所進行驗證的一些 class name&nbsp;的設定，這個就是整個我們在導入新版的VeeValidate&nbsp;會加入的片段。</li><li>建議你可以先檢查一下你目前的程式碼有沒有正確的運行，照理說你在設定完成之後，你的環境是可以運行起來的，那這邊我們就把 main.js&nbsp;關掉，現在我們再回到我們這段程式碼來(CustomerOrders.vue)，這個是我們 CustomerOrders.vue&nbsp;這個頁面，對應的就是我們目前的訂購表單</li></ol>



<p>表單驗證補充單元未完成</p>



<pre class="wp-block-code"><code>//&nbsp;3.&nbsp;terminal
//&nbsp;解除安裝舊的 Vee-Validate 版本
npm uninstall vee-validate
//&nbsp;安裝新的版本 V3
npm install vee-validate --save</code></pre>



<pre class="wp-block-code"><code>//&nbsp;4.&nbsp;main.js 這兩行
VeeValidate.Validator.localize('zh_TW', zhTWValidate);
Vue.use(VeeValidate);
//&nbsp;引入的 vee-validate
import VeeValidate from 'vee-validate';
import zhTWValidate from 'vee-validate/dist/locale/zh_TW';</code></pre>



<pre class="wp-block-code"><code>//&nbsp;5.&nbsp;main.js

import { ValidationObserver, ValidationProvider, extend, localize, configure } from 'vee-validate';
import TW from 'vee-validate/dist/locale/zh_TW.json'
import * rules from 'vee-validate/dist/rules';

Object.keys(rules).forEach((rule) =&gt; {
  extend(rule, rules&#91;rule]);
});

localize('zh_TW', TW);

Vue.component('ValidationObserver', ValidationObserver)
Vue.component('ValidationProvider', ValidationProvider)

configure({
  classes: {
    valid: 'is-valid',
    invalid: 'is-invalid'
  }
});</code></pre>



<pre class="wp-block-code"><code>口誤：
validation-provider&nbsp;是 input&nbsp;驗證元件
validation-observer&nbsp;則是整體 &lt;form&gt;&nbsp;驗證元件</code></pre>



<h3>表單驗證補充文件</h3>



<p>第三版</p>



<h4>如何為單一表單(input)進行驗證</h4>



<ul><li><a href="https://logaretm.github.io/vee-validate/overview.html#installation" target="_blank" rel="noreferrer noopener">文件</a></li><li><a href="https://cdnjs.com/libraries/vee-validate" target="_blank" rel="noreferrer noopener">CDN</a></li></ul>



<h4>步驟一</h4>



<p>載入 vee-validate</p>



<pre class="wp-block-code"><code>npm install vee-validate --save</code></pre>



<h4>步驟二</h4>



<p>註冊全域的表單驗證元件 (ValidationProvider)</p>



<pre class="wp-block-code"><code>import { ValidationObserver, ValidationProvider, extend, localize, configure } from 'vee-validate';
import TW from 'vee-validate/dist/locale/zh_TW.json'
import * rules from 'vee-validate/dist/rules';

Object.keys(rules).forEach((rule) =&gt; {
  extend(rule, rules&#91;rule]);
});

localize('zh_TW', TW);

Vue.component('ValidationObserver', ValidationObserver)
Vue.component('ValidationProvider', ValidationProvider)

configure({
  classes: {
    valid: 'is-valid',
    invalid: 'is-invalid'
  }
});</code></pre>



<h4>步驟三</h4>



<ol><li>建立 validation-provider 元件：<ul><li>rules 帶上驗證的規則，規則列表可<a rel="noreferrer noopener" href="https://logaretm.github.io/vee-validate/guide/rules.html#rules" target="_blank">參考</a>。注意：規則之間不需要帶上空白鍵。</li><li>v-slot 帶上預計回傳的回饋內容，常用的可參考下方範例，完整列表可<a rel="noreferrer noopener" href="https://logaretm.github.io/vee-validate/api/validation-provider.html#scoped-slot-props" target="_blank">參考</a></li></ul></li><li>建立 input 欄位內容</li><li>將回饋帶至驗證 (v-slot 的內容)</li></ol>



<pre class="wp-block-code"><code>&lt;validation-provider rules="required|email" v-slot="{ errors }"&gt;
  &lt;!-- 輸入框 --&gt;
  &lt;label for="email"&gt;Email&lt;/label&gt;
  &lt;input id="email" type="email" name="email" v-model="email"
      class="form-control"&gt;
  &lt;!-- 錯誤訊息 --&gt;
  &lt;span&gt;{‌{ errors&#91;0] }}&lt;/span&gt;
&lt;/validation-provider&gt;</code></pre>



<blockquote class="wp-block-quote"><p>備註：v-slot 稱為插槽 (Vue 的元件語法之一)，可以將驗證結果的回饋資料直接帶入於區塊中，相關概念可參考：</p><cite><a href="https://cn.vuejs.org/v2/guide/components-slots.html#%E4%BD%9C%E7%94%A8%E5%9F%9F%E6%8F%92%E6%A7%BD" target="_blank" rel="noreferrer noopener">作用域插槽</a></cite></blockquote>



<h4>步驟四</h4>



<p>加入樣式，JavaScript 加入 Bootstrap 樣式設定，可使用以下設定，或<a rel="noreferrer noopener" href="https://logaretm.github.io/vee-validate/guide/state.html#css-classes" target="_blank">參考官方文件</a>。</p>



<pre class="wp-block-code"><code>// Class 設定檔案
VeeValidate.configure({
  classes: {
    valid: 'is-valid',
    invalid: 'is-invalid',
  }
});</code></pre>



<p>將 HTML 的部分進行更新</p>



<ul><li>v-slot 增加 classes</li><li>input 增加 :class=”classes”</li></ul>



<pre class="wp-block-code"><code>&lt;validation-provider rules="required|email" v-slot="{ errors, classes }"&gt;
  &lt;!-- 輸入框 --&gt;
  &lt;label for="email"&gt;Email&lt;/label&gt;
  &lt;input id="email" type="email" name="email" v-model="email"
    class="form-control" :class="classes"&gt;
  &lt;!-- 錯誤訊息 --&gt;
  &lt;span class="invalid-feedback"&gt;{‌{ errors&#91;0] }}&lt;/span&gt;
&lt;/validation-provider&gt;</code></pre>



<h4>步驟五</h4>



<p>增加多國語系的方法</p>



<ul><li><a rel="noreferrer noopener" href="https://logaretm.github.io/vee-validate/guide/localization.html#using-the-default-i18n" target="_blank">參考文件</a></li><li><a href="https://github.com/logaretm/vee-validate/tree/master/locale" target="_blank" rel="noreferrer noopener">語系檔案</a></li></ul>



<pre class="wp-block-code"><code>// 匯入語系檔案
import zh_TW from './zh_TW.js';
 
// 加入至 VeeValidate 的設定檔案
VeeValidate.localize('tw', zh_TW);</code></pre>



<p><a href="https://codepen.io/Wcc723/pen/ExPdGpX?editors=1010" target="_blank" rel="noreferrer noopener">範例 (不包含多國語系)</a></p>



<h4>如何為完整表單進行驗證</h4>



<h4>步驟一</h4>



<p>建立 validation-observer 元件：v-slot 帶上預計回傳的回饋內容，常用的可參考下方範例，完整列表可<a href="https://logaretm.github.io/vee-validate/api/validation-provider.html#scoped-slot-props" target="_blank" rel="noreferrer noopener">參考</a></p>



<pre class="wp-block-code"><code>&lt;validation-observer v-slot="{ invalid }"&gt;
&lt;/validation-observer&gt;</code></pre>



<h4>步驟二</h4>



<p>加入，方法可參考上篇的 「如何為單一表單(input)進行驗證」</p>



<h4>步驟三</h4>



<p>加入 &lt;form&gt; 標籤及 &lt;button&gt; 標籤：</p>



<ul><li>表單送出改為使用 form submit 的方法</li><li>送出表單使用 submit 的方法，如果驗證未通過則 disabled 該按鈕</li></ul>



<pre class="wp-block-code"><code>&lt;!-- validation-observer 驗證整體表單 --&gt;
&lt;validation-observer v-slot="{ invalid }"&gt;
  &lt;!-- 表單送出改為使用 form submit 的方法 --&gt;
  &lt;form @submit.prevent="submitForm"&gt;
    &lt;validation-provider rules="required|email" class="form-group" tag="div" v-slot="{ errors, classes, passed }"&gt;
      ...
    &lt;/validation-provider&gt;
    &lt;!-- 送出表單使用 submit 的方法，如果驗證未通過則 disabled 該按鈕 --&gt;
    &lt;button type="submit" class="btn btn-primary" :disabled="invalid"&gt;送出表單&lt;/button&gt;
  &lt;/form&gt;
&lt;/validation-observer&gt;</code></pre>



<p><a href="https://codepen.io/Wcc723/pen/zYrmeYP?editors=1010" target="_blank" rel="noreferrer noopener">完整範例</a></p>



<h4>使用 JS 觸發驗證</h4>



<ol><li>&lt;v-slot&gt; 加入 handleSubmit</li><li>表單送出改為 handleSubmit(自訂方法)</li></ol>



<pre class="wp-block-code"><code>&lt;validation-observer v-slot="{ handleSubmit }"&gt;
  &lt;form @submit.prevent="handleSubmit(submitForm)"&gt;
    ...
    &lt;button type="submit" class="btn btn-primary"&gt;送出表單&lt;/button&gt;
  &lt;/form&gt;
&lt;/validation-observer&gt;</code></pre>



<p><a href="https://codepen.io/Wcc723/pen/QWyZYjE?editors=1010" target="_blank" rel="noreferrer noopener">完整範例</a></p>



<h3>驗證補充說明</h3>



<p>由於驗證套件更新<br>所以方法略有些微調整<br>以下感謝 洪同學提供</p>



<p>vee-validate 更改語系的方法在 2.1.0-beta.24 版之後已經更改了，因此照著這個影片實作會無法中文化，以下是由老師爬 stack overflow 以及官方範例後的結果，希望能幫助到遇到同樣問題的大家。</p>



<ol><li>安裝 vue-i18n</li><li>在 main.js 中將 vue-i18n import 進來</li><li>將 VeeValidate.Validator.localize(‘zh_TW’, zhTWValidate) 及 Vue.use(VeeValidate) 刪除，並加入下列程式碼</li><li>在 Vue 物件中新增 i18n</li></ol>



<pre class="wp-block-code"><code>// 1. 在 terminal 中輸入
npm install vue-i18n --save</code></pre>



<pre class="wp-block-code"><code>// 2. main.js
import VueI18n from 'vue-i18n';
Vue.use(VueI18n);</code></pre>



<pre class="wp-block-code"><code>// 3.
const i18n = new VueI18n({
  locale: 'zhTW'
});
Vue.use(VeeValidate, {
  i18n,
  dictionary: {
    zhTW
  }
});</code></pre>



<pre class="wp-block-code"><code>// 4.
new Vue({
  i18n,
  el: '#app',
  components: { App },
  template: '&lt;App/&gt;',
  router,
})</code></pre>



<h3>結帳頁面製作</h3>



<p>操作與講解</p>



<ol><li>最後這個部分，我們要來做結帳的頁面，那我們先隨意加入一些商品到購物車內。</li><li>接下來我們到下面填寫表單的地方，我們把表單填寫完成，到目前這個階段我們都已經完成了，接下來我們按下送出訂單，送出訂單之後它會到達這個連結，它是 CustomerCheckout、然後後面會帶上這筆訂單的 id。那這筆訂單會呈現這個商品的資料、以及用戶所填寫的內容，用戶確認說這筆訂單就是他所填寫的部分，下面還會有一個付款狀態，那目前這個付款狀態是尚未付款的狀態。</li><li>當我們按下確認付款之後，他這個付款狀態也會有所更動。接下來我們按下確認付款，按下確認付款之後，你可以看到這個連結並沒有做變換，但是它會因為這筆訂單他已經付款完成、然後就把下面的文字做一些切換，並且把這個付款的連結把它拿掉。當這個付款完成之後，這個訂單列表它的付款狀態也會呈現已付款，那我們再回到上一個頁面。</li><li>最後這個章節主要介紹怎麼製作這個頁面，那我們先來看一下API。API的部分主要是有兩個、一個是取得某一筆特定的訂單，我們剛剛這個連結後面其實有帶上這筆訂單的id，我們就可以透過這筆id將特定的訂單內容把它取回來，那取得這筆訂單之後，我們就可以把這筆訂單的資料呈現出來、還有裡面有一個很重要的值就是它到底付款了沒，再往下我們可以看到結帳付款，主要觸發這個API就會將上面這筆訂單轉為已經付款完成的狀態。</li><li>我們來開始製作這個章節，在這個章節的部分，老師一樣會把HTML的Template直接提供給同學，那所以這個地方，同學不需要重刻這段HTML，我們在CustomerOrders.vue這裡其實還少一個步驟，就是我們在付款完成的時候，其實我們並沒有做跳頁，所以我們現在要先把另外一個checkout頁面先把它完成。</li><li>那我們在這個部分，我們就先新增一個檔案，叫做CustomerCheckout.vue，那我們先準備一個&lt;template&gt;裡面是&lt;div&gt;結帳確認&lt;/div&gt;，這個頁面完成之後，我們再到達Vue router的index.js，我們這個下面有另外一個是CustomerOrder，我們先複製一下這個物件，這個物件我們要做為載入另外一個Checkout的頁面使用，所以我們現在要把CustomerCheckout把它載進來、然後接下來我們將這個頁面放到我們這個元件上面來，我們在加上這個連結之後它還沒有完成，後面記得帶上/:orderId，完成之後我們就把這個連結(customer_checkout)先把它複製起來，然後我們回到這個CustomerOrders.vue的地方，我們在先前建立訂單的時候，這裡有收到一個response，那我們這裡先判斷一下 if (response.data.success)，我們這筆訂單如果確定建立完成之後，我們將這個頁面 vm.$router，這段我們在Vue router的課程有介紹過，我們可以使用router來轉換它的頁面，那麼router在轉換的時候，我們就可以把customer_checkout、然後後面再帶上這個order的id(${response.data.orderId})，這裡應該使用反引號才是正確的。</li><li>現在我們來試試看這個頁面有沒有正確的跳轉。確認購物車有資料，那我們輸入表單內容、然後按下送出訂單，送出訂單之後，這裡就有轉到customer_checkout，並且後面有帶上這筆訂單的id，那有這筆訂單的id之後，我們就可以開始撰寫接下來的 script。</li><li>我們打開 CustomerCheckout.vue 、我們來開始撰寫 script 的部分，script 的話一開始就是 export default，物件一開始我們要先定義資料結構 data()，return 這個地方我們就可以先加入 orderId，我們要先把 orderId 取得之後，我們才能取得其他的內容，那要取得 orderId 的話，我們在一開始的 created() 就可以來做取得了，取得的時候我們就可以使用 this的orderId等於this，這是我們在先前router 的課程有介紹到的一個方法，我們可以用這個方式來取得網址上的參數，那最後的參數(params)是指這一段.orderId，最後這個 orderId 是對應我們路由所自定義的名稱，這裡要特別注意，當你這兩個名稱(orderId)如果輸入不一致的話，是沒有辦法正確取得的。那我們來看一下這個 orderId 有沒有取得回來，那透過 console 來看一下這個 orderId 有沒有取得回來，那看起來是有的，這裡的名稱會和我們路徑上的名稱是一致的，有 orderId 之後就可以把資料內容給取得回來了。那取得的資料方式跟先前的方法都一樣，所以我們可以先複製先前所寫好的方法，那在這裡加上 methods、然後它是個物件、然後 getOrder()，那把相同內容貼進來，貼進來之後我們再來對應一下 API，這段 API 是使用 api_path/order 然後再對應 order_id，所以我們把這個 order 加過來、order 後面再加上 orderId，那 orderId 的話我們剛已經存起來，在 vm.orderId，現在可以用 get 的方式把這筆資料內容存起來，那我們存起來之前先來確認一下這筆資料是不是我們要的、存檔，資料取得回來之後，我們打開看一下、它是存放在 data 的 data 內，這邊要特別注意在 success 的旁邊還有一個 order，所以它不是直接存放於這個 data 內，它是存放在 order 內。那在這個 order 內會有這個產品列表、以及我的訂單的資料，所以在這個地方我們就可以把這個註解打開、改成 vm.order、然後 response.data.order，將我們現成的 template 貼進來。</li><li>現成的 template 貼進來，但是有些行為我們還沒加進來，所以我們要先把它移掉、存檔試試看，存檔之後它會發現說 email undefined，但其實 email 有在上面，原因是因為這個 email 是放在 user 下，它這裡已經跨第二層了，如果要避免跳出這個錯誤，比較簡單的方式是在 order: {} 下(裡)再新增 user 這一層，那這樣子的話它就不會跳出這樣子的錯誤、重新整理一次，現在就沒有跳出這個錯誤，並且有把整個訂單的資料完整的呈現出來，那資料都完整的呈現出來之後，這裡有一個確認付款去，所以我們再補上確認付款去的行為就可以了，所以我們在下方就可以再做一個 payOrder() 的一個行為，這邊我們可以複製我們先前寫好的程式碼、然後來稍作調整，結帳付款是在 api_path 下有一個 pay、然後後面接上 order_id 就可以直接付款，那我們在這個部分就可以使用 api、然後後面加上 pay、以及 orderId。在這個地方行為要特別注意，我們使用的是 post 的行為，後面的話這一段(vm.order = response.data.order;)可以移除，接下來這個地方記得把這個 payOrder() 加到我們上面的表單來，我們可以使用 @submit.prevent=”payOrder”。那我們來送出一次表單試試看、重新整理、打開 console 然後按下確認付款去，那確認付款去這裡就會顯示付款完成，那我們顯示付款完成，但是其實我們這個訂單還是呈現尚未付款，所以在下方程式碼的部分也要稍微做一些調整，假設它付款成功之後，我們可以跳出一個訊息，那跳出訊息之外，我們還可以重新取得訂單資料，它還可以再重新取得一次訂單資料，我們再重新整理一次，這個時候它就會轉換成付款完成，並且把它的付款連結也把它拿掉，這個時候如果進入訂單列表，假設你這個畫面已經完成的狀態，你也可以看到這個商品已經被付款完成，那這個就是最後付款結帳頁面。</li></ol>



<pre class="wp-block-code"><code>// 6. CustomerCheckout.vue
&lt;template&gt;
  &lt;div&gt;
    結帳確認
  &lt;/div&gt;
&lt;/template&gt;</code></pre>



<pre class="wp-block-code"><code>// 6. router/index.js
import Vue from 'vue'
import Router from 'vue-router'
// 之後都不會用到，可以直接移除
// import HelloWorld from '@/components/HelloWorld'
// 把Dashboard給載進來
import Dashboard from '@/components/Dashboard'
// 把Login給載進來
import Login from '@/components/pages/Login'
// 把Product給載進來
import Products from '@/components/pages/Products'
// 把Order給載進來
import Orders from '@/components/pages/Orders'
// 把Coupon給載進來
import Coupons from '@/components/pages/Coupons'
// 把CustomerOrder給載進來
import CustomerOrder from '@/components/pages/CustomerOrders' 
// 把CustomerCheckout給載進來
import CustomerCheckout from '@/components/pages/CustomerCheckout' 

// 解決重複導航
const inCludPush = Router.prototype.push
Router.prototype.push = function push(location) {
  return inCludPush.call(this, location).catch(err =&gt; err)
}

Vue.use(Router)

export default new Router({
  linkActiveClass: 'active',
  routes: &#91;
    // 重新導向
    {
      path: '*',
      // redirect: 'login',
      redirect: 'shop/customer_order',
    },
    // 之後都不會用到，可以直接移除
    // // 首頁的路徑
    // {
    //   path: '/',
    //   name: 'HelloWorld',
    //   component: HelloWorld,
    //   meta: { requiresAuth: true }
    // },
    // 新增一個登入的路徑
    {
      path: '/login',
      name: 'Login',
      component: Login,
    },
    // Dashboard的路徑
    {
      path: '/admin',
      name: 'Dashboard',
      component: Dashboard,
      // 設定 meta 是否需要驗證
      meta: { requiresAuth: true },
      children: &#91;
        {
          path: 'products',
          name: 'Products',
          component: Products,
          meta: { requiresAuth: true },
        },
        // Orders的路徑
        {
          path: 'orders',
          name: 'Orders',
          component: Orders,
          meta: { requiresAuth: true },
        },
        // Coupons的路徑
        {
          path: 'coupons',
          name: 'Coupons',
          component: Coupons,
          meta: { requiresAuth: true },
        },
      ],
    },
    // 客戶購物的路徑(使用與Dashboard相同的模板)
    {
      // path: '/',
      // name: 'Dashboard',
      path: '/shop',
      name: 'DashboardCustomerOrder',
      component: Dashboard,
      // 設定 meta 是否需要驗證
      meta: { requiresAuth: true },
      children: &#91;
        // CustomerOrder的路徑
        {
          path: 'customer_order',
          name: 'CustomerOrder',
          component: CustomerOrder,
        },
        // CustomerCheckout的路徑 
        {
          path: 'customer_checkout/:orderId',
          name: 'CustomerCheckout',
          component: CustomerCheckout,
        },
      ],
    },
  ]
})
</code></pre>



<h5>結帳頁面製作範例程式碼</h5>



<pre class="wp-block-code"><code>// index.js
import Vue from 'vue'
import Router from 'vue-router'
// 之後都不會用到，可以直接移除
// import HelloWorld from '@/components/HelloWorld'
// 把Dashboard給載進來
import Dashboard from '@/components/Dashboard'
// 把Login給載進來
import Login from '@/components/pages/Login'
// 把Product給載進來
import Products from '@/components/pages/Products'
// 把Order給載進來
import Orders from '@/components/pages/Orders'
// 把Coupon給載進來
import Coupons from '@/components/pages/Coupons'
// 把CustomerOrder給載進來
import CustomerOrder from '@/components/pages/CustomerOrders' 
// 把CustomerCheckout給載進來
import CustomerCheckout from '@/components/pages/CustomerCheckout' 



Vue.use(Router)

export default new Router({
  linkActiveClass: 'active',
  routes: &#91;
    // 重新導向
    {
      path: '*',
      // redirect: 'login',
      redirect: 'shop/customer_order',
    },
    // 之後都不會用到，可以直接移除
    // // 首頁的路徑
    // {
    //   path: '/',
    //   name: 'HelloWorld',
    //   component: HelloWorld,
    //   meta: { requiresAuth: true }
    // },
    // 新增一個登入的路徑
    {
      path: '/login',
      name: 'Login',
      component: Login,
    },
    // Dashboard的路徑
    {
      path: '/admin',
      name: 'Dashboard',
      component: Dashboard,
      // 設定 meta 是否需要驗證
      meta: { requiresAuth: true },
      children: &#91;
        {
          path: 'products',
          name: 'Products',
          component: Products,
          meta: { requiresAuth: true },
        },
        // Orders的路徑
        {
          path: 'orders',
          name: 'Orders',
          component: Orders,
          meta: { requiresAuth: true },
        },
        // Coupons的路徑
        {
          path: 'coupons',
          name: 'Coupons',
          component: Coupons,
          meta: { requiresAuth: true },
        },
      ],
    },
    // 客戶購物的路徑(使用與Dashboard相同的模板)
    {
      // path: '/',
      // name: 'Dashboard',
      path: '/shop',
      name: 'DashboardCustomerOrder',
      component: Dashboard,
      // 設定 meta 是否需要驗證
      meta: { requiresAuth: true },
      children: &#91;
        // CustomerOrder的路徑
        {
          path: 'customer_order',
          name: 'CustomerOrder',
          component: CustomerOrder,
        },
        // CustomerCheckout的路徑 
        {
          path: 'customer_checkout/:orderId',
          name: 'CustomerCheckout',
          component: CustomerCheckout,
        },
      ],
    },
  ]
})
</code></pre>



<pre class="wp-block-code"><code>// CustomerOrders.vue
&lt;template&gt;
  &lt;div&gt;
    &lt;loading :active.sync="isLoading"&gt;&lt;/loading&gt;
    &lt;div class="row mt-4"&gt;
      &lt;div class="col-md-4 mb-4" v-for="item in products" :key="item.id"&gt;
        &lt;div class="card border-0 shadow-sm"&gt;
          &lt;div style="height: 150px; background-size: cover; background-position: center"
            :style="{backgroundImage: `url(${item.imageUrl})`}"&gt;
          &lt;/div&gt;
          &lt;div class="card-body"&gt;
            &lt;span class="badge badge-secondary float-right ml-2"&gt;{{ item.category }}&lt;/span&gt;
            &lt;h5 class="card-title"&gt;
              &lt;a href="#" class="text-dark"&gt;{{ item.title }}&lt;/a&gt;
            &lt;/h5&gt;
            &lt;p class="card-text"&gt;{{ item.content }}&lt;/p&gt;
            &lt;div class="d-flex justify-content-between align-items-baseline"&gt;
              &lt;div class="h5" v-if="!item.price"&gt;{{ item.origin_price }}&lt;/div&gt;
              &lt;del class="h6" v-if="item.price"&gt;原價 {{ item.origin_price }} 元&lt;/del&gt;
              &lt;div class="h5" v-if="item.price"&gt;現在只要 {{ item.price }} 元&lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="card-footer d-flex"&gt;
            &lt;button type="button" class="btn btn-outline-secondary btn-sm"
              @click="getProduct(item.id)"&gt;
              &lt;i class="fas fa-spinner fa-spin" v-if="status.loadingItem === item.id"&gt;&lt;/i&gt;
              查看更多
            &lt;/button&gt;
            &lt;button type="button" class="btn btn-outline-danger btn-sm ml-auto"
              @click="addtoCart(item.id)"&gt;
              &lt;i class="fas fa-spinner fa-spin" v-if="status.loadingItem === item.id"&gt;&lt;/i&gt;
              加到購物車
            &lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;!-- Modal CustomerOrders --&gt;
    &lt;div class="modal fade" id="productModal" tabindex="-1" role="dialog"
      aria-labelledby="exampleModalLabel" aria-hidden="true"&gt;
      &lt;div class="modal-dialog" role="document"&gt;
        &lt;div class="modal-content"&gt;
          &lt;div class="modal-header"&gt;
            &lt;h5 class="modal-title" id="exampleModalLabel"&gt;{{ product.title }}&lt;/h5&gt;
            &lt;button type="button" class="close" data-dismiss="modal" aria-label="Close"&gt;
              &lt;span aria-hidden="true"&gt;&amp;times;&lt;/span&gt;
            &lt;/button&gt;
          &lt;/div&gt;
          &lt;div class="modal-body"&gt;
            &lt;img :src="product.imageUrl" class="img-fluid" alt=""&gt;
            &lt;blockquote class="blockquote mt-3"&gt;
              &lt;p class="mb-0"&gt;{{ product.content }}&lt;/p&gt;
              &lt;footer class="blockquote-footer text-right"&gt;{{ product.description }}&lt;/footer&gt;
            &lt;/blockquote&gt;
            &lt;div class="d-flex justify-content-between align-items-baseline"&gt;
              &lt;div class="h4" v-if="!product.price"&gt;{{ product.origin_price }} 元&lt;/div&gt;
              &lt;del class="h6" v-if="product.price"&gt;原價 {{ product.origin_price }} 元&lt;/del&gt;
              &lt;div class="h4" v-if="product.price"&gt;現在只要 {{ product.price }} 元&lt;/div&gt;
            &lt;/div&gt;
            &lt;select name="" class="form-control mt-3" v-model="product.num"&gt;
              &lt;option :value="num" v-for="num in 10" :key="num"&gt;
                選購 {{ num }} {{ product.unit }}
              &lt;/option&gt;
            &lt;/select&gt;
          &lt;/div&gt;
          &lt;div class="modal-footer"&gt;
            &lt;div class="text-muted text-nowrap mr-3"&gt;
              小計 &lt;strong&gt;{{ product.num * product.price }}&lt;/strong&gt; 元
            &lt;/div&gt;
            &lt;button type="button" class="btn btn-primary"
              @click="addtoCart(product.id, product.num)"&gt;
              &lt;!-- &lt;i class="fas fa-spinner fa-spin" v-if="product.id === status.loadingItem"&gt;&lt;/i&gt; --&gt;
              加到購物車
            &lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;!-- 購物車列表 --&gt;
    &lt;div class="my-5 row justify-content-center"&gt;
      &lt;div class="col-md-6"&gt;
        &lt;table class="table"&gt;
          &lt;thead&gt;
            &lt;th&gt;&lt;/th&gt;
            &lt;th&gt;品名&lt;/th&gt;
            &lt;th&gt;數量&lt;/th&gt;
            &lt;th&gt;單價&lt;/th&gt;
          &lt;/thead&gt;
          &lt;tbody&gt;
            &lt;tr v-for="item in cart.carts" :key="item.id" v-if="cart.carts"&gt;
              &lt;td class="align-middle"&gt;
                &lt;button type="button" class="btn btn-outline-danger btn-sm"
                  @click="removeCartItem(item.id)"&gt;
                  &lt;i class="far fa-trash-alt"&gt;&lt;/i&gt;
                &lt;/button&gt;
              &lt;/td&gt;
              &lt;td class="align-middle"&gt;
                {{ item.product.title }}
                &lt;div class="text-success" v-if="item.coupon"&gt;
                  已套用優惠券
                &lt;/div&gt;
              &lt;/td&gt;
              &lt;td class="align-middle"&gt;{{ item.qty }}/{{ item.product.unit }}&lt;/td&gt;
              &lt;td class="align-middle text-right"&gt;{{ item.final_total }}&lt;/td&gt;
            &lt;/tr&gt;
          &lt;/tbody&gt;
          &lt;tfoot&gt;
            &lt;tr&gt;
              &lt;td colspan="3" class="text-right"&gt;總計&lt;/td&gt;
              &lt;td class="text-right"&gt;{{ cart.total }}&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr v-if="cart.final_total !== cart.total"&gt;
              &lt;td colspan="3" class="text-right text-success"&gt;折扣價&lt;/td&gt;
              &lt;td class="text-right text-success"&gt;{{ cart.final_total }}&lt;/td&gt;
            &lt;/tr&gt;
          &lt;/tfoot&gt;
        &lt;/table&gt;
        &lt;div class="input-group mb-3 input-group-sm"&gt;
          &lt;input type="text" class="form-control" v-model="coupon_code" placeholder="請輸入優惠碼"&gt;
          &lt;div class="input-group-append"&gt;
            &lt;button class="btn btn-outline-secondary" type="button" @click="addCouponCode"&gt;
              套用優惠碼
            &lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;!-- 建立訂購表單 --&gt;
    &lt;div class="my-5 row justify-content-center"&gt;
      &lt;form class="col-md-6" @submit.prevent="createOrder"&gt;
        &lt;div class="form-group"&gt;
          &lt;label for="useremail"&gt;Email&lt;/label&gt;
          &lt;input type="email" class="form-control" name="email" id="useremail"
            v-validate="'required|email'"
            :class="{'is-invalid': errors.has('email')}"
            v-model="form.user.email" placeholder="請輸入 Email"&gt;
          &lt;span class="text-danger" v-if="errors.has('email')"&gt;
            {{ errors.first('email') }}
          &lt;/span&gt;
        &lt;/div&gt;
      
        &lt;div class="form-group"&gt;
          &lt;label for="username"&gt;收件人姓名&lt;/label&gt;
          &lt;input type="text" class="form-control" name="name" id="username"
            :class="{'is-invalid': errors.has('name')}"
            v-model="form.user.name" v-validate="'required'" placeholder="輸入姓名"&gt;
          &lt;span class="text-danger" v-if="errors.has('name')"&gt;姓名必須輸入&lt;/span&gt;
        &lt;/div&gt;
      
        &lt;div class="form-group"&gt;
          &lt;label for="usertel"&gt;收件人電話&lt;/label&gt;
          &lt;input type="tel" class="form-control" name="tel" id="usertel"
            :class="{'is-invalid': errors.has('tel')}"
            v-model="form.user.tel" v-validate="'required'" placeholder="請輸入電話"&gt;
          &lt;span class="text-danger" v-if="errors.has('tel')"&gt;電話欄位不得留空&lt;/span&gt;
        &lt;/div&gt;
      
        &lt;div class="form-group"&gt;
          &lt;label for="useraddress"&gt;收件人地址&lt;/label&gt;
          &lt;input type="text" class="form-control" name="address" id="useraddress"
            :class="{'is-invalid': errors.has('address')}"
            v-model="form.user.address" v-validate="'required'" placeholder="請輸入地址"&gt;
          &lt;span class="text-danger" v-if="errors.has('address')"&gt;地址欄位不得留空&lt;/span&gt;
        &lt;/div&gt;
      
        &lt;div class="form-group"&gt;
          &lt;label for="comment"&gt;留言&lt;/label&gt;
          &lt;textarea name="" id="comment" class="form-control" cols="30" rows="10" v-model="form.message"&gt;&lt;/textarea&gt;
        &lt;/div&gt;
        &lt;div class="text-right"&gt;
          &lt;button class="btn btn-danger"&gt;送出訂單&lt;/button&gt;
        &lt;/div&gt;
      &lt;/form&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
import $ from 'jquery';

export default {
  data() {
    return {
      products: &#91;],
      product: {},
      status: {
        loadingItem: '',
      },
      form: {
        user: {
          name: '',
          email: '',
          tel: '',
          address: '',
        },
        message: '',
      },
      cart: {},
      isLoading: false,
      coupon_code: '',
    };
  },
  methods: {
    getProducts() {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/products`;
      vm.isLoading = true;
      this.$http.get(url).then((response) =&gt; {
        vm.products = response.data.products;
        // console.log(response);
        vm.isLoading = false;
      });
    },
    // 取得單一產品
    getProduct(id) {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/product/${id}`;
      // vm.isLoading = true;
      vm.status.loadingItem = id;
      this.$http.get(url).then((response) =&gt; {
        vm.product = response.data.product;
        $('#productModal').modal('show');
        // console.log(response);
        // vm.isLoading = false;
        vm.status.loadingItem = '';
        vm.product.num = 1; // 所有商品初始值設置為 1
      });
    },
    // 加入購物車
    addtoCart(id, qty = 1) {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/cart`;
      // vm.isLoading = true;
      vm.status.loadingItem = id;
      const cart = {
        product_id: id,
        qty,
      };
      this.$http.post(url, { data: cart }).then((response) =&gt; {
        console.log(response);
        // vm.isLoading = false;
        vm.status.loadingItem = '';
        vm.getCart();
        $('#productModal').modal('hide');
      });
    },
    // 取得購物車的內容
    getCart() {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/cart`;
      vm.isLoading = true;
      this.$http.get(url).then((response) =&gt; {
        // vm.products = response.data.products;
        vm.cart = response.data.data;
        // console.log(response);
        vm.isLoading = false;
      });
    },
    // 刪除購物車品項
    removeCartItem(id) {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/cart/${id}`;
      vm.isLoading = true;
      this.$http.delete(url).then(() =&gt; {
        vm.getCart();
        vm.isLoading = false;
      });
    },
    // 新增優惠碼
    addCouponCode() {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/coupon`;
      const coupon = {
        code: vm.coupon_code,
      };
      vm.isLoading = true;
      this.$http.post(url, { data: coupon }).then((response) =&gt; {
        // console.log(response);
        vm.getCart();
        vm.isLoading = false;
      });
    },
    // 建立訂購表單
    createOrder() {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/order`;
      const order = vm.form;
      // vm.isLoading = true;
      this.$validator.validate().then((result) =&gt; {
        if (result) {
          this.$http.post(url, { data: order }).then((response) =&gt; {
            console.log('訂單已建立', response);
            if (response.data.success) {
              vm.$router.push(`/shop/customer_checkout/${response.data.orderId}`);
            }
            // vm.getCart();
            vm.isLoading = false;
          });
        } else {
          console.log('欄位不完整');
        }
      });
    },
  },
  created() {
    this.getProducts();
    this.getCart();
  },
};
&lt;/script&gt;</code></pre>



<pre class="wp-block-code"><code>// CustomerCheckout.vue
&lt;template&gt;
  &lt;div class="my-5 row justify-content-center"&gt;
    &lt;form class="col-md-6" @submit.prevent="payOrder"&gt;
      &lt;table class="table"&gt;
        &lt;thead&gt;
          &lt;th&gt;品名&lt;/th&gt;
          &lt;th&gt;數量&lt;/th&gt;
          &lt;th&gt;單價&lt;/th&gt;
        &lt;/thead&gt;
        &lt;tbody&gt;
          &lt;tr v-for="item in order.products" :key="item.id"&gt;
            &lt;td class="align-middle"&gt;{{ item.product.title }}&lt;/td&gt;
            &lt;td class="align-middle"&gt;{{ item.qty }}/{{ item.product.unit }}&lt;/td&gt;
            &lt;td class="align-middle text-right"&gt;{{ item.final_total }}&lt;/td&gt;
          &lt;/tr&gt;
        &lt;/tbody&gt;
        &lt;tfoot&gt;
          &lt;tr&gt;
            &lt;td colspan="2" class="text-right"&gt;總計&lt;/td&gt;
            &lt;td class="text-right"&gt;{{ order.total }}&lt;/td&gt;
          &lt;/tr&gt;
        &lt;/tfoot&gt;
      &lt;/table&gt;

      &lt;table class="table"&gt;
        &lt;tbody&gt;
          &lt;tr&gt;
            &lt;th width="100"&gt;Email&lt;/th&gt;
            &lt;td&gt;{{ order.user.email }}&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;姓名&lt;/th&gt;
            &lt;td&gt;{{ order.user.name }}&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;收件人電話&lt;/th&gt;
            &lt;td&gt;{{ order.user.tel }}&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;收件人地址&lt;/th&gt;
            &lt;td&gt;{{ order.user.address }}&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;th&gt;付款狀態&lt;/th&gt;
            &lt;td&gt;
              &lt;span v-if="!order.is_paid"&gt;尚未付款&lt;/span&gt;
              &lt;span v-else class="text-success"&gt;付款完成&lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
        &lt;/tbody&gt;
      &lt;/table&gt;
      &lt;div class="text-right" v-if="order.is_paid === false"&gt;
        &lt;button class="btn btn-danger"&gt;確認付款去&lt;/button&gt;
      &lt;/div&gt;
    &lt;/form&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  data() {
    return {
      order: {
        user: {},
      },
      orderId: '',
    };
  },
  methods: {
    getOrder() {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/order/${vm.orderId}`;
      vm.isLoading = true;
      this.$http.get(url).then((response) =&gt; {
        vm.order = response.data.order;
        console.log(response);
        vm.isLoading = false;
      });
    },
    payOrder() {
      const vm = this;
      const url = `${process.env.APIPATH}/api/${process.env.CUSTOMPATH}/pay/${vm.orderId}`;
      vm.isLoading = true;
      this.$http.post(url).then((response) =&gt; {
        console.log(response);
        if (response.data.success) {
          vm.getOrder();
        }
        vm.isLoading = false;
      });
    },
  },
  created() {
    this.orderId = this.$route.params.orderId;
    this.getOrder();
    console.log(this.orderId);
  },
};
&lt;/script&gt;</code></pre>



<h3>最終作業寄送變更</h3>



<p>依照課程指示。</p>



<h3 class="has-background" style="background-color:#ff6663">最終作業說明</h3>



<p>操作與講解</p>



<ol><li>這個專案到目前為止都完成了差不多了，目前我們都是使用 npm run dev 的方式在運行這個專案，但我們不可能使用這個 webpack 直接給別人看，我們必定要編譯完成之後上傳到正式的伺服器。</li><li>在做最後的編譯之前，跟同學分享一些小地方。我們到目前為止都是使用 npm run dev，那這裡面所使用的設定檔是使用 config/dev.env.js 這個檔案，裡面就包含 APIPATH、以及 CUSTOMPATH。但如果說你在編譯的時候沒有把這些設定檔加到 config/prod.env.js 裡面的話，你的正式釋出的檔案是不會包含這些內容的，所以在這裡，你在釋出前記得把 APIPATH、以及 CUSTOMPATH 把它加進來，加進來之後你在進行 npm run build 才能把這些內容都加進去。</li><li>現在來執行 npm run build，執行完之後這裡就有寫到這些檔案必需在 HTTP server 下面才能運行。如果你直接打開的話，在 file 的路徑下是沒有辦法運行的，接下來我們把這個資料夾打開，在上傳前建議還是檢查一下這個檔案有沒有問題，這個時候一樣就可以把它丟在 VSCode 裡面來，然後透過我們先前所介紹的 preview on web server 就可以快速地檢視這個檔案。現在是登入的狀態，我先把它登出。登出之後、接下來(在網址)輸入 adminProducts 是沒有辦法進去的，我們就一定要輸入帳密，輸入帳密之後才能正確進來我們的 admin 後台。</li><li>這裡再跟同學分享另外一個小地方，假設我們所釋出的檔案並不是在這個根目錄下，就不是在這個 Domain 下的話，我們先把後面的路徑刪掉。假設我們所釋出的路徑不是直接在這個 Domain 下，而是在其他的路徑下，像是這邊我再加一個 vue-testing，我是加在這個 vue-testing 下的話，我們就要另外做一些些調整。</li><li>調整的方式我們可以把 config/index.js 打開，裡面有一個 build、然後下方可以找到 assetPublicPath，那這個是針對編譯後的路徑來做調整，所以這個時候如果我把 vue-testing 這個路徑加進來，再運行 npm run build 我們就可以在這個目錄下運行，假設如果你沒有加入這一段的話，它就只能在根目錄的 Domain 下才能運行這個專案。那這裡就跟同學分享一下這一段。</li><li>最後我們在講一下作業的部分，最後的作業的部分就有分為前台跟後台，那前台跟後台同學都可以選擇使用老師所提供的版型、 Bootstrap 的版型、或自定義版型都是可以的。當然也希望同學可以經營成屬於自己主題的購物網站，那圖庫的話，你可以使用 unsplash 這個網站圖庫，細節的話有些部分希望同學可以自己做加強，像是錯誤回饋的部分，同學可以加上連線、以及表單的錯誤回饋…等等，然後還有增加 Vue 的 Component 使用，另外還有一個、希望同學的作品都可以有增加多一點的獨特性，所以盡量去自定義 Bootstrap 的樣式、色彩，然後不要只使用預設的樣式。</li><li>那作業交送的方式有兩種，一種是直接寄給我們，寄給我們的話請不要包含 node_modules 這個資料夾，這個資料夾非常的大，而且你上傳給我的話，我還是必需要重新安裝。那另外一個比較推薦的做法是你直接將這個 dist 資料夾上傳到 GitHub Pages，那前後台的原始碼上傳到 GitHub，相關連結直接提供到 Udemy 問答區，你都提供完之後，老師就會來做檢視。如果沒有問題的話，大家來開始練習吧。</li></ol>



<pre class="wp-block-code"><code>// config/prod.env.js

'use strict'
module.exports = {
  NODE_ENV: '"production"',
  APIPATH: '"https://vue-course-api.hexschool.io/"',
  CUSTOMPATH: '"geehsu"',
}
</code></pre>



<h3>最終作業文件</h3>



<p>最終作業說明<br><br>注意：每個最終作業限制<strong>檢視三次</strong>，講師會在每次檢視後回覆的剩餘批改次數。<br><br>在第一次提交時：</p>



<ul><li>請提供 GitHub 及 GitHub Page 兩種版本</li><li>確保 GitHub 上的程式碼下載後可正確運行，並修正 Console 所有錯誤</li></ul>



<p>重新提交檢視時：</p>



<ul><li>請確保修正完講師的所有建議</li><li>如有疑問可回覆詢問講師 (詢問不會算次數)</li><li>若是課程觀念問題請提交至線上問答區</li></ul>



<p>課程中提供完整的 API 與後台教學<br>同學的作業是完成此作品，並上傳至 Github Pages<br>那麼同學就來完成此作業吧</p>



<ul><li>後台：可使用 Bootstrap 的 Dashboard 版型、或自選撰寫 CSS、上網下載其他版型皆可</li><li>前台：可使用課程提供的免費版型或自定義版型</li><li>經營成屬於自己主題的購物網站</li><li>圖庫可用：<a rel="noreferrer noopener" href="https://unsplash.com/" target="_blank">unsplash</a></li><li>細節要求：<ul><li>增加錯誤回饋如：連線錯誤、表單錯誤等錯誤訊息提示</li><li>增加 Vue 元件的使用，如頁碼、Modal、卡片都可運用 Component 練習</li><li>自定義 Bootstrap 的樣式、色彩，盡可能不使用預設的樣式</li></ul></li><li>作業前後台需要釋出至 Github Pages 或寄送到 service@hexschool.com<br>另外必需提供原始碼給老師查閱(不然有錯很難抓阿~)</li></ul>



<p>作業寄送：</p>



<ol><li>推薦做法：<br>編譯後的檔案(dist) 上傳至 Github Pages<br>前後台原始碼上傳至 Github<br>將相關連結提供到<a rel="noreferrer noopener" href="https://rpg.hexschool.com/login" target="_blank">任務系統回報任務</a><br><br>Github Pages 基礎部屬教學 –&nbsp;<a rel="noreferrer noopener" href="https://www.youtube.com/watch?v=bU0f1IvUcZA" target="_blank">連結</a></li></ol>



<p>如果作業希望做為應徵作品集使用<br>可在回覆時增加：<strong>希望作為履歷作品集的一部分</strong><br><br>作業審核標準會不太一樣，許多內容將針對畫面處理給予建議<br><strong>希望作為履歷作品集的一部分</strong>盡可能以 “接近實際運作的網站” 經營，<br>以下部分可先多加強</p>



<ul><li>網頁主要文案 (怎麼吸引用戶在這個網站購買)</li><li>產品文案可多加調整 (吸引用戶買該產品)</li><li>網頁可增加互動性內容 (我的最愛、類似品項、優惠券介紹…)</li></ul>



<p>可參考同學們的作品 (連結頁面下方) –&nbsp;<a href="https://www.hexschool.com/qa/how-to.html" target="_blank" rel="noreferrer noopener">連結</a></p>



<p>Github 部屬時，如果出現資源路徑錯誤<br>則需要調整設定檔的路徑</p>



<pre class="wp-block-code"><code>// ./config/index.js

build: {
  // ...
  assetsPublicPath: '/view', // 修改這裡得值，使其對應 Github Pages 的路徑

}</code></pre>



<p>接下來輸出後，再把 dist 資料夾推到 gh-pages 分支</p>



<p>如果使用 npm run build 時遇到類似下方的錯誤訊息：</p>



<pre class="wp-block-code"><code>⠋ building for production.../.../node_modules/last-call-webpack-plugin/src/index.js:170
  compiler.hooks.compilation.tap(
    ^
TypeError: Cannot read property 'compilation' of undefined</code></pre>



<p>因為部分套件更新導致錯誤，可以打開 package.json 調整套件版號如下：</p>



<pre class="wp-block-code"><code>"optimize-css-assets-webpack-plugin": "3.2.0",</code></pre>



<p>此講座的資源</p>



<ul><li>shoppingCartTemplate.zip (在 Udemy 課程內下載)</li></ul>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Build Web Apps With Vue JS 3 &#038; Firebase (1)</title>
		<link>/wordpress_blog/vuejs3firebase-1/</link>
		
		<dc:creator><![CDATA[gee.hsu]]></dc:creator>
		<pubDate>Wed, 16 Feb 2022 07:01:00 +0000</pubDate>
				<category><![CDATA[The Net Ninja]]></category>
		<guid isPermaLink="false">/wordpress_blog/?p=536</guid>

					<description><![CDATA[Learn Vue JS 3 &#38; Firebase by [&#8230;]]]></description>
										<content:encoded><![CDATA[
<blockquote class="wp-block-quote"><p>Learn Vue JS 3 &amp; Firebase by creating &amp; deploying dynamic web apps (including Authentication).</p><cite>建立者: The Net Ninja (Shaun Pelling)</cite></blockquote>



<h3>您會學到</h3>



<ul><li>Learn how to create Vue 3 applications from the ground-up</li><li>Get in-depth knowledge of Vue features like the Vue Router, Vue CLI, Options API, Composition API, Teleport etc</li><li>Get hands-on &amp; in-depth experience using the latest Vue 3 features (such as the Composition API)</li><li>Learn how to use Firebase as a back-end to your Vue applications (as a database, authentication service, hosting etc)</li><li>Build &amp; deploy 4 real-word web apps with Vue &amp; Firebase</li><li>Learn how to implement an authentication system into your Vue js apps using Firebase Auth</li><li>Become a Vue 3 ninja!</li></ul>



<h2>第1節：Introduction &amp; Setup</h2>



<h3>What is Vue?</h3>



<h4>What is Vue?</h4>



<ul><li>Front-end, JavaScript / TypeScript framework</li><li>Used to create dynamic &amp; data-driven websites (SPA’s)</li><li>Can also be used to create stand-alone widgets</li></ul>



<h4>Vue Widgets</h4>



<figure class="wp-block-image size-full"><img loading="lazy" width="1536" height="823" src="/wordpress_blog/wp-content/uploads/2022/04/Vue-Widgets.png" alt="" class="wp-image-538"/><figcaption>Vue Widgets</figcaption></figure>



<h4>Vue Websites</h4>



<ul><li>Vue is used to create a whole website with multiple pages &amp; components</li><li>These websites are normally called Single Page Applications</li><li>All routing is done in the browser &amp; not on the server</li></ul>



<h4>Typical non-Vue Websites</h4>



<figure class="wp-block-gallery has-nested-images columns-1 is-cropped">
<figure class="wp-block-image size-large"><img loading="lazy" width="1755" height="603" data-id="545"  src="/wordpress_blog/wp-content/uploads/2022/04/Typical-non-Vue-Websites-01.png" alt="" class="wp-image-545"/><figcaption>Typical non-Vue Website 01</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1765" height="615" data-id="546"  src="/wordpress_blog/wp-content/uploads/2022/04/Typical-non-Vue-Websites-02.png" alt="" class="wp-image-546"/><figcaption>Typical non-Vue Website 02</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1743" height="579" data-id="547"  src="/wordpress_blog/wp-content/uploads/2022/04/Typical-non-Vue-Websites-03.png" alt="" class="wp-image-547"/><figcaption>Typical non-Vue Website 03</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1769" height="605" data-id="548"  src="/wordpress_blog/wp-content/uploads/2022/04/Typical-non-Vue-Websites-04.png" alt="" class="wp-image-548"/><figcaption>Typical non-Vue Website 04</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1759" height="705" data-id="549"  src="/wordpress_blog/wp-content/uploads/2022/04/Typical-non-Vue-Websites-05.png" alt="" class="wp-image-549"/><figcaption>Typical non-Vue Website 05</figcaption></figure>
</figure>



<h4>Vue Websites</h4>



<figure class="wp-block-gallery has-nested-images columns-1 is-cropped">
<figure class="wp-block-image size-large"><img loading="lazy" width="1747" height="609" data-id="554"  src="/wordpress_blog/wp-content/uploads/2022/04/Vue-Websites-01.png" alt="" class="wp-image-554"/><figcaption>Vue Websites 01</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1743" height="595" data-id="552"  src="/wordpress_blog/wp-content/uploads/2022/04/Vue-Websites-02.png" alt="" class="wp-image-552"/><figcaption>Vue Websites 02</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1741" height="571" data-id="553"  src="/wordpress_blog/wp-content/uploads/2022/04/Vue-Websites-03.png" alt="" class="wp-image-553"/><figcaption>Vue Websites 03</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1747" height="593" data-id="551"  src="/wordpress_blog/wp-content/uploads/2022/04/Vue-Websites-04.png" alt="" class="wp-image-551"/><figcaption>Vue Websites 04</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1745" height="597" data-id="555"  src="/wordpress_blog/wp-content/uploads/2022/04/Vue-Websites-05.png" alt="" class="wp-image-555"/><figcaption>Vue Websites 05</figcaption></figure>
</figure>



<h4>Single Page Application (SPA)</h4>



<ul><li>Only a single HTML page sent (initially) to the browser</li><li>Vue intercepts subsequent requests and handles “page” changes in the browser by swapping what components are shown on the page</li><li>Results in a much faster and smoother website experience</li></ul>



<h3>New Features in Vue 3</h3>



<h4>Vue 3 New Features</h4>



<h4>The Composition API</h4>



<ul><li>Improves on reusablility, organization &amp; readability</li><li>It does this by giving us a new setup( ) function</li></ul>



<h4>Multiple Root Elements</h4>



<ul><li>Can have many root elements side-by-side in a component</li></ul>



<pre class="wp-block-code"><code>&lt;template&gt;
  &lt;div&gt;
    &lt;p&gt;Hello, World!&lt;/p&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;p&gt;Hello, again!&lt;/p&gt;
  &lt;/div&gt;
&lt;/template&gt;</code></pre>



<h4>Teleport Component</h4>



<ul><li>Render content from one component in a different place in the DOM</li><li>Useful for things like modals</li></ul>



<h4>Suspense Component</h4>



<ul><li>Used to handle asynchronous components easily</li><li>Can provide fall-back content (e.g. a spinner) until data is loaded</li></ul>



<h4>TypeScript Support</h4>



<ul><li>Can now write Vue applications using TypeScript</li></ul>



<h4>More Changes</h4>



<ul><li>Multiple v-models for custom components</li><li>Improved Reactivity</li><li>Performance gains</li></ul>



<h3>What You Should Already Know</h3>



<h4>資源</h4>



<ul><li><a rel="noreferrer noopener" href="https://www.youtube.com/c/TheNetNinja" target="_blank">Net Ninja Youtube Channel (more free tutorials)</a></li><li><a rel="noreferrer noopener" href="https://www.udemy.com/course/modern-javascript-from-novice-to-ninja/" target="_blank">Modern JavaScript Course</a></li><li><a href="https://www.youtube.com/watch?v=hu-q2zYwEYs&amp;list=PL4cUxeGkcC9ivBf_eKCPIAYXWzLlPAm6G" target="_blank" rel="noreferrer noopener">HTML &amp; CSS Free Crash Course</a></li></ul>



<h4>Before You Start…</h4>



<ul><li>Understand the foundations of JavaScript<ul><li>functions, objects, arrays, etc</li></ul></li><li>HTML &amp; (some) CSS</li></ul>



<h3>Environment Setup</h3>



<ul><li>網頁編輯器：VSCode</li><li>擴充套件(Extensions)：Live Server、Vetur、Material Icon Theme</li></ul>



<h3>Course Files</h3>



<h4>資源</h4>



<ul><li><a rel="noreferrer noopener" href="https://github.com/iamshaunjp/Vue-3-Firebase" target="_blank">GitHub Course Files</a></li><li><a href="https://github.com/iamshaunjp/Vue-3-Firebase/blob/Installing-Dependencies/README.md" target="_blank" rel="noreferrer noopener">Guide for using the course files (for later lessons)</a></li></ul>



<h2>Vue Basics</h2>



<h3>How to use Vue (using the CDN)</h3>



<h4>資源</h4>



<ul><li><a href="https://v3.vuejs.org/guide/introduction.html" target="_blank" rel="noreferrer noopener">Vue Documentation</a></li></ul>



<h4>Vue CDN</h4>



<ul><li>使用以下版本</li></ul>



<pre class="wp-block-code"><code>&lt;script src="https://unpkg.com/vue@3.0.2"&gt;&lt;/script&gt;</code></pre>



<h4>操作步驟</h4>



<ul><li>&lt;script&gt; 載入 Vue CDN vue@3.0.2 版本</li><li>新增 app.js 檔案</li><li>&lt;script&gt; 載入 app.js</li></ul>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Learning Vue&lt;/title&gt;
  &lt;script src="https://unpkg.com/vue@3.0.2"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Hello, Vue :)&lt;/h1&gt;

  &lt;script src="app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// app.js

console.log('hello, vue')</code></pre>



<h3>Creating a Vue App</h3>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Learning Vue&lt;/title&gt;
  &lt;script src="https://unpkg.com/vue@3.0.2"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Hello, Vue :)&lt;/h1&gt;

  &lt;div id="app"&gt;
    &lt;h2&gt;I am the template now&lt;/h2&gt;
  &lt;/div&gt;


  &lt;script src="app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// app.js

const app = Vue.createApp({
  // data, functions
  // template: '&lt;h2&gt;I am the template&lt;/h2&gt;'
})

app.mount('#app')</code></pre>



<h3>Templates &amp; Data</h3>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Learning Vue&lt;/title&gt;
  &lt;script src="https://unpkg.com/vue@3.0.2"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Hello, Vue :)&lt;/h1&gt;

  &lt;div id="app"&gt;
    &lt;p&gt;{{ title }} - {{ author }} - {{ age }}&lt;/p&gt;
  &lt;/div&gt;


  &lt;script src="app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// app.js

const app = Vue.createApp({
  data() {
    return {
      title: 'The Final Empire',
      author: 'Brandon Sanderson',
      age: 45
    }
  }
})

app.mount('#app')</code></pre>



<h3>Methods &amp; Click Events</h3>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Learning Vue&lt;/title&gt;
  &lt;script src="https://unpkg.com/vue@3.0.2"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Hello, Vue :)&lt;/h1&gt;

  &lt;div id="app"&gt;
    &lt;p&gt;{{ title }} - {{ author }} - {{ age }}&lt;/p&gt;

    &lt;button v-on:click="age++"&gt;Increase age&lt;/button&gt;
    &lt;button v-on:click="age--"&gt;Decrease age&lt;/button&gt;
    &lt;div @click="changeTitle('Oathbringer')"&gt;Change book title&lt;/div&gt;
  &lt;/div&gt;


  &lt;script src="app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// app.js

const app = Vue.createApp({
  data() {
    return {
      title: 'The Final Empire',
      author: 'Brandon Sanderson',
      age: 45
    }
  },
  methods: {
    changeTitle(title) {
      // this.title = 'Words of Randiance'
      this.title = title
    }
  }
})

app.mount('#app')</code></pre>



<h3>Conditional Rendering (條件渲染)</h3>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Learning Vue&lt;/title&gt;
  &lt;script src="https://unpkg.com/vue@3.0.2"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Hello, Vue :)&lt;/h1&gt;

  &lt;div id="app"&gt;
    &lt;div v-if="showBooks"&gt;
      &lt;p&gt;{{ title }} - {{ author }} - {{ age }}&lt;/p&gt;
    &lt;/div&gt;

    &lt;button @click="toggleShowBooks"&gt;
      &lt;span v-if="showBooks"&gt;Hide Books&lt;/span&gt;
      &lt;span v-else&gt;Show Books&lt;/span&gt;
    &lt;/button&gt;

    &lt;div v-show="showBooks"&gt;currently showing books&lt;/div&gt;
  &lt;/div&gt;


  &lt;script src="app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// app.js

const app = Vue.createApp({
  data() {
    return {
      showBooks: true,
      title: 'The Final Empire',
      author: 'Brandon Sanderson',
      age: 45
    }
  },
  methods: {
    toggleShowBooks() {
      this.showBooks = !this.showBooks
    }
  }
})

app.mount('#app')</code></pre>



<h3>Other Mouse Events</h3>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Learning Vue&lt;/title&gt;
  &lt;script src="https://unpkg.com/vue@3.0.2"&gt;&lt;/script&gt;
  &lt;style&gt;
    .box {
      padding: 100px 0;
      width: 400px;
      text-align: center;
      background: #ddd;
      margin: 20px;
      display: inline-block;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Hello, Vue :)&lt;/h1&gt;

  &lt;div id="app"&gt;
    &lt;div v-if="showBooks"&gt;
      &lt;p&gt;{{ title }} - {{ author }} - {{ age }}&lt;/p&gt;
    &lt;/div&gt;

    &lt;button @click="toggleShowBooks"&gt;
      &lt;span v-if="showBooks"&gt;Hide Books&lt;/span&gt;
      &lt;span v-else&gt;Show Books&lt;/span&gt;
    &lt;/button&gt;

    &lt;br&gt;
    &lt;!-- mouse events --&gt;
    &lt;div class="box" @mouseover="handleEvent($event, 5)"&gt;mouseover (enter)&lt;/div&gt;
    &lt;div class="box" @mouseleave="handleEvent"&gt;mouseleave&lt;/div&gt;
    &lt;div class="box" @dblclick="handleEvent"&gt;double click&lt;/div&gt;
    &lt;div class="box" @mousemove="handleMousemove"&gt;position - {{ x }} {{ y }}&lt;/div&gt;
    
  &lt;/div&gt;

  &lt;script src="app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// app.js

const app = Vue.createApp({
  data() {
    return {
      showBooks: true,
      title: 'The Final Empire',
      author: 'Brandon Sanderson',
      age: 45,
      x: 0,
      y: 0
    }
  },
  methods: {
    toggleShowBooks() {
      this.showBooks = !this.showBooks
    },
    handleEvent(e, data) {
      console.log(e, e.type)
      if (data) {
        console.log(data)
      }
    },
    handleMousemove(e) {
      this.x = e.offsetX
      this.y = e.offsetY
    }
  }
})

app.mount('#app')</code></pre>



<h3>Outputting Lists (v-for)</h3>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Learning Vue&lt;/title&gt;
  &lt;script src="https://unpkg.com/vue@3.0.2"&gt;&lt;/script&gt;
  &lt;style&gt;
    .box {
      padding: 100px 0;
      width: 400px;
      text-align: center;
      background: #ddd;
      margin: 20px;
      display: inline-block;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Hello, Vue :)&lt;/h1&gt;

  &lt;div id="app"&gt;
    &lt;div v-if="showBooks"&gt;
      &lt;ul&gt;
        &lt;li v-for="book in books"&gt;
          &lt;h3&gt;{{ book.title }}&lt;/h3&gt;
          &lt;p&gt;{{ book.author }}&lt;/p&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;

    &lt;button @click="toggleShowBooks"&gt;
      &lt;span v-if="showBooks"&gt;Hide Books&lt;/span&gt;
      &lt;span v-else&gt;Show Books&lt;/span&gt;
    &lt;/button&gt;

    
  &lt;/div&gt;

  &lt;script src="app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// app.js

const app = Vue.createApp({
  data() {
    return {
      showBooks: true,
      books: &#91;
        { title: 'name of the wind', author: 'patrick rothfuss'},
        { title: 'the way of kings', author: 'brandon sanderson'},
        { title: 'the final empire', author: 'brandon sanderson'},
      ]
    }
  },
  methods: {
    toggleShowBooks() {
      this.showBooks = !this.showBooks
    },
  }
})

app.mount('#app')</code></pre>



<h3>Attribute Binding</h3>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Learning Vue&lt;/title&gt;
  &lt;script src="https://unpkg.com/vue@3.0.2"&gt;&lt;/script&gt;
  &lt;style&gt;
    .box {
      padding: 100px 0;
      width: 400px;
      text-align: center;
      background: #ddd;
      margin: 20px;
      display: inline-block;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Hello, Vue :)&lt;/h1&gt;

  &lt;div id="app"&gt;
    &lt;!-- attribute binding --&gt;
    &lt;!-- &lt;a :href="url"&gt;Best website ever&lt;/a&gt; --&gt;

    &lt;div v-if="showBooks"&gt;
      &lt;ul&gt;
        &lt;li v-for="book in books"&gt;
          &lt;img :src="book.img" :alt="book.title"&gt;
          &lt;h3&gt;{{ book.title }}&lt;/h3&gt;
          &lt;p&gt;{{ book.author }}&lt;/p&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;

    &lt;button @click="toggleShowBooks"&gt;
      &lt;span v-if="showBooks"&gt;Hide Books&lt;/span&gt;
      &lt;span v-else&gt;Show Books&lt;/span&gt;
    &lt;/button&gt;

    
  &lt;/div&gt;

  &lt;script src="app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// app.js

const app = Vue.createApp({
  data() {
    return {
      url: 'http://www.thenetninja.co.uk/',
      showBooks: true,
      books: &#91;
        { title: 'name of the wind', author: 'patrick rothfuss', img: 'assets/1.jpg'},
        { title: 'the way of kings', author: 'brandon sanderson', img: 'assets/2.jpg'},
        { title: 'the final empire', author: 'brandon sanderson', img: 'assets/3.jpg'},
      ]
    }
  },
  methods: {
    toggleShowBooks() {
      this.showBooks = !this.showBooks
    },
  }
})

app.mount('#app')</code></pre>



<h4>縮寫</h4>



<pre class="wp-block-code"><code>v-on = @
v-bind = :</code></pre>



<h3>Dynamic Classes</h3>



<h4>資源</h4>



<ul><li><a href="https://www.youtube.com/watch?v=Y8zMYaD1bz0&amp;list=PL4cUxeGkcC9i3FXJSUfmsNOx8E7u6UuhG" target="_blank" rel="noreferrer noopener">Free Flexbox Tutorial</a></li></ul>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Learning Vue&lt;/title&gt;
  &lt;script src="https://unpkg.com/vue@3.0.2"&gt;&lt;/script&gt;
  &lt;style&gt;
    body {
      background: #eee;
      max-width: 960px;
      margin: 20px auto;
    }
    p, h3, ul {
      margin: 0;
      padding: 0;
    }
    li {
      list-style-type: none;
      background: #fff;
      margin: 20px auto;
      padding: 10px 20px;
      border-radius: 10px;
      display: flex;
      align-items: center;
      justify-content: space-between;
    }
    li.fav {
      background: #ff9ed2;
      color: #fff;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Hello, Vue :)&lt;/h1&gt;

  &lt;div id="app"&gt;
    &lt;!-- attribute binding --&gt;
    &lt;!-- &lt;a :href="url"&gt;Best website ever&lt;/a&gt; --&gt;

    &lt;div v-if="showBooks"&gt;
      &lt;ul&gt;
        &lt;li v-for="book in books" :class="{ fav: book.isFav }"&gt;
          &lt;img :src="book.img" :alt="book.title"&gt;
          &lt;h3&gt;{{ book.title }}&lt;/h3&gt;
          &lt;p&gt;{{ book.author }}&lt;/p&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;

    &lt;button @click="toggleShowBooks"&gt;
      &lt;span v-if="showBooks"&gt;Hide Books&lt;/span&gt;
      &lt;span v-else&gt;Show Books&lt;/span&gt;
    &lt;/button&gt;

  &lt;/div&gt;

  &lt;script src="app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// app.js

const app = Vue.createApp({
  data() {
    return {
      url: 'http://www.thenetninja.co.uk/',
      showBooks: true,
      books: &#91;
        { title: 'name of the wind', author: 'patrick rothfuss', img: 'assets/1.jpg', isFav: true },
        { title: 'the way of kings', author: 'brandon sanderson', img: 'assets/2.jpg', isFav: false },
        { title: 'the final empire', author: 'brandon sanderson', img: 'assets/3.jpg', isFav: true },
      ]
    }
  },
  methods: {
    toggleShowBooks() {
      this.showBooks = !this.showBooks
    },
  }
})

app.mount('#app')</code></pre>



<h3 class="has-background" style="background-color:#ff6663">CHALLENGE – Add to Favs</h3>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Learning Vue&lt;/title&gt;
  &lt;script src="https://unpkg.com/vue@3.0.2"&gt;&lt;/script&gt;
  &lt;style&gt;
    body {
      background: #eee;
      max-width: 960px;
      margin: 20px auto;
    }
    p, h3, ul {
      margin: 0;
      padding: 0;
    }
    li {
      list-style-type: none;
      background: #fff;
      margin: 20px auto;
      padding: 10px 20px;
      border-radius: 10px;
      display: flex;
      align-items: center;
      justify-content: space-between;
    }
    li.fav {
      background: #ff9ed2;
      color: #fff;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Hello, Vue :)&lt;/h1&gt;

  &lt;div id="app"&gt;
    &lt;!-- attribute binding --&gt;
    &lt;!-- &lt;a :href="url"&gt;Best website ever&lt;/a&gt; --&gt;

    &lt;div v-if="showBooks"&gt;
      &lt;ul&gt;
        &lt;li v-for="book in books" :class="{ fav: book.isFav }"&gt;
          &lt;img :src="book.img" :alt="book.title"&gt;
          &lt;h3&gt;{{ book.title }}&lt;/h3&gt;
          &lt;p&gt;{{ book.author }}&lt;/p&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;

    &lt;button @click="toggleShowBooks"&gt;
      &lt;span v-if="showBooks"&gt;Hide Books&lt;/span&gt;
      &lt;span v-else&gt;Show Books&lt;/span&gt;
    &lt;/button&gt;

    
  &lt;/div&gt;

  &lt;script src="app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// app.js

const app = Vue.createApp({
  data() {
    return {
      url: 'http://www.thenetninja.co.uk/',
      showBooks: true,
      books: &#91;
        { title: 'name of the wind', author: 'patrick rothfuss', img: 'assets/1.jpg', isFav: true },
        { title: 'the way of kings', author: 'brandon sanderson', img: 'assets/2.jpg', isFav: false },
        { title: 'the final empire', author: 'brandon sanderson', img: 'assets/3.jpg', isFav: true },
      ]
    }
  },
  methods: {
    toggleShowBooks() {
      this.showBooks = !this.showBooks
    },
  }
})

app.mount('#app')

// Challenge - Add to Favs
// - attach a click event to each li tag (for each book)
// - when a user clicks an li, toggle the 'isFav' property of that book</code></pre>



<h3 class="has-background" style="background-color:#ff6663">SOLUTION – Add to Favs</h3>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Learning Vue&lt;/title&gt;
  &lt;script src="https://unpkg.com/vue@3.0.2"&gt;&lt;/script&gt;
  &lt;style&gt;
    body {
      background: #eee;
      max-width: 960px;
      margin: 20px auto;
    }
    p, h3, ul {
      margin: 0;
      padding: 0;
    }
    li {
      list-style-type: none;
      background: #fff;
      margin: 20px auto;
      padding: 10px 20px;
      border-radius: 10px;
      display: flex;
      align-items: center;
      justify-content: space-between;
    }
    li.fav {
      background: #ff9ed2;
      color: #fff;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Hello, Vue :)&lt;/h1&gt;

  &lt;div id="app"&gt;
    &lt;!-- attribute binding --&gt;
    &lt;!-- &lt;a :href="url"&gt;Best website ever&lt;/a&gt; --&gt;

    &lt;div v-if="showBooks"&gt;
      &lt;ul&gt;
        &lt;li v-for="book in books" :class="{ fav: book.isFav }" @click="toggleFav(book)"&gt;
          &lt;img :src="book.img" :alt="book.title"&gt;
          &lt;h3&gt;{{ book.title }}&lt;/h3&gt;
          &lt;p&gt;{{ book.author }}&lt;/p&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;

    &lt;button @click="toggleShowBooks"&gt;
      &lt;span v-if="showBooks"&gt;Hide Books&lt;/span&gt;
      &lt;span v-else&gt;Show Books&lt;/span&gt;
    &lt;/button&gt;
    
  &lt;/div&gt;

  &lt;script src="app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// app.js

const app = Vue.createApp({
  data() {
    return {
      url: 'http://www.thenetninja.co.uk/',
      showBooks: true,
      books: &#91;
        { title: 'name of the wind', author: 'patrick rothfuss', img: 'assets/1.jpg', isFav: true },
        { title: 'the way of kings', author: 'brandon sanderson', img: 'assets/2.jpg', isFav: false },
        { title: 'the final empire', author: 'brandon sanderson', img: 'assets/3.jpg', isFav: true },
      ]
    }
  },
  methods: {
    toggleShowBooks() {
      this.showBooks = !this.showBooks
    },
    toggleFav(book) {
      book.isFav = !book.isFav
    }
  }
})

app.mount('#app')

// Challenge - Add to Favs
// - attach a click event to each li tag (for each book)
// - when a user clicks an li, toggle the 'isFav' property of that book</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Computes Properties</h3>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Learning Vue&lt;/title&gt;
  &lt;script src="https://unpkg.com/vue@3.0.2"&gt;&lt;/script&gt;
  &lt;style&gt;
    body {
      background: #eee;
      max-width: 960px;
      margin: 20px auto;
    }
    p, h3, ul {
      margin: 0;
      padding: 0;
    }
    li {
      list-style-type: none;
      background: #fff;
      margin: 20px auto;
      padding: 10px 20px;
      border-radius: 10px;
      display: flex;
      align-items: center;
      justify-content: space-between;
    }
    li.fav {
      background: #ff9ed2;
      color: #fff;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Hello, Vue :)&lt;/h1&gt;

  &lt;div id="app"&gt;
    &lt;!-- attribute binding --&gt;
    &lt;!-- &lt;a :href="url"&gt;Best website ever&lt;/a&gt; --&gt;

    &lt;div v-if="showBooks"&gt;
      &lt;ul&gt;
        &lt;li v-for="book in filteredBooks" :class="{ fav: book.isFav }" @click="toggleFav(book)"&gt;
          &lt;img :src="book.img" :alt="book.title"&gt;
          &lt;h3&gt;{{ book.title }}&lt;/h3&gt;
          &lt;p&gt;{{ book.author }}&lt;/p&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;

    &lt;button @click="toggleShowBooks"&gt;
      &lt;span v-if="showBooks"&gt;Hide Books&lt;/span&gt;
      &lt;span v-else&gt;Show Books&lt;/span&gt;
    &lt;/button&gt;
    
  &lt;/div&gt;

  &lt;script src="app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// app.js

const app = Vue.createApp({
  data() {
    return {
      url: 'http://www.thenetninja.co.uk/',
      showBooks: true,
      books: &#91;
        { title: 'name of the wind', author: 'patrick rothfuss', img: 'assets/1.jpg', isFav: true },
        { title: 'the way of kings', author: 'brandon sanderson', img: 'assets/2.jpg', isFav: false },
        { title: 'the final empire', author: 'brandon sanderson', img: 'assets/3.jpg', isFav: true },
      ]
    }
  },
  methods: {
    toggleShowBooks() {
      this.showBooks = !this.showBooks
    },
    toggleFav(book) {
      book.isFav = !book.isFav
    }
  },
  computed: {
    filteredBooks() {
      return this.books.filter((book) =&gt; book.isFav)
    }
  }
})

app.mount('#app')
</code></pre>



<h2>第3節：The Vue CLI (for Bigger Projects)</h2>



<h3>Why Use the Vue CLI?</h3>



<h4>Vue Websites</h4>



<ul><li>Use modern JavaScript features</li><li>Provides us with a live-reload dev server</li><li>Optimize our code for production</li></ul>



<h3 class="has-background" style="background-color:#ff6663">How to Use the Vue CLI</h3>



<ul><li>Node.js – 必要</li><li>Command line – 必要，Node.js command prompt、終端機、命令提示字元</li><li>Node.js 版本查詢 node -v</li><li>Vue CLI，npm install -g @vue/cli</li><li>移動到專案位置，cd 專案名稱位置</li><li>執行指令 vue create modal-project</li></ul>



<h4>關於舊版本</h4>



<p>Vue CLI 的包名稱由&nbsp;<code>vue-cli</code>&nbsp;改成了<code>@vue/cli</code>。如果你已經全局安裝了舊版本的<code>vue-cli</code>(1.x 或2.x)，你需要先通過&nbsp;<code>npm uninstall vue-cli -g</code>&nbsp;或&nbsp;<code>yarn global remove vue-cli</code>&nbsp;卸載它。</p>



<ul><li><a href="https://cli.vuejs.org/zh/guide/installation.html" target="_blank" rel="noreferrer noopener">Vue CLI 安裝連結</a></li></ul>



<h4>執行指令步驟 vue create modal-project</h4>



<ul><li>Manually select features</li><li>Check the features needed for your project:<ul><li>Choose Vue version</li><li>Babel</li></ul></li><li>Choose a version of Vue.js that you want to start the project with<ul><li>3.x</li></ul></li><li>Where do you prefer placing config for Babel, ESLint, etc.?<ul><li>In dedicated config files</li></ul></li><li>Save this as a preset for future projects<ul><li>N</li></ul></li></ul>



<h4>安裝完成後指令</h4>



<ul><li>cd 專案名稱</li><li>使用 code . 打開 VSCode 編輯器</li></ul>



<h3>New Project Walkthrough</h3>



<h3>Vue Files &amp; Templates</h3>



<h4>打開 VSCode 終端機</h4>



<ul><li>執行指令：npm run serve</li></ul>



<pre class="wp-block-code"><code>// App.vue

&lt;template&gt;
  &lt;h1&gt;{{ title }}&lt;/h1&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  name: 'App',
  data() {
    return {
      title: 'My First Vue App :)'
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
}
h1 {
  border-bottom: 1px solid #ddd;
  display: inline-block;
  padding-bottom: 10px;
}
&lt;/style&gt;
</code></pre>



<h4>下載 GitHub Course Files 須知</h4>



<ul><li>安裝 node_modules</li><li>開啟 Terminal</li><li>執行指令 npm install</li></ul>



<h3>Template Refs (模板引用)</h3>



<pre class="wp-block-code"><code>// App.vue

&lt;template&gt;
  &lt;h1&gt;{{ title }}&lt;/h1&gt;
  &lt;input type="text" ref="name"&gt;
  &lt;button @click="handleClick"&gt;click me&lt;/button&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  name: 'App',
  data() {
    return {
      title: 'My First Vue App :)'
    }
  },
  methods: {
    handleClick() {
      console.log(this.$refs.name)
      this.$refs.name.classList.add('active')
      this.$refs.name.focus()
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
}
h1 {
  border-bottom: 1px solid #ddd;
  display: inline-block;
  padding-bottom: 10px;
}
&lt;/style&gt;
</code></pre>



<h3>Multiple Components</h3>



<h4>Multiple Components</h4>



<ul><li>App.vue – root component<ul><li>Header.vue</li><li>Article.vue<ul><li>Content.vue</li><li>Comments.vue</li></ul></li><li>Footer.vue</li></ul></li></ul>



<h4>Terminology</h4>



<ul><li>Article.vue – parent component<ul><li>Content.vue, Comments.vue – child components</li></ul></li><li>App.vue – parent component<ul><li>Header.vue, Article.vue, Footer.vue- child components</li></ul></li></ul>



<p>Component Tree，App.vue, Header.vue, Article.vue, Footer,vue, Content.vue, Comments.vue。</p>



<h4>操作步驟</h4>



<ul><li>移除 Components 裡面的 HelloWorld.vue</li><li>在 Components 裡面新增 Modal.vue</li></ul>



<pre class="wp-block-code"><code>// Modal.vue

&lt;template&gt;
  &lt;div class="backdrop"&gt;
    &lt;div class="modal"&gt;
      &lt;p&gt;modal content&lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;style&gt;
  .modal {
    width: 400px;
    padding: 20px;
    margin: 100px auto;
    background: white;
    border-radius: 10px;
  }
  .backdrop {
    top: 0;
    position: fixed;
    background: rgba(0,0,0,0.5);
    width: 100%;
    height: 100%;
  }
&lt;/style&gt;</code></pre>



<pre class="wp-block-code"><code>// App.vue

&lt;template&gt;
  &lt;h1&gt;{{ title }}&lt;/h1&gt;
  &lt;Modal /&gt;
&lt;/template&gt;

&lt;script&gt;
import Modal from './components/Modal.vue'

export default {
  name: 'App',
  components: { Modal },
  data() {
    return {
      title: 'My First Vue App :)'
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
}
h1 {
  border-bottom: 1px solid #ddd;
  display: inline-block;
  padding-bottom: 10px;
}
&lt;/style&gt;
</code></pre>



<h3>Component Styles &amp; Global Styles</h3>



<h4>Modal.vue style 設定方式</h4>



<ul><li>&lt;style&gt; 加上 scoped</li><li>make the selector more specific</li></ul>



<pre class="wp-block-code"><code>// Modal.vue - 1

&lt;template&gt;
  &lt;div class="backdrop"&gt;
    &lt;div class="modal"&gt;
      &lt;h1&gt;Modal Title&lt;/h1&gt;
      &lt;p&gt;modal content&lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;style scoped&gt;
  .modal {
    width: 400px;
    padding: 20px;
    margin: 100px auto;
    background: white;
    border-radius: 10px;
  }
  .backdrop {
    top: 0;
    position: fixed;
    background: rgba(0,0,0,0.5);
    width: 100%;
    height: 100%;
  }
  h1 {
    color: #03cfb4;
    border: none;
    padding: 0;
  }
&lt;/style&gt;</code></pre>



<pre class="wp-block-code"><code>// Modal.vue - 2

&lt;template&gt;
  &lt;div class="backdrop"&gt;
    &lt;div class="modal"&gt;
      &lt;h1&gt;Modal Title&lt;/h1&gt;
      &lt;p&gt;modal content&lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;style&gt;
  .modal {
    width: 400px;
    padding: 20px;
    margin: 100px auto;
    background: white;
    border-radius: 10px;
  }
  .backdrop {
    top: 0;
    position: fixed;
    background: rgba(0,0,0,0.5);
    width: 100%;
    height: 100%;
  }
  .modal h1 {
    color: #03cfb4;
    border: none;
    padding: 0;
  }
&lt;/style&gt;</code></pre>



<h4>global styles</h4>



<ul><li>新增 global.css 在 assets 資料夾裡面</li><li>設定進入點 main.js import 匯入 global.css 檔案</li><li>覆蓋 global.css 樣式，在 Modal.vue 修改樣式</li></ul>



<pre class="wp-block-code"><code>// assets/global.css

body {
  margin: 0;
}
p {
  font-style: italic;
}</code></pre>



<pre class="wp-block-code"><code>// src/main.js

import { createApp } from 'vue'
import App from './App.vue'
import './assets/global.css'

createApp(App).mount('#app')
</code></pre>



<pre class="wp-block-code"><code>// components/Modal.vue

&lt;template&gt;
  &lt;div class="backdrop"&gt;
    &lt;div class="modal"&gt;
      &lt;h1&gt;Modal Title&lt;/h1&gt;
      &lt;p&gt;modal content&lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;style&gt;
  .modal {
    width: 400px;
    padding: 20px;
    margin: 100px auto;
    background: white;
    border-radius: 10px;
  }
  .backdrop {
    top: 0;
    position: fixed;
    background: rgba(0,0,0,0.5);
    width: 100%;
    height: 100%;
  }
  .modal h1 {
    color: #03cfb4;
    border: none;
    padding: 0;
  }
  .modal p {
    font-style: normal;
  }
&lt;/style&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Passing Data with Props (使用 Props 傳遞資料)</h3>



<h4>we do this by using what’s known as props in vue, and we can pass props from a parent component to a child component</h4>



<h4>為什麼我們要這樣做，兩個原因</h4>



<ul><li>more dynamic and more reusable(可重複使用的)</li><li>multiple components and they all use the same data</li></ul>



<pre class="wp-block-code"><code>// App.vue - 1

&lt;template&gt;
  &lt;h1&gt;{{ title }}&lt;/h1&gt;
  &lt;Modal header="Sign up for the Giveway!" text="Grab your ninja swag for half price!" /&gt;
&lt;/template&gt;

&lt;script&gt;
import Modal from './components/Modal.vue'

export default {
  name: 'App',
  components: { Modal },
  data() {
    return {
      title: 'My First Vue App :)'
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
}
h1 {
  border-bottom: 1px solid #ddd;
  display: inline-block;
  padding-bottom: 10px;
}
&lt;/style&gt;
</code></pre>



<pre class="wp-block-code"><code>// Modal.vue - 1

&lt;template&gt;
  &lt;div class="backdrop"&gt;
    &lt;div class="modal"&gt;
      &lt;h1&gt;{{ header }}&lt;/h1&gt;
      &lt;p&gt;{{ text }}&lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  props: &#91;'header', 'text']
}
&lt;/script&gt;

&lt;style&gt;
  .modal {
    width: 400px;
    padding: 20px;
    margin: 100px auto;
    background: white;
    border-radius: 10px;
  }
  .backdrop {
    top: 0;
    position: fixed;
    background: rgba(0,0,0,0.5);
    width: 100%;
    height: 100%;
  }
  .modal h1 {
    color: #03cfb4;
    border: none;
    padding: 0;
  }
  .modal p {
    font-style: normal;
  }
&lt;/style&gt;</code></pre>



<pre class="wp-block-code"><code>// App.vue - 2

&lt;template&gt;
  &lt;h1&gt;{{ title }}&lt;/h1&gt;
  &lt;Modal :header="header" :text="text" /&gt;
&lt;/template&gt;

&lt;script&gt;
import Modal from './components/Modal.vue'

export default {
  name: 'App',
  components: { Modal },
  data() {
    return {
      title: 'My First Vue App :)',
      header: 'Sign up for the Giveway',
      text: 'Grab your ninja swag for half price!'
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
}
h1 {
  border-bottom: 1px solid #ddd;
  display: inline-block;
  padding-bottom: 10px;
}
&lt;/style&gt;
</code></pre>



<pre class="wp-block-code"><code>// Modal.vue - 2

&lt;template&gt;
  &lt;div class="backdrop"&gt;
    &lt;div class="modal"&gt;
      &lt;h1&gt;{{ header }}&lt;/h1&gt;
      &lt;p&gt;{{ text }}&lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  props: &#91;'header', 'text']
}
&lt;/script&gt;

&lt;style&gt;
  .modal {
    width: 400px;
    padding: 20px;
    margin: 100px auto;
    background: white;
    border-radius: 10px;
  }
  .backdrop {
    top: 0;
    position: fixed;
    background: rgba(0,0,0,0.5);
    width: 100%;
    height: 100%;
  }
  .modal h1 {
    color: #03cfb4;
    border: none;
    padding: 0;
  }
  .modal p {
    font-style: normal;
  }
&lt;/style&gt;</code></pre>



<pre class="wp-block-code"><code>// App.vue - 3

&lt;template&gt;
  &lt;h1&gt;{{ title }}&lt;/h1&gt;
  &lt;Modal :header="header" :text="text" theme="sale" /&gt;
&lt;/template&gt;

&lt;script&gt;
import Modal from './components/Modal.vue'

export default {
  name: 'App',
  components: { Modal },
  data() {
    return {
      title: 'My First Vue App :)',
      header: 'Sign up for the Giveway',
      text: 'Grab your ninja swag for half price!'
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
}
h1 {
  border-bottom: 1px solid #ddd;
  display: inline-block;
  padding-bottom: 10px;
}
&lt;/style&gt;
</code></pre>



<pre class="wp-block-code"><code>// Modal.vue - 3

&lt;template&gt;
  &lt;div class="backdrop"&gt;
    &lt;div class="modal" :class="{ sale: theme === 'sale'}"&gt;
      &lt;h1&gt;{{ header }}&lt;/h1&gt;
      &lt;p&gt;{{ text }}&lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  props: &#91;'header', 'text', 'theme']
}
&lt;/script&gt;

&lt;style&gt;
  .modal {
    width: 400px;
    padding: 20px;
    margin: 100px auto;
    background: white;
    border-radius: 10px;
  }
  .backdrop {
    top: 0;
    position: fixed;
    background: rgba(0,0,0,0.5);
    width: 100%;
    height: 100%;
  }
  .modal h1 {
    color: #03cfb4;
    border: none;
    padding: 0;
  }
  .modal p {
    font-style: normal;
  }

  .modal.sale {
    background: crimson;
    color: white;
  }
  .modal.sale h1 {
    color: white;
  }
&lt;/style&gt;</code></pre>



<p>And this is how we pass data as props into components, which A makes them more reusable, B makes them customizable, and C allows us to have a single source of truth when it comes to data.</p>



<h3 class="has-background" style="background-color:#ff6663">Emitting Custom Events</h3>



<p>show / hide Modal</p>



<pre class="wp-block-code"><code>// App.vue

&lt;template&gt;
  &lt;h1&gt;{{ title }}&lt;/h1&gt;
  &lt;p&gt;Welcome...&lt;/p&gt;
  &lt;div v-if="showModal"&gt;
    &lt;Modal :header="header" :text="text" theme="sale" @close="toggleModal" /&gt;
  &lt;/div&gt;
  &lt;button @click="toggleModal"&gt;open modal&lt;/button&gt;
&lt;/template&gt;

&lt;script&gt;
import Modal from './components/Modal.vue'

export default {
  name: 'App',
  components: { Modal },
  data() {
    return {
      title: 'My First Vue App :)',
      header: 'Sign up for the Giveway',
      text: 'Grab your ninja swag for half price!',
      showModal: false
    }
  },
  methods: {
    toggleModal() {
      this.showModal = !this.showModal
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
}
h1 {
  border-bottom: 1px solid #ddd;
  display: inline-block;
  padding-bottom: 10px;
}
&lt;/style&gt;
</code></pre>



<pre class="wp-block-code"><code>// Modal.vue

&lt;template&gt;
  &lt;div class="backdrop" @click="closeModal"&gt;
    &lt;div class="modal" :class="{ sale: theme === 'sale'}"&gt;
      &lt;h1&gt;{{ header }}&lt;/h1&gt;
      &lt;p&gt;{{ text }}&lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  props: &#91;'header', 'text', 'theme'],
  methods: {
    closeModal() {
      this.$emit('close')
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
  .modal {
    width: 400px;
    padding: 20px;
    margin: 100px auto;
    background: white;
    border-radius: 10px;
  }
  .backdrop {
    top: 0;
    position: fixed;
    background: rgba(0,0,0,0.5);
    width: 100%;
    height: 100%;
  }
  .modal h1 {
    color: #03cfb4;
    border: none;
    padding: 0;
  }
  .modal p {
    font-style: normal;
  }

  .modal.sale {
    background: crimson;
    color: white;
  }
  .modal.sale h1 {
    color: white;
  }
&lt;/style&gt;</code></pre>



<h3>Click Event Modifiers</h3>



<h4>open modal</h4>



<ul><li>@click.right=”toggleModal”</li><li>@click.shift=”toggleModal”</li><li>@click.alt=”toggleModal”</li></ul>



<h4>close modal</h4>



<ul><li>@click.self=”closeModal”</li></ul>



<pre class="wp-block-code"><code>// App.vue

&lt;template&gt;
  &lt;h1&gt;{{ title }}&lt;/h1&gt;
  &lt;p&gt;Welcome...&lt;/p&gt;
  &lt;div v-if="showModal"&gt;
    &lt;Modal :header="header" :text="text" theme="sale" @close="toggleModal" /&gt;
  &lt;/div&gt;
  &lt;button @click.alt="toggleModal"&gt;open modal (alt)&lt;/button&gt;
&lt;/template&gt;

&lt;script&gt;
import Modal from './components/Modal.vue'

export default {
  name: 'App',
  components: { Modal },
  data() {
    return {
      title: 'My First Vue App :)',
      header: 'Sign up for the Giveway',
      text: 'Grab your ninja swag for half price!',
      showModal: false
    }
  },
  methods: {
    toggleModal() {
      this.showModal = !this.showModal
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
}
h1 {
  border-bottom: 1px solid #ddd;
  display: inline-block;
  padding-bottom: 10px;
}
&lt;/style&gt;</code></pre>



<pre class="wp-block-code"><code>// Modal.vue

&lt;template&gt;
  &lt;div class="backdrop" @click.self="closeModal"&gt;
    &lt;div class="modal" :class="{ sale: theme === 'sale'}"&gt;
      &lt;h1&gt;{{ header }}&lt;/h1&gt;
      &lt;p&gt;{{ text }}&lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  props: &#91;'header', 'text', 'theme'],
  methods: {
    closeModal() {
      this.$emit('close')
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
  .modal {
    width: 400px;
    padding: 20px;
    margin: 100px auto;
    background: white;
    border-radius: 10px;
  }
  .backdrop {
    top: 0;
    position: fixed;
    background: rgba(0,0,0,0.5);
    width: 100%;
    height: 100%;
  }
  .modal h1 {
    color: #03cfb4;
    border: none;
    padding: 0;
  }
  .modal p {
    font-style: normal;
  }

  .modal.sale {
    background: crimson;
    color: white;
  }
  .modal.sale h1 {
    color: white;
  }
&lt;/style&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Slots(插槽)</h3>



<pre class="wp-block-code"><code>// App.vue - 1

&lt;template&gt;
  &lt;h1&gt;{{ title }}&lt;/h1&gt;
  &lt;p&gt;Welcome...&lt;/p&gt;
  &lt;div v-if="showModal"&gt;
    &lt;Modal  theme="sale" @close="toggleModal"&gt;
      &lt;template v-slot:links&gt;
        &lt;a href="#"&gt;sign up now&lt;/a&gt;
        &lt;a href="#"&gt;more info&lt;/a&gt;
      &lt;/template&gt;
      &lt;h1&gt;Ninja Givaway&lt;/h1&gt;
      &lt;p&gt;Grab your ninja swag for half price!&lt;/p&gt;
    &lt;/Modal&gt;
  &lt;/div&gt;
  &lt;button @click.alt="toggleModal"&gt;open modal (alt)&lt;/button&gt;
&lt;/template&gt;

&lt;script&gt;
import Modal from './components/Modal.vue'

export default {
  name: 'App',
  components: { Modal },
  data() {
    return {
      title: 'My First Vue App :)',
      header: 'Sign up for the Giveway',
      text: 'Grab your ninja swag for half price!',
      showModal: false
    }
  },
  methods: {
    toggleModal() {
      this.showModal = !this.showModal
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
}
h1 {
  border-bottom: 1px solid #ddd;
  display: inline-block;
  padding-bottom: 10px;
}
&lt;/style&gt;</code></pre>



<pre class="wp-block-code"><code>// Modal.vue - 1

&lt;template&gt;
  &lt;div class="backdrop" @click.self="closeModal"&gt;
    &lt;div class="modal" :class="{ sale: theme === 'sale'}"&gt;
      &lt;slot&gt;&lt;/slot&gt;
      &lt;div class="actions"&gt;
        &lt;slot name="links"&gt;&lt;/slot&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  props: &#91;'theme'],
  methods: {
    closeModal() {
      this.$emit('close')
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
  .modal {
    width: 400px;
    padding: 20px;
    margin: 100px auto;
    background: white;
    border-radius: 10px;
  }
  .backdrop {
    top: 0;
    position: fixed;
    background: rgba(0,0,0,0.5);
    width: 100%;
    height: 100%;
  }
  .modal h1 {
    color: #03cfb4;
    border: none;
    padding: 0;
  }
  .modal p {
    font-style: normal;
  }
  .modal .actions {
    text-align: center;
    margin: 30px 0 10px 0;
  }
  .modal .actions a {
    color: #333;
    padding: 8px;
    border: 1px solid #eee;
    border-radius: 4px;
    text-decoration: none;
    margin: 10px;
  }

  .modal.sale {
    background: crimson;
    color: white;
  }
  .modal.sale h1 {
    color: white;
  }
  .modal.sale .actions {
    color: white;
  }
  .modal.sale .actions a {
    color: white;
  }
&lt;/style&gt;</code></pre>



<pre class="wp-block-code"><code>// App.vue - 2

&lt;template&gt;
  &lt;h1&gt;{{ title }}&lt;/h1&gt;
  &lt;p&gt;Welcome...&lt;/p&gt;
  &lt;div v-if="showModal"&gt;
    &lt;Modal  theme="sale" @close="toggleModal"&gt;
      &lt;template v-slot:links&gt;
        &lt;a href="#"&gt;sign up now&lt;/a&gt;
        &lt;a href="#"&gt;more info&lt;/a&gt;
      &lt;/template&gt;

    &lt;/Modal&gt;
  &lt;/div&gt;
  &lt;button @click.alt="toggleModal"&gt;open modal (alt)&lt;/button&gt;
&lt;/template&gt;

&lt;script&gt;
import Modal from './components/Modal.vue'

export default {
  name: 'App',
  components: { Modal },
  data() {
    return {
      title: 'My First Vue App :)',
      header: 'Sign up for the Giveway',
      text: 'Grab your ninja swag for half price!',
      showModal: false
    }
  },
  methods: {
    toggleModal() {
      this.showModal = !this.showModal
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
}
h1 {
  border-bottom: 1px solid #ddd;
  display: inline-block;
  padding-bottom: 10px;
}
&lt;/style&gt;</code></pre>



<pre class="wp-block-code"><code>// Modal.vue - 2

&lt;template&gt;
  &lt;div class="backdrop" @click.self="closeModal"&gt;
    &lt;div class="modal" :class="{ sale: theme === 'sale'}"&gt;
      &lt;slot&gt;default content&lt;/slot&gt;
      &lt;div class="actions"&gt;
        &lt;slot name="links"&gt;&lt;/slot&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  props: &#91;'theme'],
  methods: {
    closeModal() {
      this.$emit('close')
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
  .modal {
    width: 400px;
    padding: 20px;
    margin: 100px auto;
    background: white;
    border-radius: 10px;
  }
  .backdrop {
    top: 0;
    position: fixed;
    background: rgba(0,0,0,0.5);
    width: 100%;
    height: 100%;
  }
  .modal h1 {
    color: #03cfb4;
    border: none;
    padding: 0;
  }
  .modal p {
    font-style: normal;
  }
  .modal .actions {
    text-align: center;
    margin: 30px 0 10px 0;
  }
  .modal .actions a {
    color: #333;
    padding: 8px;
    border: 1px solid #eee;
    border-radius: 4px;
    text-decoration: none;
    margin: 10px;
  }

  .modal.sale {
    background: crimson;
    color: white;
  }
  .modal.sale h1 {
    color: white;
  }
  .modal.sale .actions {
    color: white;
  }
  .modal.sale .actions a {
    color: white;
  }
&lt;/style&gt;</code></pre>



<pre class="wp-block-code"><code>// App.vue - 3

&lt;template&gt;
  &lt;h1&gt;{{ title }}&lt;/h1&gt;
  &lt;p&gt;Welcome...&lt;/p&gt;
  &lt;div v-if="showModal"&gt;
    &lt;Modal  theme="" @close="toggleModal"&gt;
      &lt;template v-slot:links&gt;
        &lt;a href="#"&gt;sign up now&lt;/a&gt;
        &lt;a href="#"&gt;more info&lt;/a&gt;
      &lt;/template&gt;
      &lt;h1&gt;Ninja Givaway&lt;/h1&gt;
      &lt;p&gt;Grab your ninja swag for half price!&lt;/p&gt;
    &lt;/Modal&gt;
  &lt;/div&gt;
  &lt;button @click.alt="toggleModal"&gt;open modal (alt)&lt;/button&gt;
&lt;/template&gt;

&lt;script&gt;
import Modal from './components/Modal.vue'

export default {
  name: 'App',
  components: { Modal },
  data() {
    return {
      title: 'My First Vue App :)',
      header: 'Sign up for the Giveway',
      text: 'Grab your ninja swag for half price!',
      showModal: false
    }
  },
  methods: {
    toggleModal() {
      this.showModal = !this.showModal
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
}
h1 {
  border-bottom: 1px solid #ddd;
  display: inline-block;
  padding-bottom: 10px;
}
&lt;/style&gt;</code></pre>



<pre class="wp-block-code"><code>// Modal.vue - 3

&lt;template&gt;
  &lt;div class="backdrop" @click.self="closeModal"&gt;
    &lt;div class="modal" :class="{ sale: theme === 'sale'}"&gt;
      &lt;slot&gt;&lt;/slot&gt;
      &lt;div class="actions"&gt;
        &lt;slot name="links"&gt;&lt;/slot&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  props: &#91;'theme'],
  methods: {
    closeModal() {
      this.$emit('close')
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
  .modal {
    width: 400px;
    padding: 20px;
    margin: 100px auto;
    background: white;
    border-radius: 10px;
  }
  .backdrop {
    top: 0;
    position: fixed;
    background: rgba(0,0,0,0.5);
    width: 100%;
    height: 100%;
  }
  .modal h1 {
    color: #03cfb4;
    border: none;
    padding: 0;
  }
  .modal p {
    font-style: normal;
  }
  .modal .actions {
    text-align: center;
    margin: 30px 0 10px 0;
  }
  .modal .actions a {
    color: #333;
    padding: 8px;
    border: 1px solid #eee;
    border-radius: 4px;
    text-decoration: none;
    margin: 10px;
  }

  .modal.sale {
    background: crimson;
    color: white;
  }
  .modal.sale h1 {
    color: white;
  }
  .modal.sale .actions {
    color: white;
  }
  .modal.sale .actions a {
    color: white;
  }
&lt;/style&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">CHALLENGE – Reusing Components</h3>



<pre class="wp-block-code"><code>// App.vue

&lt;template&gt;
  &lt;h1&gt;{{ title }}&lt;/h1&gt;
  &lt;p&gt;Welcome...&lt;/p&gt;
  &lt;div v-if="showModal"&gt;
    &lt;Modal  theme="" @close="toggleModal"&gt;
      &lt;template v-slot:links&gt;
        &lt;a href="#"&gt;sign up now&lt;/a&gt;
        &lt;a href="#"&gt;more info&lt;/a&gt;
      &lt;/template&gt;
      &lt;h1&gt;Ninja Givaway&lt;/h1&gt;
      &lt;p&gt;Grab your ninja swag for half price!&lt;/p&gt;
    &lt;/Modal&gt;
  &lt;/div&gt;

  &lt;div v-if="showModalTwo"&gt;
    &lt;Modal @close="toggleModalTwo"&gt;
      &lt;h1&gt;Sign up to the newsletter&lt;/h1&gt;
      &lt;p&gt;For updates and promo codes!&lt;/p&gt;
    &lt;/Modal&gt;
  &lt;/div&gt;
  &lt;button @click.alt="toggleModal"&gt;open modal (alt)&lt;/button&gt;
  &lt;button @click="toggleModalTwo"&gt;open modal&lt;/button&gt;
&lt;/template&gt;

&lt;script&gt;
// challenge
// - create an extra button to poen a different modal
// - use the same modal component but pass in a different template (slot)
// - use a different method (e.g. toggleModalTwo) and data (e.g. showModalTwo)

import Modal from './components/Modal.vue'

export default {
  name: 'App',
  components: { Modal },
  data() {
    return {
      title: 'My First Vue App :)',
      showModal: false,
      showModalTwo: false,
    }
  },
  methods: {
    toggleModal() {
      this.showModal = !this.showModal
    },
    toggleModalTwo() {
      this.showModalTwo = !this.showModalTwo
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
}
h1 {
  border-bottom: 1px solid #ddd;
  display: inline-block;
  padding-bottom: 10px;
}
&lt;/style&gt;</code></pre>



<pre class="wp-block-code"><code>// Modal.vue

&lt;template&gt;
  &lt;div class="backdrop" @click.self="closeModal"&gt;
    &lt;div class="modal" :class="{ sale: theme === 'sale'}"&gt;
      &lt;slot&gt;&lt;/slot&gt;
      &lt;div class="actions"&gt;
        &lt;slot name="links"&gt;&lt;/slot&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  props: &#91;'theme'],
  methods: {
    closeModal() {
      this.$emit('close')
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
  .modal {
    width: 400px;
    padding: 20px;
    margin: 100px auto;
    background: white;
    border-radius: 10px;
  }
  .backdrop {
    top: 0;
    position: fixed;
    background: rgba(0,0,0,0.5);
    width: 100%;
    height: 100%;
  }
  .modal h1 {
    color: #03cfb4;
    border: none;
    padding: 0;
  }
  .modal p {
    font-style: normal;
  }
  .modal .actions {
    text-align: center;
    margin: 30px 0 10px 0;
  }
  .modal .actions a {
    color: #333;
    padding: 8px;
    border: 1px solid #eee;
    border-radius: 4px;
    text-decoration: none;
    margin: 10px;
  }

  .modal.sale {
    background: crimson;
    color: white;
  }
  .modal.sale h1 {
    color: white;
  }
  .modal.sale .actions {
    color: white;
  }
  .modal.sale .actions a {
    color: white;
  }
&lt;/style&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Using Teleport (new features 新功能)</h3>



<ul><li><a href="https://v3.vuejs.org/guide/teleport.html" target="_blank" rel="noreferrer noopener">Vue.js 3 – Teleport</a></li></ul>



<h4>class, id 都可以使用 e.g. – .modals、#modals</h4>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang=""&gt;
  &lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width,initial-scale=1.0"&gt;
    &lt;link rel="icon" href="&lt;%= BASE_URL %&gt;favicon.ico"&gt;
    &lt;title&gt;&lt;%= htmlWebpackPlugin.options.title %&gt;&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;noscript&gt;
      &lt;strong&gt;We're sorry but &lt;%= htmlWebpackPlugin.options.title %&gt; doesn't work properly without JavaScript enabled. Please enable it to continue.&lt;/strong&gt;
    &lt;/noscript&gt;
    &lt;div id="app"&gt;&lt;/div&gt;
    &lt;!-- built files will be auto injected --&gt;
    &lt;div class="modals"&gt;&lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>



<pre class="wp-block-code"><code>// App.vue

&lt;template&gt;
  &lt;h1&gt;{{ title }}&lt;/h1&gt;
  &lt;p&gt;Welcome...&lt;/p&gt;
  &lt;teleport to=".modals" v-if="showModal"&gt;
    &lt;Modal  theme="" @close="toggleModal"&gt;
      &lt;template v-slot:links&gt;
        &lt;a href="#"&gt;sign up now&lt;/a&gt;
        &lt;a href="#"&gt;more info&lt;/a&gt;
      &lt;/template&gt;
      &lt;h1&gt;Ninja Givaway&lt;/h1&gt;
      &lt;p&gt;Grab your ninja swag for half price!&lt;/p&gt;
    &lt;/Modal&gt;
  &lt;/teleport&gt;

  &lt;teleport to=".modals" v-if="showModalTwo"&gt;
    &lt;Modal @close="toggleModalTwo"&gt;
      &lt;h1&gt;Sign up to the newsletter&lt;/h1&gt;
      &lt;p&gt;For updates and promo codes!&lt;/p&gt;
    &lt;/Modal&gt;
  &lt;/teleport&gt;

  &lt;button @click.alt="toggleModal"&gt;open modal (alt)&lt;/button&gt;
  &lt;button @click="toggleModalTwo"&gt;open modal&lt;/button&gt;
&lt;/template&gt;

&lt;script&gt;
// challenge
// - create an extra button to poen a different modal
// - use the same modal component but pass in a different template (slot)
// - use a different method (e.g. toggleModalTwo) and data (e.g. showModalTwo)

import Modal from './components/Modal.vue'

export default {
  name: 'App',
  components: { Modal },
  data() {
    return {
      title: 'My First Vue App :)',
      showModal: false,
      showModalTwo: false,
    }
  },
  methods: {
    toggleModal() {
      this.showModal = !this.showModal
    },
    toggleModalTwo() {
      this.showModalTwo = !this.showModalTwo
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
#app, .modals {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
}
h1 {
  border-bottom: 1px solid #ddd;
  display: inline-block;
  padding-bottom: 10px;
}
&lt;/style&gt;</code></pre>



<h2>第4節：PROJECT BUILD – Reaction Timer</h2>



<h3 class="has-background" style="background-color:#ff6663">Project 1 Preview &amp; Setup</h3>



<h4>Reaction Timer Project</h4>



<ul><li>App.vue<ul><li>Block.vue</li><li>Results.vue</li></ul></li></ul>



<h4>操作步驟</h4>



<ul><li>打開終端機</li><li>移動到要安裝位置</li><li>輸入指令：vue create reaction-timer</li><li>Please pick a preset: Manually select features</li><li>Check the features needed for your project: Choose Vue version, Babel</li><li>Choose a version of Vue.js that you want to start the project with 3.x</li><li>Where do you prefer placing config for Babel, ESLint, etc.? In dedicated config file</li><li>Save this as a preset for future projects? N</li><li>移動到檔案位置：cd reaction-timer</li><li>打開 VSCode：code .</li><li>移除 HelloWorld.vue 檔案</li><li>修改 App.vue 檔案、移除不用的內容</li><li>在 components 資料夾裡新增 Block.vue、Results.vue 檔案</li><li>打開終端機、執行指令：npm run serve</li></ul>



<pre class="wp-block-code"><code>// App.vue

&lt;template&gt;
  &lt;h1&gt;Ninja Reaction Timer&lt;/h1&gt;
&lt;/template&gt;

&lt;script&gt;


export default {
  name: 'App',
  components: { }
}
&lt;/script&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #444;
  margin-top: 60px;
}
&lt;/style&gt;
</code></pre>



<h4>參考文件</h4>



<ul><li><a href="https://router.vuejs.org/guide/essentials/history-mode.html" target="_blank" rel="noreferrer noopener">Vue Router Guide – Different History modes</a></li></ul>



<h3 class="has-background" style="background-color:#ff6663">Starting a New Game</h3>



<pre class="wp-block-code"><code>// App.vue

&lt;template&gt;
  &lt;h1&gt;Ninja Reaction Timer&lt;/h1&gt;
  &lt;button @click="start" :disabled="isPlaying"&gt;play&lt;/button&gt;
  &lt;Block v-if="isPlaying" :delay="delay" /&gt;
&lt;/template&gt;

&lt;script&gt;
import Block from './components/Block.vue'

export default {
  name: 'App',
  components: { Block },
  data() {
    return {
      isPlaying: false,
      delay: null
    }
  },
  methods: {
    start() {
      this.delay = 2000 + Math.random() * 5000
      this.isPlaying = true
      // console.log(this.delay)
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #444;
  margin-top: 60px;
}
&lt;/style&gt;
</code></pre>



<ul><li>快速建立 &lt;template&gt;、&lt;script&gt;、&lt;style&gt;，快捷鍵 &lt;vue&gt; with default.vue</li></ul>



<pre class="wp-block-code"><code>// Block.vue

&lt;template&gt;
  &lt;div class="block"&gt;
    click me
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  props: &#91;'delay']
}
&lt;/script&gt;

&lt;style&gt;
  .block {
    width: 400px;
    border-radius: 20px;
    background: #0faf87;
    color: white;
    text-align: center;
    padding: 100px 0;
    margin: 40px auto;
  }
&lt;/style&gt;</code></pre>



<h4>Vetur can’t find&nbsp;<code>tsconfig.json</code>,&nbsp;<code>jsconfig.json</code>&nbsp;in /xxxx/xxxxxx.</h4>



<ul><li><a href="https://vuejs.github.io/vetur/guide/FAQ.html#vetur-can-t-find-tsconfig-json-jsconfig-json-in-xxxx-xxxxxx" target="_blank" rel="noreferrer noopener">Vetur 文件</a></li></ul>



<h3 class="has-background" style="background-color:#ff6663">Component Lifecycle Hooks (組件生命週期鉤子) 重要!</h3>



<h4>資源</h4>



<ul><li><a rel="noreferrer noopener" href="https://v3.vuejs.org/guide/instance.html#lifecycle-hooks" target="_blank">Lifecycle Diagram</a></li></ul>



<pre class="wp-block-code"><code>// Block.vue

&lt;template&gt;
  &lt;div class="block" v-if="showBlock"&gt;
    click me
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  props: &#91;'delay'],
  data() {
    return {
      showBlock: false
    }
  },
  mounted() {
    // console.log('component mounted')
    setTimeout(() =&gt; {
      this.showBlock = true
      // console.log(this.delay)
    }, this.delay)
  },
  // updated() {
  //   console.log('component updated')
  // },
  // unmounted() {
  //   console.log('unmounted')
  // }
}
&lt;/script&gt;

&lt;style&gt;
  .block {
    width: 400px;
    border-radius: 20px;
    background: #0faf87;
    color: white;
    text-align: center;
    padding: 100px 0;
    margin: 40px auto;
  }
&lt;/style&gt;</code></pre>



<pre class="wp-block-code"><code>// App.vue

&lt;template&gt;
  &lt;h1&gt;Ninja Reaction Timer&lt;/h1&gt;
  &lt;button @click="start" :disabled="isPlaying"&gt;play&lt;/button&gt;
  &lt;Block v-if="isPlaying" :delay="delay" /&gt;
&lt;/template&gt;

&lt;script&gt;
import Block from './components/Block.vue'

export default {
  name: 'App',
  components: { Block },
  data() {
    return {
      isPlaying: false,
      delay: null
    }
  },
  methods: {
    start() {
      this.delay = 2000 + Math.random() * 5000
      this.isPlaying = true
      // console.log(this.delay)
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #444;
  margin-top: 60px;
}
&lt;/style&gt;
</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Creating the Reaction Timer</h3>



<pre class="wp-block-code"><code>// Block.vue

&lt;template&gt;
  &lt;div class="block" v-if="showBlock" @click="stopTimer"&gt;
    click me
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  props: &#91;'delay'],
  data() {
    return {
      showBlock: false,
      timer: null,
      reactionTime: 0
    }
  },
  mounted() {
    setTimeout(() =&gt; {
      this.showBlock = true
      this.startTimer()
    }, this.delay)
  },
  methods: {
    startTimer() {
      this.timer = setInterval(() =&gt; {
        this.reactionTime += 10
      }, 10)
    },
    stopTimer() {
      clearInterval(this.timer)
      console.log(this.reactionTime)
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
  .block {
    width: 400px;
    border-radius: 20px;
    background: #0faf87;
    color: white;
    text-align: center;
    padding: 100px 0;
    margin: 40px auto;
  }
&lt;/style&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Emitting Custom Events with Data</h3>



<pre class="wp-block-code"><code>// Block.vue

&lt;template&gt;
  &lt;div class="block" v-if="showBlock" @click="stopTimer"&gt;
    click me
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  props: &#91;'delay'],
  data() {
    return {
      showBlock: false,
      timer: null,
      reactionTime: 0
    }
  },
  mounted() {
    setTimeout(() =&gt; {
      this.showBlock = true
      this.startTimer()
    }, this.delay)
  },
  methods: {
    startTimer() {
      this.timer = setInterval(() =&gt; {
        this.reactionTime += 10
      }, 10)
    },
    stopTimer() {
      clearInterval(this.timer)
      this.$emit('end', this.reactionTime)
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
  .block {
    width: 400px;
    border-radius: 20px;
    background: #0faf87;
    color: white;
    text-align: center;
    padding: 100px 0;
    margin: 40px auto;
  }
&lt;/style&gt;</code></pre>



<pre class="wp-block-code"><code>// App.vue

&lt;template&gt;
  &lt;h1&gt;Ninja Reaction Timer&lt;/h1&gt;
  &lt;button @click="start" :disabled="isPlaying"&gt;play&lt;/button&gt;
  &lt;Block v-if="isPlaying" :delay="delay" @end="endGame" /&gt;
  &lt;p v-if="showResults"&gt;Reaction time: {{ score }} ms&lt;/p&gt;
&lt;/template&gt;

&lt;script&gt;
import Block from './components/Block.vue'

export default {
  name: 'App',
  components: { Block },
  data() {
    return {
      isPlaying: false,
      delay: null,
      score: null,
      showResults: false
    }
  },
  methods: {
    start() {
      this.delay = 2000 + Math.random() * 5000
      this.isPlaying = true
      this.showResults = false
    },
    endGame(reactionTime) {
      this.score = reactionTime
      this.isPlaying = false
      this.showResults = true
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #444;
  margin-top: 60px;
}
&lt;/style&gt;
</code></pre>



<h3 class="has-background" style="background-color:#ff6663">CHALLENGE – Showing a Results Component</h3>



<pre class="wp-block-code"><code>// App.vue

&lt;template&gt;
  &lt;h1&gt;Ninja Reaction Timer&lt;/h1&gt;
  &lt;button @click="start" :disabled="isPlaying"&gt;play&lt;/button&gt;
  &lt;Block v-if="isPlaying" :delay="delay" @end="endGame" /&gt;
  &lt;Results v-if="showResults" :score="score" /&gt;
&lt;/template&gt;

&lt;script&gt;
// Challenge
// - when the game ends, show the results component
// - output the score inside the results component

import Block from './components/Block.vue'
import Results from './components/Results.vue'

export default {
  name: 'App',
  components: { Block, Results },
  data() {
    return {
      isPlaying: false,
      delay: null,
      score: null,
      showResults: false
    }
  },
  methods: {
    start() {
      this.delay = 2000 + Math.random() * 5000
      this.isPlaying = true
      this.showResults = false
    },
    endGame(reactionTime) {
      this.score = reactionTime
      this.isPlaying = false
      this.showResults = true
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #444;
  margin-top: 60px;
}
&lt;/style&gt;
</code></pre>



<pre class="wp-block-code"><code>// Results.vue

&lt;template&gt;
  &lt;p&gt;Reaction time - {{ score }} ms&lt;/p&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  props: &#91;'score']
}
&lt;/script&gt;

&lt;style&gt;

&lt;/style&gt;</code></pre>



<h3>Finishing Touches</h3>



<pre class="wp-block-code"><code>// Results.vue

&lt;template&gt;
  &lt;p&gt;Reaction time - {{ score }} ms&lt;/p&gt;
  &lt;p class="rank"&gt;{{ rank }}&lt;/p&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  props: &#91;'score'],
  data() {
    return {
      rank: null
    }
  },
  mounted() {
    if (this.score &lt; 250) {
      this.rank = 'Ninja Fingers'
    }
    else if (this.score &lt; 400) {
      this.rank = 'Rapid Reflexes'
    }
    else {
      this.rank = 'Snail pace...'
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
  .rank {
    font-size: 1.4em;
    color: #0faf87;
    font-weight: bold;
  }
&lt;/style&gt;</code></pre>



<pre class="wp-block-code"><code>// App.vue

&lt;template&gt;
  &lt;h1&gt;Ninja Reaction Timer&lt;/h1&gt;
  &lt;button @click="start" :disabled="isPlaying"&gt;play&lt;/button&gt;
  &lt;Block v-if="isPlaying" :delay="delay" @end="endGame" /&gt;
  &lt;Results v-if="showResults" :score="score" /&gt;
&lt;/template&gt;

&lt;script&gt;
// Challenge
// - when the game ends, show the results component
// - output the score inside the results component

import Block from './components/Block.vue'
import Results from './components/Results.vue'

export default {
  name: 'App',
  components: { Block, Results },
  data() {
    return {
      isPlaying: false,
      delay: null,
      score: null,
      showResults: false
    }
  },
  methods: {
    start() {
      this.delay = 2000 + Math.random() * 5000
      this.isPlaying = true
      this.showResults = false
    },
    endGame(reactionTime) {
      this.score = reactionTime
      this.isPlaying = false
      this.showResults = true
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #444;
  margin-top: 60px;
}
button {
  background: #0faf87;
  color: white;
  border: none;
  padding: 8px 16px;
  border-radius: 4px;
  font-size: 16px;
  letter-spacing: 1px;
  cursor: pointer;
  margin: 10px;
}
button&#91;disabled] {
  opacity: 0.2;
  cursor: not-allowed;
}
&lt;/style&gt;
</code></pre>



<h2>第5節：Forms &amp; Data Binding</h2>



<h3 class="has-background" style="background-color:#ff6663">Forms Intro &amp; Setup (表單介紹 &amp; 安裝)</h3>



<h4>操作步驟</h4>



<ul><li>打開終端機(Terminal)</li><li>移動到要安裝專案的位置</li><li>建立專案、輸入指令 vue create web-form</li><li>Please pick a preset: Manually select features</li><li>Check the features needed for your project: Choose Vue version, Babel</li><li>Choose a version of Vue.js that you want to start the project with 3.x (Preview)</li><li>Where do you prefer placing config for Babel, ESLint, etc.? In dedicated config files</li><li>Save this as a preset for the future projects? N</li><li>建立完成後、移動到專案位置 cd web-form</li><li>輸入指令、打開網頁編輯器：code .</li><li>移除 components/HelloWorld.vue 檔案</li><li>修改 App.vue 檔案內容</li><li>新增檔案 SignupForm.vue 在 components 資料夾裡面、新增內容</li><li>執行指令：npm run serve</li><li>在這之前要記得在 App.vue 檔案 import SignupForm from ‘./components/SignupForm.vue’</li><li>在 App.vue 做些內容調整</li></ul>



<pre class="wp-block-code"><code>// App.vue - 1

&lt;template&gt;

&lt;/template&gt;

&lt;script&gt;
export default {
  name: 'App',
  components: {}
}
&lt;/script&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
}
body {
  margin: 0;
  background: #eee;
}
&lt;/style&gt;</code></pre>



<pre class="wp-block-code"><code>// SignupForm.vue

&lt;template&gt;
  &lt;form&gt;
    &lt;label&gt;Email:&lt;/label&gt;
    &lt;input type="email" required&gt;
  &lt;/form&gt;
&lt;/template&gt;

&lt;script&gt;
export default {

}
&lt;/script&gt;

&lt;style&gt;
  form {
    max-width: 420px;
    margin: 30px auto;
    background: white;
    text-align: left;
    padding: 40px;
    border-radius: 10px;
  }
  label {
    color: #aaa;
    display: inline-block;
    margin: 25px 0 15px;
    font-size: 0.6em;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-weight: bold;
  }
  input {
    display: block;
    padding: 10px 6px;
    width: 100%;
    box-sizing: border-box;
    border: none;
    border-bottom: 1px solid #ddd;
    color: #555;
  }
&lt;/style&gt;</code></pre>



<pre class="wp-block-code"><code>// App.vue - 2

&lt;template&gt;
  &lt;SignupForm /&gt;
&lt;/template&gt;

&lt;script&gt;
import SignupForm from './components/SignupForm.vue'

export default {
  name: 'App',
  components: { SignupForm }
}
&lt;/script&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
}
body {
  margin: 0;
  background: #eee;
}
&lt;/style&gt;</code></pre>



<h3>Two-way Data Binding (雙向綁定)</h3>



<pre class="wp-block-code"><code>// SignupForm.vue

&lt;template&gt;
  &lt;form&gt;
    &lt;label&gt;Email:&lt;/label&gt;
    &lt;input type="email" required v-model="email"&gt;

    &lt;label&gt;Password:&lt;/label&gt;
    &lt;input type="password" required v-model="password"&gt;
    
  &lt;/form&gt;
  &lt;p&gt;Email: {{ email }}&lt;/p&gt;
  &lt;p&gt;Password: {{ password }}&lt;/p&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  data() {
    return {
      email: 'mario',
      password: ''
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
  form {
    max-width: 420px;
    margin: 30px auto;
    background: white;
    text-align: left;
    padding: 40px;
    border-radius: 10px;
  }
  label {
    color: #aaa;
    display: inline-block;
    margin: 25px 0 15px;
    font-size: 0.6em;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-weight: bold;
  }
  input {
    display: block;
    padding: 10px 6px;
    width: 100%;
    box-sizing: border-box;
    border: none;
    border-bottom: 1px solid #ddd;
    color: #555;
  }
&lt;/style&gt;</code></pre>



<h4>Vue.js 文件</h4>



<ul><li><a href="https://v3.vuejs.org/api/directives.html#v-model" target="_blank" rel="noreferrer noopener">v-model</a></li></ul>



<h3>Select Fields</h3>



<pre class="wp-block-code"><code>// SignupForm.vue

&lt;template&gt;
  &lt;form&gt;
    &lt;label&gt;Email:&lt;/label&gt;
    &lt;input type="email" required v-model="email"&gt;

    &lt;label&gt;Password:&lt;/label&gt;
    &lt;input type="password" required v-model="password"&gt;
    
    &lt;label&gt;Role:&lt;/label&gt;
    &lt;select v-model="role"&gt;
      &lt;option value="developer"&gt;Web Developer&lt;/option&gt;
      &lt;option value="designer"&gt;Web Designer&lt;/option&gt;
    &lt;/select&gt;

  &lt;/form&gt;
  &lt;p&gt;Email: {{ email }}&lt;/p&gt;
  &lt;p&gt;Password: {{ password }}&lt;/p&gt;
  &lt;p&gt;Role: {{ role }}&lt;/p&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  data() {
    return {
      email: 'mario',
      password: '',
      role: 'designer'
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
  form {
    max-width: 420px;
    margin: 30px auto;
    background: white;
    text-align: left;
    padding: 40px;
    border-radius: 10px;
  }
  label {
    color: #aaa;
    display: inline-block;
    margin: 25px 0 15px;
    font-size: 0.6em;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-weight: bold;
  }
  input, select {
    display: block;
    padding: 10px 6px;
    width: 100%;
    box-sizing: border-box;
    border: none;
    border-bottom: 1px solid #ddd;
    color: #555;
  }
&lt;/style&gt;</code></pre>



<h3>Checkboxes</h3>



<h4>使用方式</h4>



<ul><li>Boolean (布林值)</li><li>Array (陣列)</li></ul>



<pre class="wp-block-code"><code>// SignupForm.vue

&lt;template&gt;
  &lt;form&gt;
    &lt;label&gt;Email:&lt;/label&gt;
    &lt;input type="email" required v-model="email"&gt;

    &lt;label&gt;Password:&lt;/label&gt;
    &lt;input type="password" required v-model="password"&gt;
    
    &lt;label&gt;Role:&lt;/label&gt;
    &lt;select v-model="role"&gt;
      &lt;option value="developer"&gt;Web Developer&lt;/option&gt;
      &lt;option value="designer"&gt;Web Designer&lt;/option&gt;
    &lt;/select&gt;

    &lt;div class="terms"&gt;
      &lt;input type="checkbox" v-model="terms" required&gt;
      &lt;label&gt;Accept terms and conditions&lt;/label&gt;
    &lt;/div&gt;

    &lt;!-- &lt;div&gt;
      &lt;input type="checkbox" value="shaun" v-model="names"&gt;
      &lt;label&gt;Shaun&lt;/label&gt;
    &lt;/div&gt;
    &lt;div&gt;
      &lt;input type="checkbox" value="yoshi" v-model="names"&gt;
      &lt;label&gt;Yoshi&lt;/label&gt;
    &lt;/div&gt;
    &lt;div&gt;
      &lt;input type="checkbox" value="mario" v-model="names"&gt;
      &lt;label&gt;Mario&lt;/label&gt;
    &lt;/div&gt; --&gt;

  &lt;/form&gt;
  &lt;p&gt;Email: {{ email }}&lt;/p&gt;
  &lt;p&gt;Password: {{ password }}&lt;/p&gt;
  &lt;p&gt;Role: {{ role }}&lt;/p&gt;
  &lt;p&gt;Terms accepted: {{ terms }}&lt;/p&gt;
  &lt;!-- &lt;p&gt;Names: {{ names }}&lt;/p&gt; --&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  data() {
    return {
      email: 'mario',
      password: '',
      role: 'designer',
      terms: false,
      // names: &#91;]
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
  form {
    max-width: 420px;
    margin: 30px auto;
    background: white;
    text-align: left;
    padding: 40px;
    border-radius: 10px;
  }
  label {
    color: #aaa;
    display: inline-block;
    margin: 25px 0 15px;
    font-size: 0.6em;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-weight: bold;
  }
  input, select {
    display: block;
    padding: 10px 6px;
    width: 100%;
    box-sizing: border-box;
    border: none;
    border-bottom: 1px solid #ddd;
    color: #555;
  }
  input&#91;type="checkbox"] {
    display: inline-block;
    width: 16px;
    margin: 0 10px 0 0;
    position: relative;
    top: 2px;
  }
&lt;/style&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Keyboard Events &amp; Modifiers</h3>



<ul><li>@keypress</li><li>@keydown</li><li>@keyup</li></ul>



<pre class="wp-block-code"><code>// SignupForm.vue

&lt;template&gt;
  &lt;form&gt;
    &lt;label&gt;Email:&lt;/label&gt;
    &lt;input type="email" required v-model="email"&gt;

    &lt;label&gt;Password:&lt;/label&gt;
    &lt;input type="password" required v-model="password"&gt;
    
    &lt;label&gt;Role:&lt;/label&gt;
    &lt;select v-model="role"&gt;
      &lt;option value="developer"&gt;Web Developer&lt;/option&gt;
      &lt;option value="designer"&gt;Web Designer&lt;/option&gt;
    &lt;/select&gt;

    &lt;label&gt;Skills:&lt;/label&gt;
    &lt;input type="text" v-model="tempSkill" @keyup.alt="addSkill"&gt;
    &lt;div v-for="skill in skills" :key="skill" class="pill"&gt;
      {{ skill }}
    &lt;/div&gt;

    &lt;div class="terms"&gt;
      &lt;input type="checkbox" v-model="terms" required&gt;
      &lt;label&gt;Accept terms and conditions&lt;/label&gt;
    &lt;/div&gt;

  &lt;/form&gt;
  &lt;p&gt;Email: {{ email }}&lt;/p&gt;
  &lt;p&gt;Password: {{ password }}&lt;/p&gt;
  &lt;p&gt;Role: {{ role }}&lt;/p&gt;
  &lt;p&gt;Terms accepted: {{ terms }}&lt;/p&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  data() {
    return {
      email: 'mario',
      password: '',
      role: 'designer',
      terms: false,
      tempSkill: '',
      skills: &#91;]
    }
  },
  methods: {
    addSkill(e) {
      // console.log(e)
      if (e.key === ',' &amp;&amp; this.tempSkill) {
        if (!this.skills.includes(this.tempSkill)) {
          this.skills.push(this.tempSkill)
        }
        this.tempSkill = ''
      }
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
  form {
    max-width: 420px;
    margin: 30px auto;
    background: white;
    text-align: left;
    padding: 40px;
    border-radius: 10px;
  }
  label {
    color: #aaa;
    display: inline-block;
    margin: 25px 0 15px;
    font-size: 0.6em;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-weight: bold;
  }
  input, select {
    display: block;
    padding: 10px 6px;
    width: 100%;
    box-sizing: border-box;
    border: none;
    border-bottom: 1px solid #ddd;
    color: #555;
  }
  input&#91;type="checkbox"] {
    display: inline-block;
    width: 16px;
    margin: 0 10px 0 0;
    position: relative;
    top: 2px;
  }
&lt;/style&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">CHALLENGE – Deleting Skills</h3>



<pre class="wp-block-code"><code>// SignupForm.vue

&lt;template&gt;
  &lt;form&gt;
    &lt;label&gt;Email:&lt;/label&gt;
    &lt;input type="email" required v-model="email"&gt;

    &lt;label&gt;Password:&lt;/label&gt;
    &lt;input type="password" required v-model="password"&gt;
    
    &lt;label&gt;Role:&lt;/label&gt;
    &lt;select v-model="role"&gt;
      &lt;option value="developer"&gt;Web Developer&lt;/option&gt;
      &lt;option value="designer"&gt;Web Designer&lt;/option&gt;
    &lt;/select&gt;

    &lt;label&gt;Skills:&lt;/label&gt;
    &lt;input type="text" v-model="tempSkill" @keyup.alt="addSkill"&gt;
    &lt;div v-for="skill in skills" :key="skill" class="pill"&gt;
      &lt;span @click="deleteSkill(skill)"&gt;{{ skill }}&lt;/span&gt;
    &lt;/div&gt;

    &lt;div class="terms"&gt;
      &lt;input type="checkbox" v-model="terms" required&gt;
      &lt;label&gt;Accept terms and conditions&lt;/label&gt;
    &lt;/div&gt;

  &lt;/form&gt;
  &lt;p&gt;Email: {{ email }}&lt;/p&gt;
  &lt;p&gt;Password: {{ password }}&lt;/p&gt;
  &lt;p&gt;Role: {{ role }}&lt;/p&gt;
  &lt;p&gt;Terms accepted: {{ terms }}&lt;/p&gt;
&lt;/template&gt;

&lt;script&gt;
// challenge
// - when a user clicks on a skill, delete that skill

export default {
  data() {
    return {
      email: 'mario',
      password: '',
      role: 'designer',
      terms: false,
      tempSkill: '',
      skills: &#91;]
    }
  },
  methods: {
    addSkill(e) {
      if (e.key === ',' &amp;&amp; this.tempSkill) {
        if (!this.skills.includes(this.tempSkill)) {
          this.skills.push(this.tempSkill)
        }
        this.tempSkill = ''
      }
    },
    deleteSkill(skill) {
      this.skills = this.skills.filter((item) =&gt;{
        return skill !== item
      })
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
  form {
    max-width: 420px;
    margin: 30px auto;
    background: white;
    text-align: left;
    padding: 40px;
    border-radius: 10px;
  }
  label {
    color: #aaa;
    display: inline-block;
    margin: 25px 0 15px;
    font-size: 0.6em;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-weight: bold;
  }
  input, select {
    display: block;
    padding: 10px 6px;
    width: 100%;
    box-sizing: border-box;
    border: none;
    border-bottom: 1px solid #ddd;
    color: #555;
  }
  input&#91;type="checkbox"] {
    display: inline-block;
    width: 16px;
    margin: 0 10px 0 0;
    position: relative;
    top: 2px;
  }
  .pill {
    display: inline-block;
    margin: 20px 10px 0 0;
    background: #eee;
    border-radius: 20px;
    font-size: 12px;
    letter-spacing: 1px;
    font-weight: bold;
    color: #777;
    cursor: pointer;
  }
&lt;/style&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Submitting the Form</h3>



<pre class="wp-block-code"><code>// SignupForm.vue

&lt;template&gt;
  &lt;form @submit.prevent="handleSubmit"&gt;
    &lt;label&gt;Email:&lt;/label&gt;
    &lt;input type="email" required v-model="email"&gt;

    &lt;label&gt;Password:&lt;/label&gt;
    &lt;input type="password" required v-model="password"&gt;
    &lt;div v-if="passwordError" class="error"&gt;{{ passwordError }}&lt;/div&gt;
    
    &lt;label&gt;Role:&lt;/label&gt;
    &lt;select v-model="role"&gt;
      &lt;option value="developer"&gt;Web Developer&lt;/option&gt;
      &lt;option value="designer"&gt;Web Designer&lt;/option&gt;
    &lt;/select&gt;

    &lt;label&gt;Skills:&lt;/label&gt;
    &lt;input type="text" v-model="tempSkill" @keyup.alt="addSkill"&gt;
    &lt;div v-for="skill in skills" :key="skill" class="pill"&gt;
      &lt;span @click="deleteSkill(skill)"&gt;{{ skill }}&lt;/span&gt;
    &lt;/div&gt;

    &lt;div class="terms"&gt;
      &lt;input type="checkbox" v-model="terms" required&gt;
      &lt;label&gt;Accept terms and conditions&lt;/label&gt;
    &lt;/div&gt;

    &lt;div class="submit"&gt;
      &lt;button&gt;Create an Account&lt;/button&gt;
    &lt;/div&gt;

  &lt;/form&gt;
  &lt;p&gt;Email: {{ email }}&lt;/p&gt;
  &lt;p&gt;Password: {{ password }}&lt;/p&gt;
  &lt;p&gt;Role: {{ role }}&lt;/p&gt;
  &lt;p&gt;Terms accepted: {{ terms }}&lt;/p&gt;
&lt;/template&gt;

&lt;script&gt;
// challenge
// - when a user clicks on a skill, delete that skill

export default {
  data() {
    return {
      email: '',
      password: '',
      role: 'designer',
      terms: false,
      tempSkill: '',
      skills: &#91;],
      passwordError: ''
    }
  },
  methods: {
    addSkill(e) {
      if (e.key === ',' &amp;&amp; this.tempSkill) {
        if (!this.skills.includes(this.tempSkill)) {
          this.skills.push(this.tempSkill)
        }
        this.tempSkill = ''
      }
    },
    deleteSkill(skill) {
      this.skills = this.skills.filter((item) =&gt;{
        return skill !== item
      })
    },
    handleSubmit() {
      // console.log('form submitted')
      // validate password
      this.passwordError = this.password.length &gt; 5 ?
        '' : 'Password must be at least 6 chars long'

      if(!this.passwordError) {
        console.log('email: ', this.email)
        console.log('password: ', this.password)
        console.log('role: ', this.role)
        console.log('skills: ', this.skills)
        console.log('terms accepted: ', this.terms)
      }
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
  form {
    max-width: 420px;
    margin: 30px auto;
    background: white;
    text-align: left;
    padding: 40px;
    border-radius: 10px;
  }
  label {
    color: #aaa;
    display: inline-block;
    margin: 25px 0 15px;
    font-size: 0.6em;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-weight: bold;
  }
  input, select {
    display: block;
    padding: 10px 6px;
    width: 100%;
    box-sizing: border-box;
    border: none;
    border-bottom: 1px solid #ddd;
    color: #555;
  }
  input&#91;type="checkbox"] {
    display: inline-block;
    width: 16px;
    margin: 0 10px 0 0;
    position: relative;
    top: 2px;
  }
  .pill {
    display: inline-block;
    margin: 20px 10px 0 0;
    background: #eee;
    border-radius: 20px;
    font-size: 12px;
    letter-spacing: 1px;
    font-weight: bold;
    color: #777;
    cursor: pointer;
  }
  button {
    background: #0b6dff;
    border: 0;
    padding: 10px 20px;
    margin-top: 20px;
    color: white;
    border-radius: 20px;
  }
  .submit {
    text-align: center;
  }
  .error {
    color: #ff0062;
    margin-top: 10px;
    font-size: 0.8em;
    font-weight: bold;
  }
&lt;/style&gt;</code></pre>



<h2 class="has-background" style="background-color:#ff6663">第6節：Vue Router Basics</h2>



<p>Vue 路由可重複觀看、練習。</p>



<h3>Why Use the Vue Router?</h3>



<p>可重複觀看了解觀念。</p>



<h4>The Vue Router (圖片講解)</h4>



<figure class="wp-block-gallery has-nested-images columns-1 is-cropped">
<figure class="wp-block-image size-large"><img loading="lazy" width="753" height="611" data-id="558"  src="/wordpress_blog/wp-content/uploads/2022/04/The-Vue-Router-01.png" alt="" class="wp-image-558"/><figcaption>The Vue Router 01</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1791" height="563" data-id="557"  src="/wordpress_blog/wp-content/uploads/2022/04/The-Vue-Router-02.png" alt="" class="wp-image-557"/><figcaption>The Vue Router 02</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1785" height="581" data-id="560"  src="/wordpress_blog/wp-content/uploads/2022/04/The-Vue-Router-03.png" alt="" class="wp-image-560"/><figcaption>The Vue Router 03</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1737" height="563" data-id="562"  src="/wordpress_blog/wp-content/uploads/2022/04/The-Vue-Router-04.png" alt="" class="wp-image-562"/><figcaption>The Vue Router 04</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1771" height="569" data-id="559"  src="/wordpress_blog/wp-content/uploads/2022/04/The-Vue-Router-05.png" alt="" class="wp-image-559"/><figcaption>The Vue Router 05</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1171" height="611" data-id="561"  src="/wordpress_blog/wp-content/uploads/2022/04/The-Vue-Router-06.png" alt="" class="wp-image-561"/><figcaption>The Vue Router 06</figcaption></figure>
</figure>



<h3 class="has-background" style="background-color:#ff6663">Router Setup for New Projects</h3>



<p>很重要，可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ol><li>開啟終端機、移動到要建立專案資料夾的位置、輸入終端機指令 vue create ninja-jobs</li><li>Vue CLI v4.5.8 (我的版本是 Vue CLI v4.5.15)</li><li>Please pick a preset: Manually select feature</li><li>Check the features needed for your project: Choose Vue version, Babel, Router</li><li>Choose a version of Vue.js that you want to start the project with 3.x (Preview)</li><li>Use history mode for router? (Requires proper server setup for index fallback in production) Yes</li><li>Where do you prefer placing config for Babel, ESLint, etc.? In dedicated config files</li><li>Save this as a preset for future projects? n</li><li>移動到專案資料夾位置 cd ninja-jobs</li><li>打開 VSCode 輸入指令 code .</li><li>首先看新的樣板專案在 package.json 檔案，擁有新的 dependency 是 “vue-router”</li><li>第二個不同的地方在 src 資料夾，有 router 資料夾、裡面有 index.js 檔案，可以看到有 routes 陣列、裡面的物件有 path, name, component 三個屬性</li><li>在 src/router/index.js 修改 about</li><li>介紹 src/main.js</li><li>介紹 App.vue &lt;router-view/&gt;</li><li>打開終端機，執行指令 npm run serve</li><li>使用 Ctrl + 滑鼠左鍵打開本地端網頁</li></ol>



<pre class="wp-block-code"><code>// src/router/index.js - 13 修改 about

import { createRouter, createWebHistory } from 'vue-router'
import Home from '../views/Home.vue'
import About from '../views/About.vue'

const routes = &#91;
  {
    path: '/',
    name: 'Home',
    component: Home
  },
  {
    path: '/about',
    name: 'About',
    component: About
  }
]

const router = createRouter({
  history: createWebHistory(process.env.BASE_URL),
  routes
})

export default router
</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Router Links (路由連結)</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ol><li>講解 router link 和 a 連結的差別，用 Google Network 說明 router link 並不是向伺服器請求</li><li>App.vue 把 a 連結移除、然後儲存，查看 Google Elements 的 a 連結可以看到類別在變動，把 App.vue 的 #nav a.router-link-exact-active 修改、#nav a 修改</li><li>App.vue router link to 也可以改成 :to 使用，同樣都能運作，並說明使用上的差異，在路徑需要更新上使用 :to 會比較好，因為 name 不用更動</li><li>移除專案用不到的內容，到 Home.vue 檔案、移除 import HelloWorld、移除 components/HelloWorld.vue 檔案</li><li>在 About.vue 修改內容</li></ol>



<pre class="wp-block-code"><code>// App.vue - 1

&lt;template&gt;
  &lt;div id="nav"&gt;
    &lt;router-link to="/"&gt;Home&lt;/router-link&gt; |
    &lt;router-link to="/about"&gt;About&lt;/router-link&gt; |
    &lt;a href="/about"&gt;about&lt;/a&gt;
  &lt;/div&gt;
  &lt;router-view/&gt;
&lt;/template&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
}

#nav {
  padding: 30px;
}

#nav a {
  font-weight: bold;
  color: #2c3e50;
}

#nav a.router-link-exact-active {
  color: #42b983;
}
&lt;/style&gt;
</code></pre>



<pre class="wp-block-code"><code>// App.vue - 2 修改


&lt;template&gt;
  &lt;div id="nav"&gt;
    &lt;router-link to="/"&gt;Home&lt;/router-link&gt; |
    &lt;router-link to="/about"&gt;About&lt;/router-link&gt;
  &lt;/div&gt;
  &lt;router-view/&gt;
&lt;/template&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
}

#nav {
  padding: 30px;
}

#nav a {
  font-weight: bold;
  color: #2c3e50;
  text-decoration: none;
  padding: 10px;
  border-radius: 4px;
}

#nav a.router-link-exact-active {
  color: #fff;
  background: crimson;
}
&lt;/style&gt;
</code></pre>



<pre class="wp-block-code"><code>// App.vue - 3 講解 to 的使用方法

&lt;template&gt;
  &lt;div id="nav"&gt;
    &lt;router-link to="/"&gt;Home&lt;/router-link&gt; |
    &lt;router-link :to="{ name: 'About' }"&gt;About&lt;/router-link&gt;
  &lt;/div&gt;
  &lt;router-view/&gt;
&lt;/template&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
}

#nav {
  padding: 30px;
}

#nav a {
  font-weight: bold;
  color: #2c3e50;
  text-decoration: none;
  padding: 10px;
  border-radius: 4px;
}

#nav a.router-link-exact-active {
  color: #fff;
  background: crimson;
}
&lt;/style&gt;
</code></pre>



<pre class="wp-block-code"><code>// Home.vue - 4 移除 import HelloWorld、修改 &lt;template&gt; 內容、移除 components 裡面的 HelloWorld

&lt;template&gt;
  &lt;div class="home"&gt;
    &lt;h1&gt;Homepage&lt;/h1&gt;
    &lt;p&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit. Officia incidunt accusantium deserunt praesentium debitis voluptate, ex numquam facere ut sed, odio quasi amet sint quae unde. Porro accusamus nobis eius? Perferendis magnam rem possimus natus ducimus pariatur expedita ad sequi minima. Eum ex vero impedit dolores corporis voluptate architecto, sit commodi, quaerat nihil laborum, repellendus accusamus. Minus quaerat labore soluta error consectetur voluptates placeat eum maiores. Ullam delectus omnis dolorum unde cupiditate officiis repudiandae nostrum? Qui est possimus maiores. Est, nihil deleniti, voluptate tenetur pariatur distinctio, et earum minima quo ullam libero quae atque delectus voluptatum esse ut. Ut, et?&lt;/p&gt;
    &lt;p&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit. Officia incidunt accusantium deserunt praesentium debitis voluptate, ex numquam facere ut sed, odio quasi amet sint quae unde. Porro accusamus nobis eius? Perferendis magnam rem possimus natus ducimus pariatur expedita ad sequi minima. Eum ex vero impedit dolores corporis voluptate architecto, sit commodi, quaerat nihil laborum, repellendus accusamus. Minus quaerat labore soluta error consectetur voluptates placeat eum maiores. Ullam delectus omnis dolorum unde cupiditate officiis repudiandae nostrum? Qui est possimus maiores. Est, nihil deleniti, voluptate tenetur pariatur distinctio, et earum minima quo ullam libero quae atque delectus voluptatum esse ut. Ut, et?&lt;/p&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  name: 'Home',
  components: { }
}
&lt;/script&gt;
</code></pre>



<pre class="wp-block-code"><code>// About.vue - 5 修改內容

&lt;template&gt;
  &lt;div class="about"&gt;
    &lt;h1&gt;This is an about page&lt;/h1&gt;
    &lt;p&gt;Lorem ipsum dolor sit amet consectetur, adipisicing elit. Repellat placeat debitis impedit repudiandae adipisci incidunt veritatis sit praesentium nulla. Laudantium numquam eos error. Laborum laudantium necessitatibus fugiat et obcaecati fuga repellendus? Consequatur mollitia eos expedita itaque suscipit corrupti nesciunt ducimus sint odio possimus architecto ipsa debitis, explicabo distinctio amet optio, iure tenetur quas ipsum, cum nam dicta quasi dolore at? Eligendi placeat facere iusto dignissimos delectus fugiat incidunt temporibus, veniam cum. Unde quaerat iste vero deserunt dicta facilis consequatur fugit omnis? Dicta reiciendis a rem culpa iste aliquam porro dolores, laudantium obcaecati veniam tenetur fugiat facilis voluptates eos excepturi quo?&lt;/p&gt;
    &lt;p&gt;Lorem ipsum dolor sit amet consectetur, adipisicing elit. Repellat placeat debitis impedit repudiandae adipisci incidunt veritatis sit praesentium nulla. Laudantium numquam eos error. Laborum laudantium necessitatibus fugiat et obcaecati fuga repellendus? Consequatur mollitia eos expedita itaque suscipit corrupti nesciunt ducimus sint odio possimus architecto ipsa debitis, explicabo distinctio amet optio, iure tenetur quas ipsum, cum nam dicta quasi dolore at? Eligendi placeat facere iusto dignissimos delectus fugiat incidunt temporibus, veniam cum. Unde quaerat iste vero deserunt dicta facilis consequatur fugit omnis? Dicta reiciendis a rem culpa iste aliquam porro dolores, laudantium obcaecati veniam tenetur fugiat facilis voluptates eos excepturi quo?&lt;/p&gt;
  &lt;/div&gt;
&lt;/template&gt;
</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Folder Structure (資料夾結構)</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ol><li>在 views 資料夾建立 Jobs.vue 檔案、內容，輸入 &lt;vue&gt; 出現下拉提示快捷建立</li><li>在 src/router/index.js 新增 routes 物件、import Jobs</li><li>在 App.vue 新增 Jobs 的 &lt;router-link&gt;</li><li>在 views 資料夾建立 JobDetails.vue 檔案，因為 Jobs.vue 與 JobDetails.vue 同類型的區域，會在 views 資料夾建立 jobs 資料夾、並把 Jobs.vue、JobDetails.vue 移動到 jobs 資料夾裡面，在移動後會產生錯誤，因此在 index.js 檔案要修改 Jobs.vue 位置</li></ol>



<pre class="wp-block-code"><code>// Jobs.vue - 1 新增內容

&lt;template&gt;
  &lt;h1&gt;Jobs&lt;/h1&gt;
  &lt;div v-for="job in jobs" :key="job.id"&gt;
    &lt;h2&gt;{{ job.title }}&lt;/h2&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  data() {
    return {
      jobs: &#91;
        { title: 'Ninja UX Designer', id: 1, details: 'lorem'},
        { title: 'Ninja Web Developer', id: 2, details: 'lorem'},
        { title: 'Ninja Vue Developer', id: 3, details: 'lorem'}
      ]
    }
  }
}
&lt;/script&gt;

&lt;style&gt;

&lt;/style&gt;</code></pre>



<pre class="wp-block-code"><code>// src/router/Jobs.vue - 2 新增 route 物件、import Jobs

import { createRouter, createWebHistory } from 'vue-router'
import Home from '../views/Home.vue'
import About from '../views/About.vue'
import Jobs from '../views/Jobs.vue'

const routes = &#91;
  {
    path: '/',
    name: 'Home',
    component: Home
  },
  {
    path: '/about',
    name: 'About',
    component: About
  },
  {
    path: '/jobs',
    name: 'Jobs',
    component: Jobs
  }
]

const router = createRouter({
  history: createWebHistory(process.env.BASE_URL),
  routes
})

export default router
</code></pre>



<pre class="wp-block-code"><code>// App.vue - 3 新增 Jobs 的 &lt;router-link&gt;

&lt;template&gt;
  &lt;div id="nav"&gt;
    &lt;router-link to="/"&gt;Home&lt;/router-link&gt; |
    &lt;router-link :to="{ name: 'About' }"&gt;About&lt;/router-link&gt; |
    &lt;router-link :to="{ name: 'Jobs' }"&gt;Jobs&lt;/router-link&gt;
  &lt;/div&gt;
  &lt;router-view/&gt;
&lt;/template&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
}

#nav {
  padding: 30px;
}

#nav a {
  font-weight: bold;
  color: #2c3e50;
  text-decoration: none;
  padding: 10px;
  border-radius: 4px;
}

#nav a.router-link-exact-active {
  color: #fff;
  background: crimson;
}
&lt;/style&gt;
</code></pre>



<pre class="wp-block-code"><code>// index.js - 修改 import Jobs 的位置

import { createRouter, createWebHistory } from 'vue-router'
import Home from '../views/Home.vue'
import About from '../views/About.vue'
import Jobs from '../views/jobs/Jobs.vue'

const routes = &#91;
  {
    path: '/',
    name: 'Home',
    component: Home
  },
  {
    path: '/about',
    name: 'About',
    component: About
  },
  {
    path: '/jobs',
    name: 'Jobs',
    component: Jobs
  }
]

const router = createRouter({
  history: createWebHistory(process.env.BASE_URL),
  routes
})

export default router
</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Route Parameters (路由參數)</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ol><li>講解 Route Parameters 觀念</li><li>在 src/router/index.js 新增 routes 物件、新增 import JobsDetails，然後儲存</li><li>在 JobDetails.vue 新增內容，然後到網頁連結加上 /1，就會顯示 Job Details Page 頁面，不論 / 後面加上什麼都會顯示 Job Details Page 頁面</li><li>接著在 JobDetails.vue 新增 p 段落，(:id 的命名可以客製化)，然後儲存、到網頁畫面可以看到 p 段落內容會與 /jobs/:id 一起更動</li><li>在 JobDetails.vue 我們也可以使用 export default 物件，也可以做相同的事情</li></ol>



<h4>Route Parameters</h4>



<figure class="wp-block-image size-full"><img loading="lazy" width="1757" height="707" src="/wordpress_blog/wp-content/uploads/2022/04/Route-Parameters.png" alt="" class="wp-image-564"/><figcaption>Route Parameters</figcaption></figure>



<pre class="wp-block-code"><code>// src/router/index.js - 2 新增 routes 物件、新增 import JobDetails

import { createRouter, createWebHistory } from 'vue-router'
import Home from '../views/Home.vue'
import About from '../views/About.vue'
import Jobs from '../views/jobs/Jobs.vue'
import JobDetails from '../views/jobs/JobDetails.vue'

const routes = &#91;
  {
    path: '/',
    name: 'Home',
    component: Home
  },
  {
    path: '/about',
    name: 'About',
    component: About
  },
  {
    path: '/jobs',
    name: 'Jobs',
    component: Jobs
  },
  {
    path: '/jobs/:id',
    name: 'JobDetails',
    component: JobDetails
  }
]

const router = createRouter({
  history: createWebHistory(process.env.BASE_URL),
  routes
})

export default router
</code></pre>



<pre class="wp-block-code"><code>// JobDetails.vue - 3 新增內容

&lt;template&gt;
  &lt;h1&gt;Job Details Page&lt;/h1&gt;
&lt;/template&gt;

&lt;script&gt;
export default {

}
&lt;/script&gt;

&lt;style&gt;

&lt;/style&gt;</code></pre>



<pre class="wp-block-code"><code>// JobDetails.vue - 4 新增 p 段落

&lt;template&gt;
  &lt;h1&gt;Job Details Page&lt;/h1&gt;
  &lt;p&gt;The job id is {{ $route.params.id }}&lt;/p&gt;
&lt;/template&gt;

&lt;script&gt;
export default {

}
&lt;/script&gt;

&lt;style&gt;

&lt;/style&gt;</code></pre>



<pre class="wp-block-code"><code>// JobDetails.vue - 5 使用 export default 做相同的事情

&lt;template&gt;
  &lt;h1&gt;Job Details Page&lt;/h1&gt;
  &lt;p&gt;The job id is {{ id }}&lt;/p&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  data() {
    return {
      id: this.$route.params.id
    }
  }
}
&lt;/script&gt;

&lt;style&gt;

&lt;/style&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Dynamic Links (動態連結)</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ol><li>在 Jobs.vue 把 &lt;h2&gt; 剪下，新增 &lt;router-link&gt;、把 &lt;h2&gt; 貼上，然後增加 :to 屬性</li><li>到網頁畫面 Google 檢視 Elements 可以看到 &lt;a&gt; href 屬性有 /jobs/1、/jobs/2、/jobs/3</li><li>在 JobDetails.vue export default 新增 props 屬性</li><li>在 index.js routes 的 JobDetails 那個物件新增 props 屬性</li><li>接著 JobDetails.vue export default 的 data() 就可以註解起來</li><li>到網頁畫面一切的功能仍可運作</li><li>在 jobs.vue 新增樣式，Jobs 頁面下方連結樣式</li></ol>



<pre class="wp-block-code"><code>// Jobs.vue - 1 新增 &lt;router-link&gt; 修改內容

&lt;template&gt;
  &lt;h1&gt;Jobs&lt;/h1&gt;
  &lt;div v-for="job in jobs" :key="job.id"&gt;
    &lt;router-link :to="{ name: 'JobDetails', params: { id: job.id } }"&gt;
      &lt;h2&gt;{{ job.title }}&lt;/h2&gt;
    &lt;/router-link&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  data() {
    return {
      jobs: &#91;
        { title: 'Ninja UX Designer', id: 1, details: 'lorem'},
        { title: 'Ninja Web Developer', id: 2, details: 'lorem'},
        { title: 'Ninja Vue Developer', id: 3, details: 'lorem'}
      ]
    }
  }
}
&lt;/script&gt;

&lt;style&gt;

&lt;/style&gt;</code></pre>



<pre class="wp-block-code"><code>// JobDetails.vue - 3 在 export default 新增 props 屬性

&lt;template&gt;
  &lt;h1&gt;Job Details Page&lt;/h1&gt;
  &lt;p&gt;The job id is {{ id }}&lt;/p&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  props: &#91;'id'],
  data() {
    return {
      id: this.$route.params.id
    }
  }
}
&lt;/script&gt;

&lt;style&gt;

&lt;/style&gt;</code></pre>



<pre class="wp-block-code"><code>// index.js - 4 在 routes 的 JobDetails 那個物件新增 props 屬性

import { createRouter, createWebHistory } from 'vue-router'
import Home from '../views/Home.vue'
import About from '../views/About.vue'
import Jobs from '../views/jobs/Jobs.vue'
import JobDetails from '../views/jobs/JobDetails.vue'

const routes = &#91;
  {
    path: '/',
    name: 'Home',
    component: Home
  },
  {
    path: '/about',
    name: 'About',
    component: About
  },
  {
    path: '/jobs',
    name: 'Jobs',
    component: Jobs
  },
  {
    path: '/jobs/:id',
    name: 'JobDetails',
    component: JobDetails,
    props: true
  }
]

const router = createRouter({
  history: createWebHistory(process.env.BASE_URL),
  routes
})

export default router
</code></pre>



<pre class="wp-block-code"><code>// JobDetails.vue - 5 data() 註解起來

&lt;template&gt;
  &lt;h1&gt;Job Details Page&lt;/h1&gt;
  &lt;p&gt;The job id is {{ id }}&lt;/p&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  props: &#91;'id'],
  // data() {
  //   return {
  //     id: this.$route.params.id
  //   }
  // }
}
&lt;/script&gt;

&lt;style&gt;

&lt;/style&gt;</code></pre>



<pre class="wp-block-code"><code>// jobs.vue - 7 新增 Jobs 下方連結樣式

&lt;template&gt;
  &lt;h1&gt;Jobs&lt;/h1&gt;
  &lt;div v-for="job in jobs" :key="job.id" class="job"&gt;
    &lt;router-link :to="{ name: 'JobDetails', params: { id: job.id } }"&gt;
      &lt;h2&gt;{{ job.title }}&lt;/h2&gt;
    &lt;/router-link&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  data() {
    return {
      jobs: &#91;
        { title: 'Ninja UX Designer', id: 1, details: 'lorem'},
        { title: 'Ninja Web Developer', id: 2, details: 'lorem'},
        { title: 'Ninja Vue Developer', id: 3, details: 'lorem'}
      ]
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
  .job h2 {
    background: #f4f4f4;
    padding: 20px;
    border-radius: 10px;
    margin: 10px auto;
    max-width: 600px;
    cursor: pointer;
    color: #444;
  }
  .job h2:hover {
    background: #ddd;
  }
  .job a {
    text-decoration: none;
  }
&lt;/style&gt;</code></pre>



<h3>404 Pages &amp; Redirects</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ol><li>在 index.js 新增 redirect</li><li>到網頁瀏覽器網址輸入 all-jobs 會重定向到 jobs</li><li>錯誤的網址輸入會出現錯誤頁面</li><li>在 views 資料夾建立 NotFound.vue 檔案(也可以客製化名稱)，新增樣板內容</li><li>在 src/router/index 新增 catchall 404 內容，新增 import NotFound</li><li>到網頁測試錯誤網址是否能出現錯誤畫面</li></ol>



<pre class="wp-block-code"><code>// index.js - 1 新增 redirect

import { createRouter, createWebHistory } from 'vue-router'
import Home from '../views/Home.vue'
import About from '../views/About.vue'
import Jobs from '../views/jobs/Jobs.vue'
import JobDetails from '../views/jobs/JobDetails.vue'

const routes = &#91;
  {
    path: '/',
    name: 'Home',
    component: Home
  },
  {
    path: '/about',
    name: 'About',
    component: About
  },
  {
    path: '/jobs',
    name: 'Jobs',
    component: Jobs
  },
  {
    path: '/jobs/:id',
    name: 'JobDetails',
    component: JobDetails,
    props: true
  },
  // redirect
  {
    path: '/all-jobs',
    redirect: '/jobs'
  }
]

const router = createRouter({
  history: createWebHistory(process.env.BASE_URL),
  routes
})

export default router
</code></pre>



<pre class="wp-block-code"><code>// NotFound.vue - 4 新增樣板內容

&lt;template&gt;
  &lt;h2&gt;404&lt;/h2&gt;
  &lt;h3&gt;Page not found&lt;/h3&gt;
&lt;/template&gt;</code></pre>



<pre class="wp-block-code"><code>// index.js - 5 新增 catchall 404 內容、新增 import NotFound

import { createRouter, createWebHistory } from 'vue-router'
import Home from '../views/Home.vue'
import About from '../views/About.vue'
import NotFound from '../views/NotFound.vue'
import Jobs from '../views/jobs/Jobs.vue'
import JobDetails from '../views/jobs/JobDetails.vue'

const routes = &#91;
  {
    path: '/',
    name: 'Home',
    component: Home
  },
  {
    path: '/about',
    name: 'About',
    component: About
  },
  {
    path: '/jobs',
    name: 'Jobs',
    component: Jobs
  },
  {
    path: '/jobs/:id',
    name: 'JobDetails',
    component: JobDetails,
    props: true
  },
  // redirect
  {
    path: '/all-jobs',
    redirect: '/jobs'
  },
  // catchall 404
  {
    path: '/:catchAll(.*)',
    name: 'NotFound',
    component: NotFound
  }
]

const router = createRouter({
  history: createWebHistory(process.env.BASE_URL),
  routes
})

export default router
</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Programmatic Navigation (程序化導航)</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ol><li>在 App.vue 新增三個按鈕、@click 事件、&lt;script&gt; export default、button 樣式</li><li>開始撰寫 back() 內容($router 與之前$route 的不同)，並測試向前的功能。接著寫 forward() 內容，然後測試向後的功能。接著寫 redirect() 內容，然後測試重定向到 home 頁面的功能。</li></ol>



<pre class="wp-block-code"><code>// App.vue - 1 新增三個按鈕、@click 事件、&lt;script&gt; export default、button 樣式

&lt;template&gt;
  &lt;div id="nav"&gt;
    &lt;router-link to="/"&gt;Home&lt;/router-link&gt; |
    &lt;router-link :to="{ name: 'About' }"&gt;About&lt;/router-link&gt; |
    &lt;router-link :to="{ name: 'Jobs' }"&gt;Jobs&lt;/router-link&gt;
  &lt;/div&gt;

  &lt;button @click="redirect"&gt;Redirect&lt;/button&gt;
  &lt;button @click="back"&gt;Go back&lt;/button&gt;
  &lt;button @click="forward"&gt;Go forward&lt;/button&gt;

  &lt;router-view/&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  methods: {
    redirect() {},
    back() {},
    forward() {}
  }
}
&lt;/script&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
}

#nav {
  padding: 30px;
}

#nav a {
  font-weight: bold;
  color: #2c3e50;
  text-decoration: none;
  padding: 10px;
  border-radius: 4px;
}

#nav a.router-link-exact-active {
  color: #fff;
  background: crimson;
}

button {
  margin: 0 10px;
  padding: 10px;
  border: none;
  border-radius: 4px;
}
&lt;/style&gt;
</code></pre>



<pre class="wp-block-code"><code>// App.vue - 2 撰寫 back()、forward()、redirect()

&lt;template&gt;
  &lt;div id="nav"&gt;
    &lt;router-link to="/"&gt;Home&lt;/router-link&gt; |
    &lt;router-link :to="{ name: 'About' }"&gt;About&lt;/router-link&gt; |
    &lt;router-link :to="{ name: 'Jobs' }"&gt;Jobs&lt;/router-link&gt;
  &lt;/div&gt;

  &lt;button @click="redirect"&gt;Redirect&lt;/button&gt;
  &lt;button @click="back"&gt;Go back&lt;/button&gt;
  &lt;button @click="forward"&gt;Go forward&lt;/button&gt;

  &lt;router-view/&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  methods: {
    redirect() {
      this.$router.push({ name: 'Home' })
    },
    back() {
      this.$router.go(-1)
    },
    forward() {
      this.$router.go(1)
    }
  }
}
&lt;/script&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
}

#nav {
  padding: 30px;
}

#nav a {
  font-weight: bold;
  color: #2c3e50;
  text-decoration: none;
  padding: 10px;
  border-radius: 4px;
}

#nav a.router-link-exact-active {
  color: #fff;
  background: crimson;
}

button {
  margin: 0 10px;
  padding: 10px;
  border: none;
  border-radius: 4px;
}
&lt;/style&gt;
</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Lazy Loading Components</h3>



<p>稍微簡單提及，可重複觀看、練習，查看文件。</p>



<h4>資源</h4>



<ul><li><a href="https://router.vuejs.org/guide/advanced/lazy-loading.html" target="_blank" rel="noreferrer noopener">Lazy Loading – Vue Router Docs</a></li></ul>



<h4>操作步驟</h4>



<ol><li>在 index.js 註解 import About、修改 route 的 About component</li></ol>



<pre class="wp-block-code"><code>// index.js - 1 註解 import About、修改 route 的 About component

import { createRouter, createWebHistory } from 'vue-router'
import Home from '../views/Home.vue'
// import About from '../views/About.vue'
import NotFound from '../views/NotFound.vue'
import Jobs from '../views/jobs/Jobs.vue'
import JobDetails from '../views/jobs/JobDetails.vue'

const routes = &#91;
  {
    path: '/',
    name: 'Home',
    component: Home
  },
  {
    path: '/about',
    name: 'About',
    component: () =&gt; import('../views/About.vue')
  },
  {
    path: '/jobs',
    name: 'Jobs',
    component: Jobs
  },
  {
    path: '/jobs/:id',
    name: 'JobDetails',
    component: JobDetails,
    props: true
  },
  // redirect
  {
    path: '/all-jobs',
    redirect: '/jobs'
  },
  // catchall 404
  {
    path: '/:catchAll(.*)',
    name: 'NotFound',
    component: NotFound
  }
]

const router = createRouter({
  history: createWebHistory(process.env.BASE_URL),
  routes
})

export default router</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Modern JavaScript (4)</title>
		<link>/wordpress_blog/modern-javascript-4/</link>
		
		<dc:creator><![CDATA[gee.hsu]]></dc:creator>
		<pubDate>Tue, 15 Feb 2022 06:17:00 +0000</pubDate>
				<category><![CDATA[The Net Ninja]]></category>
		<guid isPermaLink="false">/wordpress_blog/?p=527</guid>

					<description><![CDATA[(Complete guide, from Novice to  [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p>(Complete guide, from Novice to Ninja)</p>



<blockquote class="wp-block-quote"><p>Learning Udemy Course：<a href="https://www.udemy.com/course/modern-javascript-from-novice-to-ninja/" target="_blank" rel="noreferrer noopener">Modern JavaScript</a></p><cite>建立者：The Net Ninja (Shaun Pelling)</cite></blockquote>



<p>Learn Modern JavaScript from the very start to ninja-level &amp; build awesome JavaScript applications.</p>



<h4>您會學到</h4>



<ul><li>Learn how to program with modern JavaScript, from the very beginning to more advanced topics</li><li>Learn all about OOP (object-oriented programming) with JavaScript, working with prototypes &amp; classes</li><li>Learn how to create real-world front-end applications with JavaScript (quizes, weather apps, chat rooms etc)</li><li>Learn how to make useful JavaScript driven UI components like popups, drop-downs, tabs, tool-tips &amp; more.</li><li>Learn how to use modern, cutting-edge JavaScript features today by using a modern workflow (Babel &amp; Webpack)</li><li>Learn how to use real-time databases to store, retrieve and update application data</li><li>Explore API’s to make the most of third-party data (such as weather information)</li></ul>



<h2>Modern Workflow with Babel &amp; Webpack</h2>



<h3>Modern Feature Support</h3>



<h4>MDN 文件</h4>



<ul><li><a rel="noreferrer noopener" href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Classes#%E7%80%8F%E8%A6%BD%E5%99%A8%E7%9B%B8%E5%AE%B9%E6%80%A7" target="_blank">瀏覽器兼容性</a></li><li><a rel="noreferrer noopener" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes#browser_compatibility" target="_blank">Browser compatibility</a></li><li><a rel="noreferrer noopener" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#browser_compatibility" target="_blank">Template literals Browser Compatibility</a></li></ul>



<h4>工具</h4>



<ul><li><a rel="noreferrer noopener" href="https://babeljs.io/" target="_blank">Babel</a></li><li><a href="https://webpack.js.org/" target="_blank" rel="noreferrer noopener">webpack</a></li></ul>



<h3>An Introduction to Babel</h3>



<p>Modern Code 編譯成 以前版本的 Code</p>



<h4>資源</h4>



<ul><li><a rel="noreferrer noopener" href="https://babeljs.io/" target="_blank">Babel Website</a></li></ul>



<h4>操作</h4>



<ul><li>點擊 Try it out 使用</li></ul>



<p>沒有顯示舊版本的程式碼，Left side menu – ENV PRESET – FORCE ALL TRANSFORMS select.</p>



<pre class="wp-block-code"><code>// Babel 網頁版使用 - 1

function greet() {
  console.log('hello');
}</code></pre>



<pre class="wp-block-code"><code>// Babel 網頁版使用 - 2

const greet = function() {
  console.log('hello');
}</code></pre>



<pre class="wp-block-code"><code>// Babel 網頁版使用 - 3

const greet = function(name){
  console.log(`hello ${name}`);
}</code></pre>



<pre class="wp-block-code"><code>// Babel 網頁版使用 - 4

const greet = (name) =&gt; {
  console.log(`hello ${name}`);
}</code></pre>



<pre class="wp-block-code"><code>// Babel 網頁版使用 - 5

const greet = (name) =&gt; {
  console.log(`hello ${name}`);
}

class User {
  constructor(name){
    this.name = name;
  }
}</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Installing Node.js &amp; Babel</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>使用 Terminal 終端機查詢有無安裝 node.js<ul><li>輸入指令 node -v</li></ul></li><li>沒有就到Node.js官網下載、安裝，有就繼續以下步驟</li><li>清除 Terminal 終端機介面內容 clear</li><li>移動到專案資料夾 – cd 資料夾名稱</li><li>在 Terminal 終端機輸入 npm init 指令初始化項目，這裡沒有要特別設定就全部按 enter 就可以了，完成後會產生 package.json 檔案</li><li>使用 Terminal 終端機安裝 Babel core、Babel cli<ul><li>指令 npm install @babel/core @babel/cli –save-dev</li></ul></li><li>接著再使用 Terminal 終端機安裝 Babel preset-env<ul><li>指令 npm install @babel/preset-env –save-dev</li></ul></li><li>安裝好的套件會在 package.json 檔案呈現安裝的名稱、版本</li><li>建立一個 .babelrc 檔案</li></ul>



<pre class="wp-block-code"><code>// .babelrc

{
  "presets": &#91;"@babel/preset-env"]
}</code></pre>



<h4>Using Babel</h4>



<ol><li>Install Node.js (and npm) on our computer</li><li>Use npm init to create a package.json file in the project directory</li><li>Use npm to install babel/core &amp; babel/cli packages</li><li>Install the babel preset (env) &amp; register it in .babelrc</li></ol>



<h3>Using the Babel CLI</h3>



<h4>操作步驟</h4>



<ul><li>建立 before.js 檔案</li><li>使用 Terminal 終端機輸入指令<ul><li>node_modules/.bin/babel before.js -o after.js</li></ul></li><li>完成後會產生 after.js 檔案、以及以前版本的程式碼</li><li>移除 node_modules 資料夾</li><li>使用 npm install 指令安裝 node_modules 資料夾</li></ul>



<pre class="wp-block-code"><code>// before.js

const greet = (name) =&gt; {
  console.log(`hello ${name}`);
};

 greet();</code></pre>



<h4>講解</h4>



<p>可以使用 npm install 安裝 package.json 檔案套件名稱、版本</p>



<h3 class="has-background" style="background-color:#ff6663">NPM Scripts &amp; Watching Files</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>建立一個資料夾 src</li><li>在 src 資料夾裡面建立 index.js 檔案</li><li>建立一個資料夾 dist</li><li>在 dist 資料夾裡面建立 assets 資料夾</li><li>在 assets 資料夾裡面建立 bundle.js</li><li>在 dist 資料夾裡面建立 index.html 檔案</li><li>會在 src/index.js 檔案撰寫 js 程式碼</li><li>在 Terminal 終端機輸入指令<ul><li>node_modules/.bin/babel src/index.js -o dist/assets/bundle.js</li></ul></li><li>完成後 index.js 程式碼就會編譯到 bundle.js</li><li>可以在 package.json 新增 “scripts” 指令</li><li>執行 “scripts” 指令 (因為沒有變動程式碼，所以接著以下步驟)<ul><li>npm run babel</li></ul></li><li>在 index.js 檔案刪除這一行程式碼 greet(‘link’);、然後儲存</li><li>執行 “scripts” 指令<ul><li>npm run babel</li></ul></li><li>Watching Files 需要修改 “scripts” 指令</li></ul>



<pre class="wp-block-code"><code>// dist/index.html

&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Document&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;script src="assets/bundle.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// index.js

const greet = name =&gt; {
  console.log(`hello ${name}`);
};

greet('mario');
greet('luigi');
greet('link');</code></pre>



<pre class="wp-block-code"><code>// package.json - 1

{
  "name": "modern-javascript",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "babel": "node_modules/.bin/babel src/index.js -o dist/assets/bundle.js"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@babel/cli": "^7.17.0",
    "@babel/core": "^7.17.0",
    "@babel/preset-env": "^7.16.11"
  }
}
</code></pre>



<h4>使用 “scripts” 指令產生錯誤無法執行</h4>



<ul><li>修改成以下程式碼<ul><li>“babel” “babel src/index.js -o dist/assets/bundle.js</li></ul></li></ul>



<pre class="wp-block-code"><code>// package.json - 2

{
  "name": "modern-javascript",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "babel": "babel src/index.js -o dist/assets/bundle.js"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@babel/cli": "^7.17.0",
    "@babel/core": "^7.17.0",
    "@babel/preset-env": "^7.16.11"
  }
}
</code></pre>



<pre class="wp-block-code"><code>// package.json - 3 Watching Files

{
  "name": "modern-javascript",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "babel": "babel src/index.js -w -o dist/assets/bundle.js"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@babel/cli": "^7.17.0",
    "@babel/core": "^7.17.0",
    "@babel/preset-env": "^7.16.11"
  }
}
</code></pre>



<pre class="wp-block-code"><code>// index.js - 3 Watching Files

const greet = name =&gt; {
  console.log(`hello ${name}`);
};

greet('mario');
greet('luigi');
greet('link');

class User {
  constructor(){
    this.score = 0;
  }
}</code></pre>



<h3>What is Webpack?</h3>



<h4>Webpack</h4>



<ul><li>Webpack is a&nbsp;<strong>module bundler</strong>(模組打包工具)</li><li>Works well with babel</li><li>Local development server</li></ul>



<figure class="wp-block-image size-full"><img loading="lazy" width="1399" height="533" src="/wordpress_blog/wp-content/uploads/2022/04/bundle.png" alt="" class="wp-image-529"/><figcaption>bundle</figcaption></figure>



<h3 class="has-background" style="background-color:#ff6663">Setting up a Webpack File</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>在專案裡建立 webpack.config.js 檔案</li><li>entry 進入點、output 輸出點</li></ul>



<pre class="wp-block-code"><code>// webpack.config.js

const path = require('path');

module.exports = {
  entry: './src/index.js',
  output: {
    path: path.resolve(__dirname, 'dist/assets'),
    filename: 'bundle.js'
  }
};

</code></pre>



<h4>webpack 文件</h4>



<ul><li><a href="https://webpack.js.org/concepts/" target="_blank" rel="noreferrer noopener">Concepts 連結</a></li></ul>



<h3 class="has-background" style="background-color:#ff6663">Webpack CLI (Command-Line Interface 命令列介面)</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>使用 Terminal 終端機移動到專案位置 cd 專案名稱</li><li>使用 Terminal 終端機輸入指令安裝 webpack、webpack-cli<ul><li>npm install webpack webpack-cli –save-dev</li></ul></li><li>使用 Terminal 終端機輸入指令執行 webpack、在這之前調整 src/index.js 檔案內容，確認 webpack.config.js 有儲存、然後執行以下指令<ul><li>node_modules/.bin/webpack</li></ul></li><li>完成後會發現 dist/assets/bundle.js 檔案有很大的不同，會變成只有一行程式碼</li><li>在 package.json 檔案 “scripts” 新增指令<ul><li>“webpack”: “node_modules/.bin/webpack”</li></ul></li><li>在 index.js 修改程式碼內容後，執行 package.json 裡面的 “scripts” 的 “webpack” 指令<ul><li>執行指令 npm run webpack</li></ul></li></ul>



<pre class="wp-block-code"><code>// index.js - 1

const greet = name =&gt; {
  console.log(`hello ${name}`);
};

greet('mario');
greet('luigi');
greet('link');

</code></pre>



<pre class="wp-block-code"><code>// package.json - 新增 "scripts" 指令 "webpack"

{
  "name": "modern-javascript",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "babel": "babel src/index.js -w -o dist/assets/bundle.js",
    "webpack": "node_modules/.bin/webpack"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@babel/cli": "^7.17.0",
    "@babel/core": "^7.17.0",
    "@babel/preset-env": "^7.16.11",
    "webpack": "^5.68.0",
    "webpack-cli": "^4.9.2"
  }
}
</code></pre>



<pre class="wp-block-code"><code>// index.js - 2

const greet = name =&gt; {
  console.log(`hello ${name}`);
};

greet('mario');
greet('luigi');
greet('link');
greet('link');

</code></pre>



<pre class="wp-block-code"><code>// package.json - 1 產生錯誤

{
  "name": "modern-javascript",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "babel": "babel src/index.js -w -o dist/assets/bundle.js",
    "webpack": "node_modules/.bin/webpack"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@babel/cli": "^7.17.0",
    "@babel/core": "^7.17.0",
    "@babel/preset-env": "^7.16.11",
    "webpack": "^5.68.0",
    "webpack-cli": "^4.9.2"
  }
}
</code></pre>



<h4>執行 webpack 指令產生錯誤</h4>



<ul><li>package.json 檔案裡面的 “scripts” 指令的 “webpack” 做修改<ul><li>“webpack”: “webpack”</li></ul></li></ul>



<pre class="wp-block-code"><code>// package.json - 2 修改 "webpack" 指令

{
  "name": "modern-javascript",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "babel": "babel src/index.js -w -o dist/assets/bundle.js",
    "webpack": "webpack"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@babel/cli": "^7.17.0",
    "@babel/core": "^7.17.0",
    "@babel/preset-env": "^7.16.11",
    "webpack": "^5.68.0",
    "webpack-cli": "^4.9.2"
  }
}
</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Introduction to Modules</h3>



<p>比較複雜，不懂可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>刪除 src/index.js 裡面所有程式碼</li><li>在 src 資料夾裡面建立 dom.js 檔案</li><li>在 src/index.js 載入 dom.js</li><li>執行 webpack 指令<ul><li>npm run webpack</li></ul></li><li>在 dist/assets/bundle.js 可以看到編譯後的程式碼</li><li>網頁出現錯誤、重新執行 live server，可以看到網頁畫面、以及 console.log 的結果</li><li>用 index.js 講解變數、函式無法從 dom.js 拿來 index.js 用，每個檔案有自己的獨特的範圍</li><li>執行 webpack 指令</li><li>dom.js 新增 export</li><li>index.js 修改 import</li><li>儲存後、執行 npm run webpack 指令，可以看到網頁新增 test 標題</li><li>dom.js 刪除一些程式碼</li><li>index.js 新增一些程式碼</li><li>執行 npm run webpack 指令，這樣仍會運作</li><li>在 dom.js 再新增 export</li><li>在 index.js 再新增 import</li><li>儲存後、執行 npm run webpack 指令</li><li>dom.js 在底下一起 export</li><li>index.js 一樣、不用變動</li><li>執行 npm run webpack 指令、一樣運作</li></ul>



<pre class="wp-block-code"><code>// dom.js - 1

console.log('dom file');

const body = document.querySelector('body');

const styleBody = () =&gt; {
  body.style.background = 'peachpuff';
};

const addTitle = (text) =&gt; {
  const title = document.createElement('h1');
  title.textContent = text;
  body.appendChild(title)
};

styleBody();
addTitle('hello, world from the dom file');</code></pre>



<pre class="wp-block-code"><code>// index.js - 1

import './dom';

console.log('index file');
</code></pre>



<pre class="wp-block-code"><code>// index.js - 2

import './dom';

console.log('index file');
addTitle('test');
</code></pre>



<pre class="wp-block-code"><code>// Google Console - 2
   dom file
   index file
x  Uncaught ReferenceError: addTitle is not defined
&gt;</code></pre>



<pre class="wp-block-code"><code>// dom.js - 3

console.log('dom file');

const body = document.querySelector('body');

export const styleBody = () =&gt; {
  body.style.background = 'peachpuff';
};

export const addTitle = (text) =&gt; {
  const title = document.createElement('h1');
  title.textContent = text;
  body.appendChild(title)
};

styleBody();
addTitle('hello, world from the dom file');</code></pre>



<pre class="wp-block-code"><code>// index.js - 3

import {styleBody, addTitle} from './dom';

console.log('index file');
addTitle('test');
</code></pre>



<pre class="wp-block-code"><code>// dom.js - 4 刪除一些程式碼

console.log('dom file');

const body = document.querySelector('body');

export const styleBody = () =&gt; {
  body.style.background = 'peachpuff';
};

export const addTitle = (text) =&gt; {
  const title = document.createElement('h1');
  title.textContent = text;
  body.appendChild(title)
};

</code></pre>



<pre class="wp-block-code"><code>// index.js - 4 新增一些程式碼

import {styleBody, addTitle} from './dom';

console.log('index file');
addTitle('test');
styleBody();</code></pre>



<pre class="wp-block-code"><code>// dom.js - 5 再新增 export

console.log('dom file');

const body = document.querySelector('body');

export const styleBody = () =&gt; {
  body.style.background = 'peachpuff';
};

export const addTitle = (text) =&gt; {
  const title = document.createElement('h1');
  title.textContent = text;
  body.appendChild(title)
};

export const contact = 'mario@thenetninja.co.uk';
</code></pre>



<pre class="wp-block-code"><code>// index.js - 5 再新增 import

import {styleBody, addTitle, contact} from './dom';

console.log('index file');
addTitle('test');
styleBody();
console.log(contact);</code></pre>



<pre class="wp-block-code"><code>// dom.js - 6 在底下一起 export

console.log('dom file');

const body = document.querySelector('body');

const styleBody = () =&gt; {
  body.style.background = 'peachpuff';
};

const addTitle = (text) =&gt; {
  const title = document.createElement('h1');
  title.textContent = text;
  body.appendChild(title)
};

const contact = 'mario@thenetninja.co.uk';

export { styleBody, addTitle, contact };</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Default Exports</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>在 src 資料夾建立 data.js 檔案</li><li>在 data.js 檔案新增程式碼內容</li><li>在 index.js 檔案 import 載入 data.js</li><li>執行 webpack 指令</li><li>查看 Google Console</li><li>在 data.js 新增函式</li><li>在 index.js 程式碼新增</li><li>儲存後、執行 webpack 指令</li><li>查看 Google Console</li><li>在 data.js 另一種 export 寫法、其他不變</li><li>儲存後、執行 webpack 指令，所有仍然運作</li></ul>



<pre class="wp-block-code"><code>// data.js - 1

const users = &#91;
  { name: 'mario', premium: true },
  { name: 'luigi', premium: false },
  { name: 'yoshi', premium: true },
  { name: 'toad', premium: true },
  { name: 'peach', premium: false }
];

export default users;</code></pre>



<pre class="wp-block-code"><code>// index.js - 1

import {styleBody, addTitle, contact} from './dom';
import users from './data';

console.log(users);

</code></pre>



<pre class="wp-block-code"><code>// Google Console - 1
   dom file
   (5) &#91;{...}, {...}, {...}, {...}, {...}]
&gt;</code></pre>



<pre class="wp-block-code"><code>// data.js - 2 新增函式

const users = &#91;
  { name: 'mario', premium: true },
  { name: 'luigi', premium: false },
  { name: 'yoshi', premium: true },
  { name: 'toad', premium: true },
  { name: 'peach', premium: false }
];

export const getPremUsers = (users) =&gt; {
  return users.filter(user =&gt; user.premium);
};

export default users;</code></pre>



<pre class="wp-block-code"><code>// index.js - 2

import {styleBody, addTitle, contact} from './dom';
import users, { getPremUsers } from './data';

const premUsers = getPremUsers(users);
console.log(users, premUsers);

</code></pre>



<pre class="wp-block-code"><code>// Google Console - 2
   dom file
   (5) &#91;{...}, {...}, {...}, {...}, {...}] (3) &#91;{...}, {...}, {...}]
&gt;</code></pre>



<pre class="wp-block-code"><code>// data.js - 3 另一種 export 寫法

const users = &#91;
  { name: 'mario', premium: true },
  { name: 'luigi', premium: false },
  { name: 'yoshi', premium: true },
  { name: 'toad', premium: true },
  { name: 'peach', premium: false }
];

const getPremUsers = (users) =&gt; {
  return users.filter(user =&gt; user.premium);
};

export { getPremUsers, users as default }</code></pre>



<h3>Watching for Changes</h3>



<h4>操作步驟</h4>



<ul><li>在 package.json 修改 “scripts” 中 “webpack” 指令<ul><li>修改前 “node_modules/.bin/webpack -w”</li><li>修改後 “webpack”: “webpack -w”</li></ul></li><li>用 index.js 檔案測試 watching 是否有正確使用</li><li>查看 Google Console 看是否有執行</li><li>停止 watching 可以在 Terminal 終端機使用 Ctrl + c、然後輸入 Y 停止</li></ul>



<pre class="wp-block-code"><code>// package.json

{
  "name": "modern-javascript",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "babel": "babel src/index.js -w -o dist/assets/bundle.js",
    "webpack": "webpack -w"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@babel/cli": "^7.17.0",
    "@babel/core": "^7.17.0",
    "@babel/preset-env": "^7.16.11",
    "webpack": "^5.68.0",
    "webpack-cli": "^4.9.2"
  }
}
</code></pre>



<pre class="wp-block-code"><code>// index.js

import {styleBody, addTitle, contact} from './dom';
import users, { getPremUsers } from './data';

const premUsers = getPremUsers(users);
console.log(users, premUsers);

console.log('test');</code></pre>



<pre class="wp-block-code"><code>// Google Console
   dom file
   (5) &#91;{...}, {...}, {...}, {...}, {...}] (3) &#91;{...}, {...}, {...}]
   test
&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">The Webpack Dev Server</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>停止 live server</li><li>使用 Terminal 終端機安裝套件<ul><li>產生錯誤 npm install webpack-dev-server@3.2.1</li><li>修正後 npm install webpack-dev-server 版本是 4.7.4</li></ul></li><li>在 webpack.config.js 新增關於 devServer 程式碼</li><li>在 package.json 新增 “scripts” 指令<ul><li>“serve”: “webpack-dev-server”</li></ul></li><li>執行 serve 指令、產生錯誤</li><li>修改 webpack.config.js 的 devServer</li><li>在終端機 Project is running at 連結，使用 ctrl+左鍵打開網頁</li><li>用 index.js 來測試是否又正確執行，結果出現 test 沒有變動</li><li>再次修改 webpack.config.js 的 devServer，test 會變動了</li><li>有一個問題是虛擬檔案、沒有編譯程式碼到 bundle.js</li><li>藉由刪除 bundle.js 所有程式碼來展示確實沒有編譯程式碼到 bundle.js</li><li>用 index.js 來測試，bundle.js 一樣沒有編譯完成的程式碼</li></ul>



<h4>webpack 文件</h4>



<ul><li><a rel="noreferrer noopener" href="https://webpack.js.org/api/webpack-dev-server/" target="_blank">webpack-dev-server API</a></li><li><a href="https://webpack.js.org/configuration/dev-server/" target="_blank" rel="noreferrer noopener">DevServer</a></li></ul>



<pre class="wp-block-code"><code>// package.json

{
  "name": "modern-javascript",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "babel": "babel src/index.js -w -o dist/assets/bundle.js",
    "webpack": "webpack -w"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@babel/cli": "^7.17.0",
    "@babel/core": "^7.17.0",
    "@babel/preset-env": "^7.16.11",
    "webpack": "^5.68.0",
    "webpack-cli": "^4.9.2"
  },
  "dependencies": {
    "webpack-dev-server": "^4.7.4"
  }
}
</code></pre>



<pre class="wp-block-code"><code>// webpack.config.js - 修改前

const path = require('path');

module.exports = {
  entry: './src/index.js',
  output: {
    path: path.resolve(__dirname, 'dist/assets'),
    filename: 'bundle.js'
  },
  devServer: {
    contentBase: path.resolve(__dirname, 'dist'),
    publicPath: '/assets/'
  }
};

</code></pre>



<pre class="wp-block-code"><code>// package.json - 修改前

{
  "name": "modern-javascript",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "babel": "babel src/index.js -w -o dist/assets/bundle.js",
    "webpack": "webpack -w",
    "serve": "webpack-dev-server"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@babel/cli": "^7.17.0",
    "@babel/core": "^7.17.0",
    "@babel/preset-env": "^7.16.11",
    "webpack": "^5.68.0",
    "webpack-cli": "^4.9.2"
  },
  "dependencies": {
    "webpack-dev-server": "^4.7.4"
  }
}
</code></pre>



<pre class="wp-block-code"><code>// webpack.config.js - 修改後

const path = require('path');

module.exports = {
  entry: './src/index.js',
  output: {
    path: path.resolve(__dirname, 'dist/assets'),
    filename: 'bundle.js'
  },
  devServer: {
    static: {
      directory: path.join(__dirname, 'dist'),
    }
  }
};

</code></pre>



<pre class="wp-block-code"><code>// index.js - 測試

import {styleBody, addTitle, contact} from './dom';
import users, { getPremUsers } from './data';

const premUsers = getPremUsers(users);
console.log(users, premUsers);

console.log('test 2');</code></pre>



<pre class="wp-block-code"><code>// webpack.config.js - 再次修改 devServer

const path = require('path');

module.exports = {
  mode: 'none',
  entry: './src/index.js',
  output: {
    path: path.resolve(__dirname, 'dist/assets'),
    filename: 'bundle.js'
  },
  devServer: {
    static: {
      directory: path.join(__dirname, 'dist')
    },
    devMiddleware: {
      publicPath: '/assets'
    }
  },
};

</code></pre>



<pre class="wp-block-code"><code>// index.js - 再測試

import {styleBody, addTitle, contact} from './dom';
import users, { getPremUsers } from './data';

const premUsers = getPremUsers(users);
console.log(users, premUsers);

console.log('test 3');</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Production &amp; Development Modes</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>修改 package.json 的 “scripts” 指令<ul><li>移除 “babel” 指令</li><li>修改 “webpack” 指令改成 “build” 指令</li></ul></li><li>停止 Terminal 終端機 Ctrl + c</li><li>執行指令 npm run build，就會看到 bundle.js 編譯出程式碼</li><li>終端機出現警告是關於沒有設定 mode 的訊息</li><li>在 package.json “scripts” 指令 “build”、”serve” 設定 mode<ul><li>“build”: “webpack –mode production”</li><li>“serve”: “webpack-dev-server –mode development”</li></ul></li><li>在終端機先使用 clear 清楚終端機畫面，執行 npm run build 指令</li><li>執行 npm run serve 指令</li></ul>



<pre class="wp-block-code"><code>// package.json - 1

{
  "name": "modern-javascript",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "build": "webpack",
    "serve": "webpack-dev-server"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@babel/cli": "^7.17.0",
    "@babel/core": "^7.17.0",
    "@babel/preset-env": "^7.16.11",
    "webpack": "^5.68.0",
    "webpack-cli": "^4.9.2"
  },
  "dependencies": {
    "webpack-dev-server": "^4.7.4"
  }
}
</code></pre>



<pre class="wp-block-code"><code>// webpack.config.js - 把 mode 移除

const path = require('path');

module.exports = {
  entry: './src/index.js',
  output: {
    path: path.resolve(__dirname, 'dist/assets'),
    filename: 'bundle.js'
  },
  devServer: {
    static: {
      directory: path.join(__dirname, 'dist')
    },
    devMiddleware: {
      publicPath: '/assets'
    }
  },
};

</code></pre>



<pre class="wp-block-code"><code>// package.json - 2 mode 設定

{
  "name": "modern-javascript",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "build": "webpack --mode production",
    "serve": "webpack-dev-server --mode development"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@babel/cli": "^7.17.0",
    "@babel/core": "^7.17.0",
    "@babel/preset-env": "^7.16.11",
    "webpack": "^5.68.0",
    "webpack-cli": "^4.9.2"
  },
  "dependencies": {
    "webpack-dev-server": "^4.7.4"
  }
}
</code></pre>



<h4>webpack 指令模式</h4>



<ul><li>production mode 上線模式</li><li>development mode 開發模式</li></ul>



<h3 class="has-background" style="background-color:#ff6663">Babel &amp; Webpack Together</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>安裝 babel-loader 套件<ul><li>終端機指令 npm install babel-loader –save-dev</li></ul></li><li>在 webpack.config.js 新增 module 程式碼</li><li>在 data.js 我們有使用箭頭函式</li><li>在 Terminal 終端機輸入指令<ul><li>npm run build</li></ul></li><li>查看 bundle.js 是否有編譯成以前的程式碼</li></ul>



<pre class="wp-block-code"><code>// webpack.config.js

const path = require('path');

module.exports = {
  entry: './src/index.js',
  output: {
    path: path.resolve(__dirname, 'dist/assets'),
    filename: 'bundle.js'
  },
  devServer: {
    static: {
      directory: path.join(__dirname, 'dist')
    },
    devMiddleware: {
      publicPath: '/assets'
    }
  },
  module: {
    rules: &#91;{
      test: /\.js$/,
      exclude: /node_modules/,
      use: {
        loader: 'babel-loader',
        options: {
          presets: &#91;'@babel/preset-env']
        }
      }
    }]
  }
};

</code></pre>



<h3>Webpack Boilerplate (Webpack 樣板)</h3>



<p>可以下載 Webpack Boilerplate (Webpack 樣板) 使用。</p>



<h4>資源</h4>



<ul><li><a href="https://github.com/iamshaunjp/modern-javascript/tree/lesson-165" target="_blank" rel="noreferrer noopener">Link to Boilerplate Webpack Template on GitHub</a></li></ul>



<h4>操作步驟</h4>



<ul><li>下載 Webpack Boilerplate</li><li>複製 Boilerplate 裡面的檔案，貼到自己的 project 專案</li><li>可以藉由 package.json 檔案裡面的套件名稱、版本安裝 node_modules 資料夾<ul><li>終端機指令 npm install</li></ul></li><li>在 package.json 找到 “scripts” 指令，並執行 “serve” 指令<ul><li>npm run serve</li></ul></li><li>打開終端機出現的本地端網址，在 Google Console 上並沒有出現任何程式碼</li><li>在 index.js 撰寫程式碼</li><li>查看 Google Console 是否有出現 console 結果</li></ul>



<pre class="wp-block-code"><code>// index.js

console.log('hello, ninjas');</code></pre>



<h2 class="has-background" style="background-color:#ff6663">Project – UI Library</h2>



<p>比較複雜，可重複觀看、練習。</p>



<h3 class="has-background" style="background-color:#ff6663">Project Preview &amp; Setup</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>下載 Webpack Boilerplate</li><li>建立一個資料夾 ui-lib-project</li><li>複製 Webpack Boilerplate 裡面的檔案到 ui-lib-project 資料夾</li><li>打開 Terminal 終端機移動到專案位置 cd ui-lib-project</li><li>安裝 package.json 裡面的所有套件<ul><li>指令 npm install</li></ul></li><li>查看 package.json 上的 “scripts” 指令中的 “serve” 指令<ul><li>執行指令 npm run serve</li></ul></li><li>開啟終端機上的本地端網址</li><li>藉由 index.js 測試是否有正常運行</li><li>查看 Google Console 有無出現 console 結果</li><li>在 src 資料夾裡面建立 ninja-ui 資料夾</li></ul>



<pre class="wp-block-code"><code>// index.js

console.log('test');</code></pre>



<h4>UI Library CSS</h4>



<p>Keep the library css in JavaScript together inside the folder right here. And that means we’re going to need to process our css through webpack using css loader, because this is in the source folder, not the distribution folder.</p>



<p>在下一章節會講到如何透過 Webpack 處理 CSS。</p>



<h3 class="has-background" style="background-color:#ff6663">CSS &amp; Style Loaders (webpack)</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>停止終端機 Ctrl + C</li><li>安裝 css-loader、style-loader 套件<ul><li>終端機指令 npm install css-loader style-loader –save-dev</li></ul></li><li>在 webpack.config.js module 的 rules 裡面程式碼新增第二個</li><li>執行 “scripts” 指令 npm run serve</li><li>在 src 資料夾新增一個 test.css 檔案</li><li>使用終端機打開本地端網頁，沒有產生渲染結果，因為我們沒有 import 這個 css 檔案</li><li>在 index.js import 載入 test.css</li><li>查看 Goolge Elemets 在 &lt;head&gt; 可以看到 CSS 樣式</li><li>在 ninja_ui 資料夾建立一個 styles 資料夾</li></ul>



<pre class="wp-block-code"><code>// webpack.config.js

const path = require('path');

module.exports = {
  entry: './src/index.js',
  output: {
    path: path.resolve(__dirname, 'dist/assets'),
    filename: 'bundle.js'
  },
  devServer: {
    static: {
      directory: path.join(__dirname, 'dist')
    },
    devMiddleware: {
      publicPath: '/assets'
    }
  },
  module: {
    rules: &#91;
      {
        test: /\.js$/,
        exclude: /node_modules/,
        use: {
          loader: 'babel-loader',
          options: {
            presets: &#91;'@babel/preset-env']
          }
        }
      },
      {
        test: /\.css$/,
        use: &#91;'style-loader', 'css-loader']
      }
    ]
  }
};

</code></pre>



<pre class="wp-block-code"><code>// test.css

body {
  background: orange;
}</code></pre>



<pre class="wp-block-code"><code>// index.js

import './test.css';

console.log('test');</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Tooltips (工具提示框)</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>在 index.html 新增程式碼內容、樣式</li><li>在 ninja-ui 資料夾建立 tooltip.js 檔案</li><li>在 index.js import 載入 Tooltip、並 create a tooltip，在那之前要先在 tooltip.js export 匯出</li><li>在 styles 資料夾建立 tooltip.css 檔案</li><li>在 tooltip.js import 載入 tooltip.css</li></ul>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;UI Library&lt;/title&gt;
  &lt;style&gt;
    body {
      font-size: 1.5em;
    }

    .container {
      margin: 40px;
      margin-top: 60px;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;div class="container"&gt;
    &lt;!-- tooltop --&gt;
    &lt;p&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit. Hic, reiciendis vel mollitia neque libero nulla, earum, nisi a distinctio doloremque porro aliquam. Alias, ratione. Laudantium neque enim et ipsa corrupti. &lt;span class="tooltip" data-message="I'm a tooltip!!"&gt;Lorem, ipsum.&lt;/span&gt;Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quasi sequi natus pariatur odio repudiandae provident. Accusamus quidem quaerat, enim beatae dolorum iusto in iure similique esse tempora animi, non eveniet!&lt;/p&gt;
  &lt;/div&gt;

  &lt;script src="assets/bundle.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// tooltip.js - 1

class Tooltip {
  constructor(element){
    this.element = element;
    this.message = element.getAttribute('data-message');
  }
  init(){
    const tip = document.createElement('div');
    tip.classList.add('tip');
    tip.textContent = this.message;
    this.element.appendChild(tip);
  }
}</code></pre>



<pre class="wp-block-code"><code>// tooltip.js - 2 export 匯出

class Tooltip {
  constructor(element){
    this.element = element;
    this.message = element.getAttribute('data-message');
  }
  init(){
    const tip = document.createElement('div');
    tip.classList.add('tip');
    tip.textContent = this.message;
    this.element.appendChild(tip);
  }
}

export { Tooltip as default };</code></pre>



<pre class="wp-block-code"><code>// index.js

import Tooltip from './ninja-ui/tooltip';

// create a tooltip
const tooltip = new Tooltip(document.querySelector('.tooltip'));

tooltip.init();
</code></pre>



<pre class="wp-block-code"><code>// tooltip.js - 3 addEventListener

class Tooltip {
  constructor(element){
    this.element = element;
    this.message = element.getAttribute('data-message');
  }
  init(){
    const tip = document.createElement('div');
    tip.classList.add('tip');
    tip.textContent = this.message;
    this.element.appendChild(tip);

    this.element.addEventListener('mouseenter', () =&gt; {
      tip.classList.add('active');
    });

    this.element.addEventListener('mouseleave', () =&gt; {
      tip.classList.remove('active');
    });
  }
}

export { Tooltip as default };</code></pre>



<pre class="wp-block-code"><code>// styles/tooltip.css

.tooltip {
  position: relative;
  display: inline-block;
  color: #ff6565;
  border-bottom: 1px dotted #ff6565;
  cursor: help;
}
.tip {
  visibility: hidden;
  width: 150px;
  background-color: #ff6565;
  color: #fff;
  text-align: center;
  border-radius: 10px;
  padding: 5px 0;
  position: absolute;
  bottom: 120%;
  left: 50%;
  margin-left: -75px;
  opacity: 0;
  transition: opacity 0.3s;
}
.tip.active {
  visibility: visible;
  opacity: 1;
}
.tip::after {
  content: "";
  position: absolute;
  top: 100%;
  left: 50%;
  margin-left: -4px;
  border-width: 4px;
  border-style: solid;
  border-color: transparent;
  border-top-color: #ff6565;
}</code></pre>



<pre class="wp-block-code"><code>// tooltip.js - 4

import './styles/tooltip.css';

class Tooltip {
  constructor(element){
    this.element = element;
    this.message = element.getAttribute('data-message');
  }
  init(){
    const tip = document.createElement('div');
    tip.classList.add('tip');
    tip.textContent = this.message;
    this.element.appendChild(tip);

    this.element.addEventListener('mouseenter', () =&gt; {
      tip.classList.add('active');
    });

    this.element.addEventListener('mouseleave', () =&gt; {
      tip.classList.remove('active');
    });
  }
}

export { Tooltip as default };</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Dropdowns</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>在 index.html 新增程式碼內容</li><li>在 ninja-ui 資料夾建立 dropdown.js 檔案</li><li>在 index.js import 載入 Dropdown、並 create dropdowns</li><li>使用 Google 檢查、藉由點擊觸發監聽行為</li><li>在 styles 資料夾建立 dropdown.css 檔案、新增程式碼內容</li><li>在 dropdown.js import 載入 dropdown.css</li></ul>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;UI Library&lt;/title&gt;
  &lt;style&gt;
    body {
      font-size: 1.5em;
    }

    .container {
      margin: 40px;
      margin-top: 60px;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;div class="container"&gt;
    &lt;!-- tooltop --&gt;
    &lt;p&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit. Hic, reiciendis vel mollitia neque libero nulla, earum, nisi a distinctio doloremque porro aliquam. Alias, ratione. Laudantium neque enim et ipsa corrupti. &lt;span class="tooltip" data-message="I'm a tooltip!!"&gt;Lorem, ipsum.&lt;/span&gt;Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quasi sequi natus pariatur odio repudiandae provident. Accusamus quidem quaerat, enim beatae dolorum iusto in iure similique esse tempora animi, non eveniet!&lt;/p&gt;
    &lt;h2&gt;Services&lt;/h2&gt;
    &lt;!-- dropdowns --&gt;
    &lt;div class="dropdown"&gt;
      &lt;div class="trigger"&gt;Awesome T-shirt Designs&lt;/div&gt;
      &lt;div class="content"&gt;
        &lt;p&gt;Lorem ipsum dolor, sit amet consectetur adipisicing elit. Animi minus non sed assumenda molestiae amet quisquam temporibus ratione dolorem. Ea non quibusdam eveniet eum tempora molestiae asperiores labore, dolorum iste.&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="dropdown"&gt;
      &lt;div class="trigger"&gt;Cool Sticker Printing&lt;/div&gt;
      &lt;div class="content"&gt;
        &lt;p&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit. Culpa quidem nihil nam quasi consequatur deserunt nemo alias corrupti ex at nisi fugit veritatis veniam voluptate error recusandae, dolorem debitis unde.&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;

  &lt;script src="assets/bundle.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// dropdown.js

class Dropdown {
  constructor(container){
    this.container = container;
    this.trigger = container.querySelector('.trigger');
    this.content = container.querySelector('.content');
  }
  init(){
    this.trigger.addEventListener('click', () =&gt; {
      this.trigger.classList.toggle('active');
      this.content.classList.toggle('active');
    })
  }
}

export { Dropdown as default };</code></pre>



<pre class="wp-block-code"><code>// index.js

import Tooltip from './ninja-ui/tooltip';
import Dropdown from './ninja-ui/dropdown';

// create a tooltip
const tooltip = new Tooltip(document.querySelector('.tooltip'));

tooltip.init();

// create dropdowns
const dropdowns = document.querySelectorAll('.dropdown');

dropdowns.forEach(dropdown =&gt; {
  const instance = new Dropdown(dropdown);
  instance.init();
})</code></pre>



<pre class="wp-block-code"><code>// dropdown.css

.dropdown .trigger{
  border-bottom: 1px solid #ddd;
  padding: 10px;
  position: relative;
  cursor: pointer;
}
.dropdown .trigger::after{
  content: "&gt;";
  display: inline-block;
  position: absolute;
  right: 15px;
  transform: rotate(90deg) scale(0.5, 1);
  font-weight: bold;
  transition: transform 0.3s;
}
.dropdown .trigger.active::after{
  transform: rotate(-90deg) scale(0.5, 1);
}
.dropdown .content{
  display: none;
}
.dropdown .content.active{
  display: block;
}</code></pre>



<pre class="wp-block-code"><code>// dropdown.js import 載入 dropdown.css

import './styles/dropdown.css';

class Dropdown {
  constructor(container){
    this.container = container;
    this.trigger = container.querySelector('.trigger');
    this.content = container.querySelector('.content');
  }
  init(){
    this.trigger.addEventListener('click', () =&gt; {
      this.trigger.classList.toggle('active');
      this.content.classList.toggle('active');
    })
  }
}

export { Dropdown as default };</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Tabbed Content (頁籤內容)</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>新增 index.html Tabbed Content 內容</li><li>使用終端機執行指令 npm run serve 看網頁是否有新增 Tabbed Content 內容</li><li>在 ninja-ui 資料夾建立 tabs.js 檔案，新增 tabs.js 程式碼、export 預設匯出 Tabs</li><li>在 index.js import 載入 Tabs 從 tabs.js，並在下面 create tabs</li><li>在 Google Console 出現錯誤，在 tabs.js 的地方、我們必需把 querySelector 改成 querySelectorAll</li><li>在 Google Elements 測試點擊頁籤看是否會切換 active</li><li>在 styles 資料夾新增 tabs.css 檔案，並新增 CSS 樣式</li><li>在 tabs.js import 載入 tabs.css</li></ul>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;UI Library&lt;/title&gt;
  &lt;style&gt;
    body {
      font-size: 1.5em;
    }

    .container {
      margin: 40px;
      margin-top: 60px;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;div class="container"&gt;
    &lt;!-- tooltop --&gt;
    &lt;p&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit. Hic, reiciendis vel mollitia neque libero nulla, earum, nisi a distinctio doloremque porro aliquam. Alias, ratione. Laudantium neque enim et ipsa corrupti. &lt;span class="tooltip" data-message="I'm a tooltip!!"&gt;Lorem, ipsum.&lt;/span&gt;Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quasi sequi natus pariatur odio repudiandae provident. Accusamus quidem quaerat, enim beatae dolorum iusto in iure similique esse tempora animi, non eveniet!&lt;/p&gt;
    &lt;h2&gt;Services&lt;/h2&gt;
    &lt;!-- dropdowns --&gt;
    &lt;div class="dropdown"&gt;
      &lt;div class="trigger"&gt;Awesome T-shirt Designs&lt;/div&gt;
      &lt;div class="content"&gt;
        &lt;p&gt;Lorem ipsum dolor, sit amet consectetur adipisicing elit. Animi minus non sed assumenda molestiae amet quisquam temporibus ratione dolorem. Ea non quibusdam eveniet eum tempora molestiae asperiores labore, dolorum iste.&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="dropdown"&gt;
      &lt;div class="trigger"&gt;Cool Sticker Printing&lt;/div&gt;
      &lt;div class="content"&gt;
        &lt;p&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit. Culpa quidem nihil nam quasi consequatur deserunt nemo alias corrupti ex at nisi fugit veritatis veniam voluptate error recusandae, dolorem debitis unde.&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;h2&gt;More information&lt;/h2&gt;
    &lt;!-- tabs --&gt;
    &lt;div class="tabs"&gt;
      &lt;ul&gt;
        &lt;li class="trigger active" data-target="#about"&gt;About&lt;/li&gt;
        &lt;li class="trigger" data-target="#delivery"&gt;Delivery info&lt;/li&gt;
        &lt;li class="trigger" data-target="#returns"&gt;Returns info&lt;/li&gt;
      &lt;/ul&gt;
      &lt;div id="about" class="content active"&gt;
        &lt;h3&gt;about&lt;/h3&gt;
        &lt;p&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit. Explicabo natus sequi nemo sint error cupiditate praesentium nisi commodi, beatae laborum quisquam ea, atque recusandae totam optio suscipit, ab corrupti illo.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div id="delivery" class="content"&gt;
        &lt;h3&gt;delivery&lt;/h3&gt;
        &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolore autem quisquam architecto aliquam. Corporis veniam recusandae doloribus, vitae illum voluptate earum impedit molestiae deleniti voluptatum inventore voluptates! Delectus, quia excepturi?&lt;/p&gt;
      &lt;/div&gt;
      &lt;div id="returns" class="content"&gt;
        &lt;h3&gt;returns&lt;/h3&gt;
        &lt;p&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit. Assumenda, ullam aut! Saepe, pariatur! Est aperiam provident dicta cum. Dolorum doloremque error id! Veniam aut architecto necessitatibus reiciendis officiis quisquam delectus!&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;

  &lt;script src="assets/bundle.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// tabs.js

class Tabs{
  constructor(container){
    this.container = container;
    this.tabs = container.querySelector('.trigger');
  }
  init(){
    this.tabs.forEach(tab =&gt; {
      tab.addEventListener('click', e =&gt; {
        this.toggleTabs(e);
        this.toggleContent(e);
      })
    })
  }
  toggleTabs(e){
    // remove current active classes
    this.tabs.forEach(tab =&gt; tab.classList.remove('active'));
    // add new active class to clicked tab
    e.target.classList.add('active'); 
  }
  toggleContent(e){
    // remove current active classes from content
    this.container.querySelectorAll('.content').forEach(item =&gt; {
      item.classList.remove('active');
    });
    // add new active class to content
    const selector = e.target.getAttribute('data-target');
    const content = this.container.querySelector(selector);
    content.classList.add('active');
  }
}

export { Tabs as default };</code></pre>



<pre class="wp-block-code"><code>// index.js

import Tooltip from './ninja-ui/tooltip';
import Dropdown from './ninja-ui/dropdown';
import Tabs from './ninja-ui/tabs';

// create a tooltip
const tooltip = new Tooltip(document.querySelector('.tooltip'));

tooltip.init();

// create dropdowns
const dropdowns = document.querySelectorAll('.dropdown');

dropdowns.forEach(dropdown =&gt; {
  const instance = new Dropdown(dropdown);
  instance.init();
});

// create tabs
const tabs = new Tabs(document.querySelector('.tabs'));
tabs.init();</code></pre>



<pre class="wp-block-code"><code>// tabs.js - 把第4行 querySelector 改成 querySelectorAll

class Tabs{
  constructor(container){
    this.container = container;
    this.tabs = container.querySelectorAll('.trigger');
  }
  init(){
    this.tabs.forEach(tab =&gt; {
      tab.addEventListener('click', e =&gt; {
        this.toggleTabs(e);
        this.toggleContent(e);
      })
    })
  }
  toggleTabs(e){
    // remove current active classes
    this.tabs.forEach(tab =&gt; tab.classList.remove('active'));
    // add new active class to clicked tab
    e.target.classList.add('active'); 
  }
  toggleContent(e){
    // remove current active classes from content
    this.container.querySelectorAll('.content').forEach(item =&gt; {
      item.classList.remove('active');
    });
    // add new active class to content
    const selector = e.target.getAttribute('data-target');
    const content = this.container.querySelector(selector);
    content.classList.add('active');
  }
}

export { Tabs as default };</code></pre>



<pre class="wp-block-code"><code>// tabs.css

.tabs &gt; ul {
  padding: 0;
}
.tabs .trigger {
  list-style-type: none;
  padding: 10px;
  background: #f2f2f2;
  margin: 4px;
  border-radius: 6px;
  display: inline-block;
  padding: 10px 20px;
  cursor: pointer;
}
.tabs .trigger.active {
  background: #ff6565;
  color: white;
}
.tabs .content {
  background: #fbfbfb;
  padding: 10px 20px;
  border-radius: 6px;
  display: none;
}
.tabs .content.active {
  display: block;
}</code></pre>



<pre class="wp-block-code"><code>// tabs.js

import './styles/tabs.css';

class Tabs{
  constructor(container){
    this.container = container;
    this.tabs = container.querySelectorAll('.trigger');
  }
  init(){
    this.tabs.forEach(tab =&gt; {
      tab.addEventListener('click', e =&gt; {
        this.toggleTabs(e);
        this.toggleContent(e);
      })
    })
  }
  toggleTabs(e){
    // remove current active classes
    this.tabs.forEach(tab =&gt; tab.classList.remove('active'));
    // add new active class to clicked tab
    e.target.classList.add('active'); 
  }
  toggleContent(e){
    // remove current active classes from content
    this.container.querySelectorAll('.content').forEach(item =&gt; {
      item.classList.remove('active');
    });
    // add new active class to content
    const selector = e.target.getAttribute('data-target');
    const content = this.container.querySelector(selector);
    content.classList.add('active');
  }
}

export { Tabs as default };</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Snackbars</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>在 index.html 新增 snackbars 內容、以及按鈕的 CSS 樣式</li><li>在 ninja-ui 資料夾建立 snackbar.js 檔案，新增 Snackbar 程式碼內容、以及 export 預設載入 Snackbar</li><li>在 index.js import 匯入 Snackbar 從 snackbar.js，並在下面 create snackbar</li><li>在 Google Elements 可在 &lt;body&gt; 之前看到 snackbar 類別</li><li>在 snackbar.js 新增 show() 方法</li><li>在 index.js 新增關於 button addEventListener 按鈕監聽</li><li>在網頁點擊按鈕後會出現文字</li><li>在 styles 資料夾建立 snackbar.css 檔案、並新增 CSS 內容</li><li>在 snackbar.js import 載入 snackbar.css</li></ul>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;UI Library&lt;/title&gt;
  &lt;style&gt;
    body {
      font-size: 1.5em;
    }

    .container {
      margin: 40px;
      margin-top: 60px;
    }

    button {
      width: 200px;
      background: #eee;
      padding: 10px;
      margin: 20px auto;
      border: none;
      border-radius: 4px;
      font-size: 1em;
      cursor: pointer;
      display: block;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;div class="container"&gt;
    &lt;!-- tooltop --&gt;
    &lt;p&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit. Hic, reiciendis vel mollitia neque libero nulla, earum, nisi a distinctio doloremque porro aliquam. Alias, ratione. Laudantium neque enim et ipsa corrupti. &lt;span class="tooltip" data-message="I'm a tooltip!!"&gt;Lorem, ipsum.&lt;/span&gt;Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quasi sequi natus pariatur odio repudiandae provident. Accusamus quidem quaerat, enim beatae dolorum iusto in iure similique esse tempora animi, non eveniet!&lt;/p&gt;
    &lt;h2&gt;Services&lt;/h2&gt;
    &lt;!-- dropdowns --&gt;
    &lt;div class="dropdown"&gt;
      &lt;div class="trigger"&gt;Awesome T-shirt Designs&lt;/div&gt;
      &lt;div class="content"&gt;
        &lt;p&gt;Lorem ipsum dolor, sit amet consectetur adipisicing elit. Animi minus non sed assumenda molestiae amet quisquam temporibus ratione dolorem. Ea non quibusdam eveniet eum tempora molestiae asperiores labore, dolorum iste.&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="dropdown"&gt;
      &lt;div class="trigger"&gt;Cool Sticker Printing&lt;/div&gt;
      &lt;div class="content"&gt;
        &lt;p&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit. Culpa quidem nihil nam quasi consequatur deserunt nemo alias corrupti ex at nisi fugit veritatis veniam voluptate error recusandae, dolorem debitis unde.&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;h2&gt;More information&lt;/h2&gt;
    &lt;!-- tabs --&gt;
    &lt;div class="tabs"&gt;
      &lt;ul&gt;
        &lt;li class="trigger active" data-target="#about"&gt;About&lt;/li&gt;
        &lt;li class="trigger" data-target="#delivery"&gt;Delivery info&lt;/li&gt;
        &lt;li class="trigger" data-target="#returns"&gt;Returns info&lt;/li&gt;
      &lt;/ul&gt;
      &lt;div id="about" class="content active"&gt;
        &lt;h3&gt;about&lt;/h3&gt;
        &lt;p&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit. Explicabo natus sequi nemo sint error cupiditate praesentium nisi commodi, beatae laborum quisquam ea, atque recusandae totam optio suscipit, ab corrupti illo.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div id="delivery" class="content"&gt;
        &lt;h3&gt;delivery&lt;/h3&gt;
        &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolore autem quisquam architecto aliquam. Corporis veniam recusandae doloribus, vitae illum voluptate earum impedit molestiae deleniti voluptatum inventore voluptates! Delectus, quia excepturi?&lt;/p&gt;
      &lt;/div&gt;
      &lt;div id="returns" class="content"&gt;
        &lt;h3&gt;returns&lt;/h3&gt;
        &lt;p&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit. Assumenda, ullam aut! Saepe, pariatur! Est aperiam provident dicta cum. Dolorum doloremque error id! Veniam aut architecto necessitatibus reiciendis officiis quisquam delectus!&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div&gt;
      &lt;button class="snackbar-trigger"&gt;click me&lt;/button&gt;
    &lt;/div&gt;
  &lt;/div&gt;

  &lt;script src="assets/bundle.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// snackbar.js

class Snackbar {
  constructor(){
    this.snackbar = document.createElement('div');
  }
  init(){
    this.snackbar.classList.add('snackbar');
    document.querySelector('body').appendChild(this.snackbar);
  }
}

export { Snackbar as default };</code></pre>



<pre class="wp-block-code"><code>// index.js

import Tooltip from './ninja-ui/tooltip';
import Dropdown from './ninja-ui/dropdown';
import Tabs from './ninja-ui/tabs';
import Snackbar from './ninja-ui/snackbar';

// create a tooltip
const tooltip = new Tooltip(document.querySelector('.tooltip'));

tooltip.init();

// create dropdowns
const dropdowns = document.querySelectorAll('.dropdown');

dropdowns.forEach(dropdown =&gt; {
  const instance = new Dropdown(dropdown);
  instance.init();
});

// create tabs
const tabs = new Tabs(document.querySelector('.tabs'));
tabs.init();

// create snackbar
const snackbar = new Snackbar();
snackbar.init();</code></pre>



<pre class="wp-block-code"><code>// snackbar.js - show()

class Snackbar {
  constructor(){
    this.snackbar = document.createElement('div');
  }
  init(){
    this.snackbar.classList.add('snackbar');
    document.querySelector('body').appendChild(this.snackbar);
  }
  show(message){
    this.snackbar.textContent = message;
    this.snackbar.classList.add('active');
    setTimeout(() =&gt; {
      this.snackbar.classList.remove('active');
    }, 4000);
  }
}

export { Snackbar as default };</code></pre>



<pre class="wp-block-code"><code>// index.js - button addEventListener

import Tooltip from './ninja-ui/tooltip';
import Dropdown from './ninja-ui/dropdown';
import Tabs from './ninja-ui/tabs';
import Snackbar from './ninja-ui/snackbar';

// create a tooltip
const tooltip = new Tooltip(document.querySelector('.tooltip'));

tooltip.init();

// create dropdowns
const dropdowns = document.querySelectorAll('.dropdown');

dropdowns.forEach(dropdown =&gt; {
  const instance = new Dropdown(dropdown);
  instance.init();
});

// create tabs
const tabs = new Tabs(document.querySelector('.tabs'));
tabs.init();

// create snackbar
const snackbar = new Snackbar();
snackbar.init();

const button = document.querySelector('button');
button.addEventListener('click', () =&gt; {
  snackbar.show('you clicked me :)');
});</code></pre>



<pre class="wp-block-code"><code>// styles/snackbar.css

.snackbar {
  width: 200px;
  padding: 20px;
  position: fixed;
  left: 50%;
  margin-left: -120px;
  top: 0;
  border-radius: 0 0 5px 5px;
  box-shadow: 1px 3px 5px rgba(0,0,0,0.2);
  background: #ff6565;
  text-align: center;
  color: #fff;
  margin-top: -100%;
  transition: all 0.2s;
}
.snackbar.active {
  margin-top: 0;
}</code></pre>



<pre class="wp-block-code"><code>// snackbar.js - import 載入 snackbar.css

import './styles/snackbar.css';

class Snackbar {
  constructor(){
    this.snackbar = document.createElement('div');
  }
  init(){
    this.snackbar.classList.add('snackbar');
    document.querySelector('body').appendChild(this.snackbar);
  }
  show(message){
    this.snackbar.textContent = message;
    this.snackbar.classList.add('active');
    setTimeout(() =&gt; {
      this.snackbar.classList.remove('active');
    }, 4000);
  }
}

export { Snackbar as default };</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Extending the Library</h3>



<h4>build and upload our final project (建立以及上傳你最終專案)</h4>



<ul><li>在 package.json 查看 “scripts” 指令</li><li>執行 “build” 指令 npm run build</li></ul>



<h4>延伸使用 Library</h4>



<ul><li>ninja-ui 資料夾可以複製到不同專案上使用</li></ul>



<h2 class="has-background" style="background-color:#ff6663">Using Firebase Database (&amp; Auth) Version 9</h2>



<p>更新之前 Databases (Firebase) 章節。</p>



<h3>What’s New in Firebase 9?</h3>



<h4>Firebase Documentation</h4>



<ul><li><a href="https://firebase.google.com/docs/web/modular-upgrade?authuser=0" target="_blank" rel="noreferrer noopener">升級到 v9 模塊化 SDK</a></li><li><a rel="noreferrer noopener" href="https://firebase.google.com/docs/auth/web/password-auth?authuser=0" target="_blank">密碼驗證</a></li></ul>



<h4>資源</h4>



<ul><li><a rel="noreferrer noopener" href="https://github.com/iamshaunjp/Getting-Started-with-Firebase-9" target="_blank">Getting-Started-with-Firebase-9 GitHub</a></li><li><a rel="noreferrer noopener" href="https://nodejs.org/en/" target="_blank">Node.js</a></li></ul>



<h3 class="has-background" style="background-color:#ff6663">Webpack Setup</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>建立一個專案資料夾 firebase-9-dojo</li><li>在專案裡面建立 src 資料夾</li><li>在 src 資料夾建立 index.js 檔案，當作 entry file 進入點</li><li>在專案裡面建立 dist 資料夾</li><li>在 dist 資料夾建立 index.html 檔案，並新增 index.html 內容</li><li>打開 Terminal 終端機執行初始化指令 npm init -y 快速建立 package.json 檔案</li><li>使用 Terminal 終端機安裝 webpack、webpack-cli 套件<ul><li>npm i webpack webpack-cli -D</li></ul></li><li>在專案裡新增 webpack.config.js 檔案、並設定 webpack</li><li>在 package.json “scripts” 指令設定客製化指令<ul><li>“build”: “webpack”，build 可以自行設定指令名稱</li></ul></li><li>在 index.js 新增一些程式碼，確認是否能正確運作</li><li>打開 Terminal 終端機，先使用 clear 指令清除終端機畫面、接著執行 npm run build，會產生 bundle.js 檔案</li><li>在 index.html 新增&lt;script&gt; 把 bundle.js 載入</li><li>使用 live server 插件 (沒有安裝需到 Extensions 搜尋安裝)、執行 live server</li><li>查看 Google Console 看是否有正確顯示</li></ul>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Firebase 9&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Getting started with firebase 9&lt;/h1&gt;
  
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// webpack.config.js

const path = require('path');

module.exports = {
  mode: 'development',
  entry: './src/index.js',
  output: {
    path: path.resolve(__dirname, 'dist'),
    filename: 'bundle.js'
  },
  watch: true
}</code></pre>



<pre class="wp-block-code"><code>// package.json

{
  "name": "firebase-9-dojo",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" &amp;&amp; exit 1",
    "build": "webpack"
  },
  "keywords": &#91;],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "webpack": "^5.68.0",
    "webpack-cli": "^4.9.2"
  }
}
</code></pre>



<pre class="wp-block-code"><code>// index.js

console.log('hello from index.js');</code></pre>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Firebase 9&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Getting started with firebase 9&lt;/h1&gt;
  
  &lt;script src="bundle.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Creating a Firebase Project</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>到 Firebase Console (控制台)</li><li>Add project (新增專案)</li><li>Firebase name – Firebase 9 Dojo、然後按下繼續</li><li>我們這個專案不需要 Google Analytics (Google 分析)、然後按下建立專案、完成後按繼續</li><li>將 Firebase 新增至應用程式即可開始使用，點選網頁</li><li>Register app (註冊應用程式)<ul><li>App nickname: firebase 9 dojo website</li></ul></li><li>Continue to console (前往控制台)</li><li>點擊 1個 個應用程式、設定按鈕</li><li>在 SDK 設定和配置，選擇設定、並複製下面的程式碼</li><li>在 index.js 先把 console.log 程式碼移除、並把剛複製的程式碼貼上、在儲存之前我們先打開終端機安裝 firebase 套件，安裝後儲存<ul><li>npm install firebase</li></ul></li><li>在 index.js import 載入 firebase、複習 8 的版本、如何使用 9 的版本</li></ul>



<pre class="wp-block-code"><code>// index.js - 1 API串接資料查詢 Firebase

const firebaseConfig = {
  apiKey: "",
  authDomain: "",
  projectId: "",
  storageBucket: "",
  messagingSenderId: "",
  appId: ""
};</code></pre>



<pre class="wp-block-code"><code>// index.js - 2 Firebase 8 版本

import firebase from 'firebase/app'

const firebaseConfig = {
  apiKey: "",
  authDomain: "",
  projectId: "",
  storageBucket: "",
  messagingSenderId: "",
  appId: ""
};

firebase.initializeApp(firebaseConfig)</code></pre>



<pre class="wp-block-code"><code>// index.js - 3 Firebase 9 版本

import { initializeApp } from 'firebase/app'

const firebaseConfig = {
  apiKey: "",
  authDomain: "",
  projectId: "",
  storageBucket: "",
  messagingSenderId: "",
  appId: ""
};

initializeApp(firebaseConfig)</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Firestore Setup &amp; Fetching Data</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>建立 Firestore Database</li><li>點擊建立資料庫、在這我們先使用以測試模式啟動</li><li>設定 Cloud Firestore 位置、然後啟用</li><li>點擊新增集合、集合 ID 叫做 books、然後按下一步</li><li>新增第一份文件、文件 ID 使用自動產生的 ID、欄位 title, 類型 string, 值 the name of the wind、欄位 author, 類型 string, 值 patrick rothfuss，然後按下儲存</li><li>再新增兩份類似的文件，欄位 title, 類型 string, 值 the wise man’s fear、欄位 author, 類型 string, 值 patrick rothfuss，然後按下儲存，欄位 title, 類型 string, 值 the final empire、欄位 author, 類型 string, 值 brandon sanders，然後按下儲存</li><li>在 index.js 新增新的註解、程式碼</li><li>使用 live server、查看 Google Console</li><li>修改 index.js get collection data 程式碼，然後再次查看 Google Console</li></ul>



<pre class="wp-block-code"><code>// index.js - API串接資料查看 Firebase

import { initializeApp } from 'firebase/app'
import {
  getFirestore, collection, getDocs
} from 'firebase/firestore'

const firebaseConfig = {
  apiKey: "",
  authDomain: "",
  projectId: "",
  storageBucket: "",
  messagingSenderId: "",
  appId: ""
};

// init firebase app
initializeApp(firebaseConfig)

// init services
const db = getFirestore()

// collection ref
const colRef = collection(db, 'books')

// get collection data
getDocs(colRef)
  .then((snapshot) =&gt; {
    console.log(snapshot.docs)
  })</code></pre>



<pre class="wp-block-code"><code>// index.js 修改 get collection data
// API 串接資料查閱 Firebase

import { initializeApp } from 'firebase/app'
import {
  getFirestore, collection, getDocs
} from 'firebase/firestore'

const firebaseConfig = {
  apiKey: "",
  authDomain: "",
  projectId: "",
  storageBucket: "",
  messagingSenderId: "",
  appId: ""
};

// init firebase app
initializeApp(firebaseConfig)

// init services
const db = getFirestore()

// collection ref
const colRef = collection(db, 'books')

// get collection data
getDocs(colRef)
  .then((snapshot) =&gt; {
    let books = &#91;]
    snapshot.docs.forEach((doc) =&gt; {
      books.push({ ...doc.data(), id: doc.id })
    })
    console.log(books)
  })
  .catch(err =&gt; {
    console.log(err.message)
  })</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Adding &amp; Deleting Documents</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>在 index.html 新增樣板內容</li><li>在 index.js 新增增加文件、刪除文件程式碼</li><li>在 index.js 增加 import 內容、addDoc，然後儲存</li><li>使用 live server 開啟網頁輸入標題 the way of kings、作者 brandon anderson、然後新增書本</li><li>在 index.js 增加 import 內容、deleteDoc, doc，然後儲存</li><li>在網頁的 Google Console 找到資料 id、然後複製貼到 Document id 欄位並且按下刪除書本，會清除欄位，在網頁重新整理後會剩下3筆資料</li></ul>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Firebase 9&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Getting started with firebase 9&lt;/h1&gt;
  
  &lt;h2&gt;Firebase Firestore&lt;/h2&gt;

  &lt;form class="add"&gt;
    &lt;label for="title"&gt;Title:&lt;/label&gt;
    &lt;input type="text" name="title" required&gt;
    &lt;label for="author"&gt;Author:&lt;/label&gt;
    &lt;input type="text" name="author" required&gt;

    &lt;button&gt;add a new book&lt;/button&gt;
  &lt;/form&gt;

  &lt;form class="delete"&gt;
    &lt;label for="id"&gt;Document id:&lt;/label&gt;
    &lt;input type="text" name="id" required&gt;

    &lt;button&gt;delete a book&lt;/button&gt;
  &lt;/form&gt;
  
  &lt;script src="bundle.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// index.js - 1 adding, deleting documents
// API 串接資料查閱 Firebase

import { initializeApp } from 'firebase/app'
import {
  getFirestore, collection, getDocs
} from 'firebase/firestore'

const firebaseConfig = {
  apiKey: "",
  authDomain: "",
  projectId: "",
  storageBucket: "",
  messagingSenderId: "",
  appId: ""
};

// init firebase app
initializeApp(firebaseConfig)

// init services
const db = getFirestore()

// collection ref
const colRef = collection(db, 'books')

// get collection data
getDocs(colRef)
  .then((snapshot) =&gt; {
    let books = &#91;]
    snapshot.docs.forEach((doc) =&gt; {
      books.push({ ...doc.data(), id: doc.id })
    })
    console.log(books)
  })
  .catch(err =&gt; {
    console.log(err.message)
  })
  
// adding documents
const addBookForm = document.querySelector('.add')
addBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()


})

// deleting documents
const deleteBookForm = document.querySelector('.delete')
deleteBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()
  
})</code></pre>



<pre class="wp-block-code"><code>// index.js - 2 增加 import 內容、addDoc
// API 串接資料查閱 Firebase

import { initializeApp } from 'firebase/app'
import {
  getFirestore, collection, getDocs,
  addDoc
} from 'firebase/firestore'

const firebaseConfig = {
  apiKey: "",
  authDomain: "",
  projectId: "",
  storageBucket: "",
  messagingSenderId: "",
  appId: ""
};

// init firebase app
initializeApp(firebaseConfig)

// init services
const db = getFirestore()

// collection ref
const colRef = collection(db, 'books')

// get collection data
getDocs(colRef)
  .then((snapshot) =&gt; {
    let books = &#91;]
    snapshot.docs.forEach((doc) =&gt; {
      books.push({ ...doc.data(), id: doc.id })
    })
    console.log(books)
  })
  .catch(err =&gt; {
    console.log(err.message)
  })
  
// adding documents
const addBookForm = document.querySelector('.add')
addBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  addDoc(colRef, {
    title: addBookForm.title.value,
    author: addBookForm.author.value,
  })
  .then(() =&gt; {
    addBookForm.reset()
  })

})

// deleting documents
const deleteBookForm = document.querySelector('.delete')
deleteBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

})</code></pre>



<pre class="wp-block-code"><code>// index.js - 3 增加 import 內容、deleteDoc, doc
// API 串接資料查閱 Firebase

import { initializeApp } from 'firebase/app'
import {
  getFirestore, collection, getDocs,
  addDoc, deleteDoc, doc
} from 'firebase/firestore'

const firebaseConfig = {
  apiKey: "",
  authDomain: "",
  projectId: "",
  storageBucket: "",
  messagingSenderId: "",
  appId: ""
};

// init firebase app
initializeApp(firebaseConfig)

// init services
const db = getFirestore()

// collection ref
const colRef = collection(db, 'books')

// get collection data
getDocs(colRef)
  .then((snapshot) =&gt; {
    let books = &#91;]
    snapshot.docs.forEach((doc) =&gt; {
      books.push({ ...doc.data(), id: doc.id })
    })
    console.log(books)
  })
  .catch(err =&gt; {
    console.log(err.message)
  })
  
// adding documents
const addBookForm = document.querySelector('.add')
addBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  addDoc(colRef, {
    title: addBookForm.title.value,
    author: addBookForm.author.value,
  })
  .then(() =&gt; {
    addBookForm.reset()
  })

})

// deleting documents
const deleteBookForm = document.querySelector('.delete')
deleteBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const docRef = doc(db, 'books', deleteBookForm.id.value)

  deleteDoc(docRef)
    .then(() =&gt; {
      deleteBookForm.reset()
    })
})</code></pre>



<h4>Google Console 出現警告 – DevTools failed to load source map</h4>



<ul><li>F12 &gt; 設定圖示 &gt; Preferences &gt; Sources 取消勾選<ul><li>Enable JavaScript source maps</li><li>Enable CSS source maps</li></ul></li></ul>



<h4>新增一筆資料，Google Console 沒有顯示新增的資料</h4>



<ul><li>執行”build” 指令 npm run build</li></ul>



<h3 class="has-background" style="background-color:#ff6663">Real Time Collection Data</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>修改 index.js 檔案 get collection data 改成 real time collection data、import 的 getDocs 改成 onSnapshot，新增 onSnapshot 方法、刪除 getDocs 方法、然後儲存</li><li>在 Google Console 複製 “the wise man’s fear” 這筆資料 id、然後貼到欄位、按下刪除書本，可即時刪除剩下3筆資料</li><li>新增一筆資料，標題 the wise man’s fear、作者 patrick rothfuss、按下新增書本，可即時新增變成4筆資料</li></ul>



<pre class="wp-block-code"><code>// index.js - 修改 index.js 檔案
// api 串接資料查閱 Firebase

import { initializeApp } from 'firebase/app'
import {
  getFirestore, collection, onSnapshot,
  addDoc, deleteDoc, doc
} from 'firebase/firestore'

const firebaseConfig = {
  apiKey: "",
  authDomain: "",
  projectId: "",
  storageBucket: "",
  messagingSenderId: "",
  appId: ""
};

// init firebase app
initializeApp(firebaseConfig)

// init services
const db = getFirestore()

// collection ref
const colRef = collection(db, 'books')

// real time collection data
onSnapshot(colRef, (snapshot) =&gt; {
  let books = &#91;]
  snapshot.docs.forEach((doc) =&gt; {
    books.push({ ...doc.data(), id: doc.id })
  })
  console.log(books)
})
  
// adding documents
const addBookForm = document.querySelector('.add')
addBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  addDoc(colRef, {
    title: addBookForm.title.value,
    author: addBookForm.author.value,
  })
  .then(() =&gt; {
    addBookForm.reset()
  })

})

// deleting documents
const deleteBookForm = document.querySelector('.delete')
deleteBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const docRef = doc(db, 'books', deleteBookForm.id.value)

  deleteDoc(docRef)
    .then(() =&gt; {
      deleteBookForm.reset()
    })
})</code></pre>



<pre class="wp-block-code"><code>// Google Console
   (4) &#91;{...}, {...}, {...}, {...}]
     0: {author: 'patrick rothfuss', title: 'the name of the wind'}
     1: {author: 'brandon sanderson', title: 'the final empire'}
     2: {title: "the wise man's fear", author: 'patrick rothfuss'}
     3: {author: 'brandon sanderson', title: 'the way of kings'}
     &#91;&#91;Prototype]]: Array(0)
&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Firestore Queries</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>在 index.js 增加 import 內容、新增 queries 註解</li><li>在網頁欄位標題 abc、作者 def，然後新增書本不會顯示新增資料</li><li>在網頁欄位標題 abc、作者 patrick rothfuss，會新增資料</li><li>複製標題為 abc 資料的 id 貼到欄位，然後刪除書本</li></ul>



<pre class="wp-block-code"><code>// index.js 增加 import 內容、新增 queries 註解、修改 real time collection data
// api 串接資料查閱 Firebase

import { initializeApp } from 'firebase/app'
import {
  getFirestore, collection, onSnapshot,
  addDoc, deleteDoc, doc,
  query, where
} from 'firebase/firestore'

const firebaseConfig = {
  apiKey: "",
  authDomain: "",
  projectId: "",
  storageBucket: "",
  messagingSenderId: "",
  appId: ""
};

// init firebase app
initializeApp(firebaseConfig)

// init services
const db = getFirestore()

// collection ref
const colRef = collection(db, 'books')

// queries
const q = query(colRef, where("author", "==", "patrick rothfuss"))

// real time collection data
onSnapshot(q, (snapshot) =&gt; {
  let books = &#91;]
  snapshot.docs.forEach((doc) =&gt; {
    books.push({ ...doc.data(), id: doc.id })
  })
  console.log(books)
})
  
// adding documents
const addBookForm = document.querySelector('.add')
addBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  addDoc(colRef, {
    title: addBookForm.title.value,
    author: addBookForm.author.value,
  })
  .then(() =&gt; {
    addBookForm.reset()
  })

})

// deleting documents
const deleteBookForm = document.querySelector('.delete')
deleteBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const docRef = doc(db, 'books', deleteBookForm.id.value)

  deleteDoc(docRef)
    .then(() =&gt; {
      deleteBookForm.reset()
    })
})</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Timestamps &amp; Ordering Data</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>在 index.js 新增 import 內容、在 queries 新增 orderBy，然後到 Google Console 查看會顯示錯誤</li><li>依 Google Console 顯示錯誤指示點擊連結、點擊建立索引(建立需要一些時間，完成後狀態會是已啟用)</li><li>在 Cloud Firestore 點擊資料、然後刪除集合</li><li>在 index.js adding documents 的 addDoc 新增 createdAt，在 import 新增 serverTimestamp，在 queries 修改 orderBy、移除 where，然後儲存</li><li>從網頁新增資料，標題 the wise man’s fear、作者 patrick rothfuss、然後新增書本，再新增標題 the name of the wind、作者 patrick rothfuss、然後新增書本，再新增標題 the way of kings、作者 brandon sanderson、然後新增書本</li><li>我們可以看到 Google Console 資料有依時間序列排列，在網頁新增資料，標題 the final empire、作者 brandon sanderson、然後新增書本</li><li>新增資料時可以看到 Google Console 顯示兩次資料</li></ul>



<pre class="wp-block-code"><code>// index.js - 1 新增 import 內容、在 queries 新增 orderBy
// API 串接資料查閱 Firebase

import { initializeApp } from 'firebase/app'
import {
  getFirestore, collection, onSnapshot,
  addDoc, deleteDoc, doc,
  query, where,
  orderBy
} from 'firebase/firestore'

const firebaseConfig = {
  apiKey: "",
  authDomain: "",
  projectId: "",
  storageBucket: "",
  messagingSenderId: "",
  appId: ""
};

// init firebase app
initializeApp(firebaseConfig)

// init services
const db = getFirestore()

// collection ref
const colRef = collection(db, 'books')

// queries
const q = query(colRef, where("author", "==", "patrick rothfuss"), orderBy('title', 'desc'))

// real time collection data
onSnapshot(q, (snapshot) =&gt; {
  let books = &#91;]
  snapshot.docs.forEach((doc) =&gt; {
    books.push({ ...doc.data(), id: doc.id })
  })
  console.log(books)
})
  
// adding documents
const addBookForm = document.querySelector('.add')
addBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  addDoc(colRef, {
    title: addBookForm.title.value,
    author: addBookForm.author.value,
  })
  .then(() =&gt; {
    addBookForm.reset()
  })

})

// deleting documents
const deleteBookForm = document.querySelector('.delete')
deleteBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const docRef = doc(db, 'books', deleteBookForm.id.value)

  deleteDoc(docRef)
    .then(() =&gt; {
      deleteBookForm.reset()
    })
})</code></pre>



<pre class="wp-block-code"><code>// Google Console - 顯示錯誤資訊
x  Uncaught Error in snapshot listener: FirebaseError: The query requires an index. You can create it here: url
x  GET url net::ERR_FAILED 200
&gt;</code></pre>



<pre class="wp-block-code"><code>// index.js - 2 新增 createdAt、serverTimestamp，修改 orderBy，移除 where
// API 串接資料查閱 Firebase

import { initializeApp } from 'firebase/app'
import {
  getFirestore, collection, onSnapshot,
  addDoc, deleteDoc, doc,
  query, where,
  orderBy, serverTimestamp
} from 'firebase/firestore'

const firebaseConfig = {
  apiKey: "",
  authDomain: "",
  projectId: "",
  storageBucket: "",
  messagingSenderId: "",
  appId: ""
};

// init firebase app
initializeApp(firebaseConfig)

// init services
const db = getFirestore()

// collection ref
const colRef = collection(db, 'books')

// queries
const q = query(colRef, orderBy('createdAt'))

// real time collection data
onSnapshot(q, (snapshot) =&gt; {
  let books = &#91;]
  snapshot.docs.forEach((doc) =&gt; {
    books.push({ ...doc.data(), id: doc.id })
  })
  console.log(books)
})
  
// adding documents
const addBookForm = document.querySelector('.add')
addBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  addDoc(colRef, {
    title: addBookForm.title.value,
    author: addBookForm.author.value,
    createdAt: serverTimestamp()
  })
  .then(() =&gt; {
    addBookForm.reset()
  })

})

// deleting documents
const deleteBookForm = document.querySelector('.delete')
deleteBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const docRef = doc(db, 'books', deleteBookForm.id.value)

  deleteDoc(docRef)
    .then(() =&gt; {
      deleteBookForm.reset()
    })
})</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Fetching Single Documents</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>在 index.js import 新增 getDoc、在下面新增 get a single document 內容，然後儲存查看 Google Console</li><li>在 index.js get a single document 新增 onSnapshot 內容，然後上面的 getDoc 刪除，然後儲存</li><li>在 Cloud Firestore 更改該 id 的值為大寫 T，值 The wise man’s fear 、然後更新，查看 Google Console 可以看到標題開頭變成大寫</li></ul>



<pre class="wp-block-code"><code>// index.js - 1 import 新增 getDoc、新增 get a single document
// API 串接資料查閱 Firebase

import { initializeApp } from 'firebase/app'
import {
  getFirestore, collection, onSnapshot,
  addDoc, deleteDoc, doc,
  query, where,
  orderBy, serverTimestamp,
  getDoc
} from 'firebase/firestore'

const firebaseConfig = {
  apiKey: "",
  authDomain: "",
  projectId: "",
  storageBucket: "",
  messagingSenderId: "",
  appId: ""
};

// init firebase app
initializeApp(firebaseConfig)

// init services
const db = getFirestore()

// collection ref
const colRef = collection(db, 'books')

// queries
const q = query(colRef, orderBy('createdAt'))

// real time collection data
onSnapshot(q, (snapshot) =&gt; {
  let books = &#91;]
  snapshot.docs.forEach((doc) =&gt; {
    books.push({ ...doc.data(), id: doc.id })
  })
  console.log(books)
})
  
// adding documents
const addBookForm = document.querySelector('.add')
addBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  addDoc(colRef, {
    title: addBookForm.title.value,
    author: addBookForm.author.value,
    createdAt: serverTimestamp()
  })
  .then(() =&gt; {
    addBookForm.reset()
  })

})

// deleting documents
const deleteBookForm = document.querySelector('.delete')
deleteBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const docRef = doc(db, 'books', deleteBookForm.id.value)

  deleteDoc(docRef)
    .then(() =&gt; {
      deleteBookForm.reset()
    })
})

// get a single document
const docRef = doc(db, 'books', 'lS9bzDHdk7rwUNknNtnz')

getDoc(docRef)
  .then((doc) =&gt; {
    console.log(doc.data(), doc.id)
  })</code></pre>



<pre class="wp-block-code"><code>// index.js - 2 在最下面新增 onSnapshot 內容、移除上面的 getDoc
// API 串接資料查閱 Firebase

import { initializeApp } from 'firebase/app'
import {
  getFirestore, collection, onSnapshot,
  addDoc, deleteDoc, doc,
  query, where,
  orderBy, serverTimestamp,
  getDoc
} from 'firebase/firestore'

const firebaseConfig = {
  apiKey: "",
  authDomain: "",
  projectId: "",
  storageBucket: "",
  messagingSenderId: "",
  appId: ""
};

// init firebase app
initializeApp(firebaseConfig)

// init services
const db = getFirestore()

// collection ref
const colRef = collection(db, 'books')

// queries
const q = query(colRef, orderBy('createdAt'))

// real time collection data
onSnapshot(q, (snapshot) =&gt; {
  let books = &#91;]
  snapshot.docs.forEach((doc) =&gt; {
    books.push({ ...doc.data(), id: doc.id })
  })
  console.log(books)
})
  
// adding documents
const addBookForm = document.querySelector('.add')
addBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  addDoc(colRef, {
    title: addBookForm.title.value,
    author: addBookForm.author.value,
    createdAt: serverTimestamp()
  })
  .then(() =&gt; {
    addBookForm.reset()
  })

})

// deleting documents
const deleteBookForm = document.querySelector('.delete')
deleteBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const docRef = doc(db, 'books', deleteBookForm.id.value)

  deleteDoc(docRef)
    .then(() =&gt; {
      deleteBookForm.reset()
    })
})

// get a single document
const docRef = doc(db, 'books', 'lS9bzDHdk7rwUNknNtnz')

onSnapshot(docRef, (doc) =&gt; {
  console.log(doc.data(), doc.id)
})</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Updating Documents</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>修改、新增 index.html 內容</li><li>在 index.js 新增 updating a document、在 import 新增 updateDoc，然後儲存</li><li>在 Google Console 複製文件的 id 到網頁上、按下更新書本</li></ul>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Firebase 9&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Getting started with firebase 9&lt;/h1&gt;
  
  &lt;h2&gt;Firebase Firestore&lt;/h2&gt;

  &lt;form class="add"&gt;
    &lt;label for="title"&gt;Title:&lt;/label&gt;
    &lt;input type="text" name="title" required&gt;
    &lt;label for="author"&gt;Author:&lt;/label&gt;
    &lt;input type="text" name="author" required&gt;

    &lt;button&gt;add a new book&lt;/button&gt;
  &lt;/form&gt;

  &lt;form class="delete"&gt;
    &lt;label for="id"&gt;Document id:&lt;/label&gt;
    &lt;input type="text" name="id" required&gt;

    &lt;button&gt;delete a book&lt;/button&gt;
  &lt;/form&gt;

  &lt;form class="update"&gt;
    &lt;label for="id"&gt;Document id:&lt;/label&gt;
    &lt;input type="text" name="id" required&gt;

    &lt;button&gt;update a book&lt;/button&gt;
  &lt;/form&gt;

  &lt;script src="bundle.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// index.js - 1 updating a document、在 import 新增 updateDoc
// API 串接資料查閱 Firebase

import { initializeApp } from 'firebase/app'
import {
  getFirestore, collection, onSnapshot,
  addDoc, deleteDoc, doc,
  query, where,
  orderBy, serverTimestamp,
  getDoc, updateDoc
} from 'firebase/firestore'

const firebaseConfig = {
  apiKey: "",
  authDomain: "",
  projectId: "",
  storageBucket: "",
  messagingSenderId: "",
  appId: ""
};

// init firebase app
initializeApp(firebaseConfig)

// init services
const db = getFirestore()

// collection ref
const colRef = collection(db, 'books')

// queries
const q = query(colRef, orderBy('createdAt'))

// real time collection data
onSnapshot(q, (snapshot) =&gt; {
  let books = &#91;]
  snapshot.docs.forEach((doc) =&gt; {
    books.push({ ...doc.data(), id: doc.id })
  })
  console.log(books)
})
  
// adding documents
const addBookForm = document.querySelector('.add')
addBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  addDoc(colRef, {
    title: addBookForm.title.value,
    author: addBookForm.author.value,
    createdAt: serverTimestamp()
  })
  .then(() =&gt; {
    addBookForm.reset()
  })

})

// deleting documents
const deleteBookForm = document.querySelector('.delete')
deleteBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const docRef = doc(db, 'books', deleteBookForm.id.value)

  deleteDoc(docRef)
    .then(() =&gt; {
      deleteBookForm.reset()
    })
})

// get a single document
const docRef = doc(db, 'books', 'lS9bzDHdk7rwUNknNtnz')

onSnapshot(docRef, (doc) =&gt; {
  console.log(doc.data(), doc.id)
})

// updating a document
const updateForm = document.querySelector('.update')
updateForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const docRef = doc(db, 'books', updateForm.id.value)

  updateDoc(docRef, {
    title: 'updated title'
  })
  .then(() =&gt; {
    updateForm.reset()
  })

})</code></pre>



<h3>Firebase Auth Setup</h3>



<h4>操作步驟</h4>



<ul><li>點擊左邊建立的 Authentication、開始使用</li><li>選擇電子郵件/密碼、然後啟用、儲存</li><li>在前端需要初始化驗證服務，在 index.js 新增 import、在 init services 新增內容</li></ul>



<pre class="wp-block-code"><code>// index.js - 新增 import、在 init services 新增內容
// API 串接資料查閱 Firebase

import { initializeApp } from 'firebase/app'
import {
  getFirestore, collection, onSnapshot,
  addDoc, deleteDoc, doc,
  query, where,
  orderBy, serverTimestamp,
  getDoc, updateDoc
} from 'firebase/firestore'
import {
  getAuth
} from 'firebase/auth'

const firebaseConfig = {
  apiKey: "",
  authDomain: "",
  projectId: "",
  storageBucket: "",
  messagingSenderId: "",
  appId: ""
};

// init firebase app
initializeApp(firebaseConfig)

// init services
const db = getFirestore()
const auth = getAuth()

// collection ref
const colRef = collection(db, 'books')

// queries
const q = query(colRef, orderBy('createdAt'))

// real time collection data
onSnapshot(q, (snapshot) =&gt; {
  let books = &#91;]
  snapshot.docs.forEach((doc) =&gt; {
    books.push({ ...doc.data(), id: doc.id })
  })
  console.log(books)
})
  
// adding documents
const addBookForm = document.querySelector('.add')
addBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  addDoc(colRef, {
    title: addBookForm.title.value,
    author: addBookForm.author.value,
    createdAt: serverTimestamp()
  })
  .then(() =&gt; {
    addBookForm.reset()
  })

})

// deleting documents
const deleteBookForm = document.querySelector('.delete')
deleteBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const docRef = doc(db, 'books', deleteBookForm.id.value)

  deleteDoc(docRef)
    .then(() =&gt; {
      deleteBookForm.reset()
    })
})

// get a single document
const docRef = doc(db, 'books', 'lS9bzDHdk7rwUNknNtnz')

onSnapshot(docRef, (doc) =&gt; {
  console.log(doc.data(), doc.id)
})

// updating a document
const updateForm = document.querySelector('.update')
updateForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const docRef = doc(db, 'books', updateForm.id.value)

  updateDoc(docRef, {
    title: 'updated title'
  })
  .then(() =&gt; {
    updateForm.reset()
  })

})</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Signing Users Up</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>在 index.html 新增 Firebase Auth 內容</li><li>在 index.js 新增 signing users up 內容，在最上面 import 新增 createUserWithEmailAndPassword，再新增 email、password 程式碼內容，然後儲存</li><li>接著到網頁輸入 email, password (隨意信箱、密碼測試)，產生錯誤，密碼需要至少6個字元 mario@netninja.dev、test12345，點擊註冊就會在 Google Console 顯示資料</li></ul>



<pre class="wp-block-code"><code>// index.html - 1 新增 Firebase Auth 內容

&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Firebase 9&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Getting started with firebase 9&lt;/h1&gt;
  
  &lt;h2&gt;Firebase Firestore&lt;/h2&gt;

  &lt;form class="add"&gt;
    &lt;label for="title"&gt;Title:&lt;/label&gt;
    &lt;input type="text" name="title" required&gt;
    &lt;label for="author"&gt;Author:&lt;/label&gt;
    &lt;input type="text" name="author" required&gt;

    &lt;button&gt;add a new book&lt;/button&gt;
  &lt;/form&gt;

  &lt;form class="delete"&gt;
    &lt;label for="id"&gt;Document id:&lt;/label&gt;
    &lt;input type="text" name="id" required&gt;

    &lt;button&gt;delete a book&lt;/button&gt;
  &lt;/form&gt;

  &lt;form class="update"&gt;
    &lt;label for="id"&gt;Document id:&lt;/label&gt;
    &lt;input type="text" name="id" required&gt;

    &lt;button&gt;update a book&lt;/button&gt;
  &lt;/form&gt;

  &lt;h2&gt;Firebase Auth&lt;/h2&gt;

  &lt;form class="signup"&gt;
    &lt;label for="email"&gt;email:&lt;/label&gt;
    &lt;input type="email" name="email"&gt;
    &lt;label for="password"&gt;password:&lt;/label&gt;
    &lt;input type="password" name="password"&gt;
    &lt;button&gt;signup&lt;/button&gt;
  &lt;/form&gt;

  &lt;script src="bundle.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// index.js - 1 新增 signing users up 內容
// API 串接資料查閱 Firebase

import { initializeApp } from 'firebase/app'
import {
  getFirestore, collection, onSnapshot,
  addDoc, deleteDoc, doc,
  query, where,
  orderBy, serverTimestamp,
  getDoc, updateDoc
} from 'firebase/firestore'
import {
  getAuth,
  createUserWithEmailAndPassword
} from 'firebase/auth'

const firebaseConfig = {
  apiKey: "",
  authDomain: "",
  projectId: "",
  storageBucket: "",
  messagingSenderId: "",
  appId: ""
};

// init firebase app
initializeApp(firebaseConfig)

// init services
const db = getFirestore()
const auth = getAuth()

// collection ref
const colRef = collection(db, 'books')

// queries
const q = query(colRef, orderBy('createdAt'))

// real time collection data
onSnapshot(q, (snapshot) =&gt; {
  let books = &#91;]
  snapshot.docs.forEach((doc) =&gt; {
    books.push({ ...doc.data(), id: doc.id })
  })
  console.log(books)
})
  
// adding documents
const addBookForm = document.querySelector('.add')
addBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  addDoc(colRef, {
    title: addBookForm.title.value,
    author: addBookForm.author.value,
    createdAt: serverTimestamp()
  })
  .then(() =&gt; {
    addBookForm.reset()
  })

})

// deleting documents
const deleteBookForm = document.querySelector('.delete')
deleteBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const docRef = doc(db, 'books', deleteBookForm.id.value)

  deleteDoc(docRef)
    .then(() =&gt; {
      deleteBookForm.reset()
    })
})

// get a single document
const docRef = doc(db, 'books', 'lS9bzDHdk7rwUNknNtnz')

onSnapshot(docRef, (doc) =&gt; {
  console.log(doc.data(), doc.id)
})

// updating a document
const updateForm = document.querySelector('.update')
updateForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const docRef = doc(db, 'books', updateForm.id.value)

  updateDoc(docRef, {
    title: 'updated title'
  })
  .then(() =&gt; {
    updateForm.reset()
  })

})

// signing users up
const signupForm = document.querySelector('.signup')
signupForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const email = signupForm.email.value
  const password = signupForm.password.value

  createUserWithEmailAndPassword(auth, email, password)
    .then((cred) =&gt; {
      console.log('user created:', cred.user)
      signupForm.reset()
    })
    .catch((err) =&gt; {
      console.log(err.message)
    })

})</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Logging in &amp; Logging Out</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>在 index.html 新增 login、logout 內容</li><li>在 index.js 新增 logging in and out 內容，在最上面新增 import signOut，接著新增 logout 內容，回到網頁測試登出是否能正確執行，在最上面新增 import signInWithEmailAndPassword，接著新增 login 內容、email、password，然後儲存</li><li>到網頁使用登入功能，先使用未註冊的 email 測試，會回傳 Error (auth/user-not-found)，接著測試有註冊的 email、錯誤的密碼，會回傳 Error (auth/wrong-password)，接著使用正確已註冊的 email、密碼登入，會成功回傳訊息</li><li>點擊登出按鈕也會回傳訊息</li></ul>



<pre class="wp-block-code"><code>// index.html - 新增 login、logout 內容

&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Firebase 9&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Getting started with firebase 9&lt;/h1&gt;
  
  &lt;h2&gt;Firebase Firestore&lt;/h2&gt;

  &lt;form class="add"&gt;
    &lt;label for="title"&gt;Title:&lt;/label&gt;
    &lt;input type="text" name="title" required&gt;
    &lt;label for="author"&gt;Author:&lt;/label&gt;
    &lt;input type="text" name="author" required&gt;

    &lt;button&gt;add a new book&lt;/button&gt;
  &lt;/form&gt;

  &lt;form class="delete"&gt;
    &lt;label for="id"&gt;Document id:&lt;/label&gt;
    &lt;input type="text" name="id" required&gt;

    &lt;button&gt;delete a book&lt;/button&gt;
  &lt;/form&gt;

  &lt;form class="update"&gt;
    &lt;label for="id"&gt;Document id:&lt;/label&gt;
    &lt;input type="text" name="id" required&gt;

    &lt;button&gt;update a book&lt;/button&gt;
  &lt;/form&gt;

  &lt;h2&gt;Firebase Auth&lt;/h2&gt;

  &lt;form class="signup"&gt;
    &lt;label for="email"&gt;email:&lt;/label&gt;
    &lt;input type="email" name="email"&gt;
    &lt;label for="password"&gt;password:&lt;/label&gt;
    &lt;input type="password" name="password"&gt;
    &lt;button&gt;signup&lt;/button&gt;
  &lt;/form&gt;

  &lt;form class="login"&gt;
    &lt;label for="email"&gt;email:&lt;/label&gt;
    &lt;input type="email" name="email"&gt;
    &lt;label for="password"&gt;password:&lt;/label&gt;
    &lt;input type="password" name="password"&gt;
    &lt;button&gt;login&lt;/button&gt;
  &lt;/form&gt;

  &lt;button class="logout"&gt;logout&lt;/button&gt;

  &lt;script src="bundle.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// index.js - 新增 logging in and out
// API 串接資料查閱 Firebase

import { initializeApp } from 'firebase/app'
import {
  getFirestore, collection, onSnapshot,
  addDoc, deleteDoc, doc,
  query, where,
  orderBy, serverTimestamp,
  getDoc, updateDoc
} from 'firebase/firestore'
import {
  getAuth,
  createUserWithEmailAndPassword,
  signOut, signInWithEmailAndPassword
} from 'firebase/auth'

const firebaseConfig = {
  apiKey: "",
  authDomain: "",
  projectId: "",
  storageBucket: "",
  messagingSenderId: "",
  appId: ""
};

// init firebase app
initializeApp(firebaseConfig)

// init services
const db = getFirestore()
const auth = getAuth()

// collection ref
const colRef = collection(db, 'books')

// queries
const q = query(colRef, orderBy('createdAt'))

// real time collection data
onSnapshot(q, (snapshot) =&gt; {
  let books = &#91;]
  snapshot.docs.forEach((doc) =&gt; {
    books.push({ ...doc.data(), id: doc.id })
  })
  console.log(books)
})
  
// adding documents
const addBookForm = document.querySelector('.add')
addBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  addDoc(colRef, {
    title: addBookForm.title.value,
    author: addBookForm.author.value,
    createdAt: serverTimestamp()
  })
  .then(() =&gt; {
    addBookForm.reset()
  })

})

// deleting documents
const deleteBookForm = document.querySelector('.delete')
deleteBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const docRef = doc(db, 'books', deleteBookForm.id.value)

  deleteDoc(docRef)
    .then(() =&gt; {
      deleteBookForm.reset()
    })
})

// get a single document
const docRef = doc(db, 'books', 'lS9bzDHdk7rwUNknNtnz')

onSnapshot(docRef, (doc) =&gt; {
  console.log(doc.data(), doc.id)
})

// updating a document
const updateForm = document.querySelector('.update')
updateForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const docRef = doc(db, 'books', updateForm.id.value)

  updateDoc(docRef, {
    title: 'updated title'
  })
  .then(() =&gt; {
    updateForm.reset()
  })

})

// signing users up
const signupForm = document.querySelector('.signup')
signupForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const email = signupForm.email.value
  const password = signupForm.password.value

  createUserWithEmailAndPassword(auth, email, password)
    .then((cred) =&gt; {
      console.log('user created:', cred.user)
      signupForm.reset()
    })
    .catch((err) =&gt; {
      console.log(err.message)
    })

})

// logging in and out
const logoutButton = document.querySelector('.logout')
logoutButton.addEventListener('click', () =&gt; {
  signOut(auth)
    .then(() =&gt; {
      console.log('the user signed out')
    })
    .catch((err) =&gt; {
      console.log(err.message)
    })
})

const loginForm = document.querySelector('.login')
loginForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const email = loginForm.email.value
  const password = loginForm.password.value

  signInWithEmailAndPassword(auth, email, password)
    .then((cred) =&gt; {
      console.log('user logged in:', cred.user)
    })
    .catch((err) =&gt; {
      console.log(err.message)
    })

})</code></pre>



<p>這個章節沒有提到關於使用 HTML 操作登入、登出。</p>



<h3 class="has-background" style="background-color:#ff6663">Listening to Auth Changes</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>在 index.js import 新增 onAuthStateChanged，在最下面新增 subscribing to auth changes 內容，把 signing users up、logging in and out 的 console 註解，然後儲存</li><li>接著到網頁重新整理，可以在 Google Console 看到 user status changed: null 的顯示</li><li>在 email 輸入 mario@netninja.dev、password 輸入 test12345，然後按下登入會回傳 user status changed: 資料內容</li><li>接著按下登出就會回傳 user status changed: null</li><li>在註冊欄位 email 輸入 luigi@netninja.dev、password 輸入 test12345，然後按下註冊，就會回傳 user status changed: 資料內容</li><li>在點擊登出，在 Google Console 會回傳訊息 user status changed: null</li></ul>



<pre class="wp-block-code"><code>// index.js - import 新增 onAuthStateChanged，新增 subscribing to auth changes 內容
// API 串接資料查閱 Firebase

import { initializeApp } from 'firebase/app'
import {
  getFirestore, collection, onSnapshot,
  addDoc, deleteDoc, doc,
  query, where,
  orderBy, serverTimestamp,
  getDoc, updateDoc
} from 'firebase/firestore'
import {
  getAuth,
  createUserWithEmailAndPassword,
  signOut, signInWithEmailAndPassword,
  onAuthStateChanged
} from 'firebase/auth'

const firebaseConfig = {
  apiKey: "",
  authDomain: "",
  projectId: "",
  storageBucket: "",
  messagingSenderId: "",
  appId: ""
};

// init firebase app
initializeApp(firebaseConfig)

// init services
const db = getFirestore()
const auth = getAuth()

// collection ref
const colRef = collection(db, 'books')

// queries
const q = query(colRef, orderBy('createdAt'))

// real time collection data
onSnapshot(q, (snapshot) =&gt; {
  let books = &#91;]
  snapshot.docs.forEach((doc) =&gt; {
    books.push({ ...doc.data(), id: doc.id })
  })
  console.log(books)
})
  
// adding documents
const addBookForm = document.querySelector('.add')
addBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  addDoc(colRef, {
    title: addBookForm.title.value,
    author: addBookForm.author.value,
    createdAt: serverTimestamp()
  })
  .then(() =&gt; {
    addBookForm.reset()
  })

})

// deleting documents
const deleteBookForm = document.querySelector('.delete')
deleteBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const docRef = doc(db, 'books', deleteBookForm.id.value)

  deleteDoc(docRef)
    .then(() =&gt; {
      deleteBookForm.reset()
    })
})

// get a single document
const docRef = doc(db, 'books', 'lS9bzDHdk7rwUNknNtnz')

onSnapshot(docRef, (doc) =&gt; {
  console.log(doc.data(), doc.id)
})

// updating a document
const updateForm = document.querySelector('.update')
updateForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const docRef = doc(db, 'books', updateForm.id.value)

  updateDoc(docRef, {
    title: 'updated title'
  })
  .then(() =&gt; {
    updateForm.reset()
  })

})

// signing users up
const signupForm = document.querySelector('.signup')
signupForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const email = signupForm.email.value
  const password = signupForm.password.value

  createUserWithEmailAndPassword(auth, email, password)
    .then((cred) =&gt; {
      // console.log('user created:', cred.user)
      signupForm.reset()
    })
    .catch((err) =&gt; {
      console.log(err.message)
    })

})

// logging in and out
const logoutButton = document.querySelector('.logout')
logoutButton.addEventListener('click', () =&gt; {
  signOut(auth)
    .then(() =&gt; {
      // console.log('the user signed out')
    })
    .catch((err) =&gt; {
      console.log(err.message)
    })
})

const loginForm = document.querySelector('.login')
loginForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const email = loginForm.email.value
  const password = loginForm.password.value

  signInWithEmailAndPassword(auth, email, password)
    .then((cred) =&gt; {
      // console.log('user logged in:', cred.user)
    })
    .catch((err) =&gt; {
      console.log(err.message)
    })

})

// subscribing to auth changes
onAuthStateChanged(auth, (user) =&gt; {
  console.log('user status changed:', user)
})</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Unsubscribing from Changes</h3>



<p>可重複觀看、練習。</p>



<h4>操作步驟</h4>



<ul><li>在 index.html 新增 unsubscribing</li><li>在 index.js 新增 unsubscribing from changes (auth &amp; db) 內容，在 real time collection data 的 onSnapshot 的地方修改新增 unsubCol 變數，在 get a single document 的 onSnapshot 的地方修改新增 unsubDoc 變數，在 subscribing to auth changes 的 onAuthStateChanged 的地方修改新增 unsubAuth 變數，接著回到 unsubscribing from changes (auth &amp; db) 繼續新增內容，然後儲存</li><li>到網頁介面，先展示上面的功能還是能使用，Firebase Firestore 的 Title abc、Author def，Firebase Auth 的 email mario@netninja.dev、password test12345、然後登入，一樣有回傳訊息</li><li>接著在Google Console按下清楚 console 內容，然後按下 unsubscribing 的按鈕，會回傳 unsubscribing 訊息，再次使用 Firebase Firestore、Firebase Auth 功能</li></ul>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;title&gt;Firebase 9&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Getting started with firebase 9&lt;/h1&gt;
  
  &lt;h2&gt;Firebase Firestore&lt;/h2&gt;

  &lt;form class="add"&gt;
    &lt;label for="title"&gt;Title:&lt;/label&gt;
    &lt;input type="text" name="title" required&gt;
    &lt;label for="author"&gt;Author:&lt;/label&gt;
    &lt;input type="text" name="author" required&gt;

    &lt;button&gt;add a new book&lt;/button&gt;
  &lt;/form&gt;

  &lt;form class="delete"&gt;
    &lt;label for="id"&gt;Document id:&lt;/label&gt;
    &lt;input type="text" name="id" required&gt;

    &lt;button&gt;delete a book&lt;/button&gt;
  &lt;/form&gt;

  &lt;form class="update"&gt;
    &lt;label for="id"&gt;Document id:&lt;/label&gt;
    &lt;input type="text" name="id" required&gt;

    &lt;button&gt;update a book&lt;/button&gt;
  &lt;/form&gt;

  &lt;h2&gt;Firebase Auth&lt;/h2&gt;

  &lt;form class="signup"&gt;
    &lt;label for="email"&gt;email:&lt;/label&gt;
    &lt;input type="email" name="email"&gt;
    &lt;label for="password"&gt;password:&lt;/label&gt;
    &lt;input type="password" name="password"&gt;
    &lt;button&gt;signup&lt;/button&gt;
  &lt;/form&gt;

  &lt;form class="login"&gt;
    &lt;label for="email"&gt;email:&lt;/label&gt;
    &lt;input type="email" name="email"&gt;
    &lt;label for="password"&gt;password:&lt;/label&gt;
    &lt;input type="password" name="password"&gt;
    &lt;button&gt;login&lt;/button&gt;
  &lt;/form&gt;

  &lt;button class="logout"&gt;logout&lt;/button&gt;

  &lt;h2&gt;Unsubscribing&lt;/h2&gt;
  &lt;button class="unsub"&gt;unsubscribe from db/auth changes&lt;/button&gt;

  &lt;script src="bundle.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// index.js
// API串接資料查閱 Firebase

import { initializeApp } from 'firebase/app'
import {
  getFirestore, collection, onSnapshot,
  addDoc, deleteDoc, doc,
  query, where,
  orderBy, serverTimestamp,
  getDoc, updateDoc
} from 'firebase/firestore'
import {
  getAuth,
  createUserWithEmailAndPassword,
  signOut, signInWithEmailAndPassword,
  onAuthStateChanged
} from 'firebase/auth'

const firebaseConfig = {
  apiKey: "",
  authDomain: "",
  projectId: "",
  storageBucket: "",
  messagingSenderId: "",
  appId: ""
};

// init firebase app
initializeApp(firebaseConfig)

// init services
const db = getFirestore()
const auth = getAuth()

// collection ref
const colRef = collection(db, 'books')

// queries
const q = query(colRef, orderBy('createdAt'))

// real time collection data
const unsubCol = onSnapshot(q, (snapshot) =&gt; {
  let books = &#91;]
  snapshot.docs.forEach((doc) =&gt; {
    books.push({ ...doc.data(), id: doc.id })
  })
  console.log(books)
})
  
// adding documents
const addBookForm = document.querySelector('.add')
addBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  addDoc(colRef, {
    title: addBookForm.title.value,
    author: addBookForm.author.value,
    createdAt: serverTimestamp()
  })
  .then(() =&gt; {
    addBookForm.reset()
  })

})

// deleting documents
const deleteBookForm = document.querySelector('.delete')
deleteBookForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const docRef = doc(db, 'books', deleteBookForm.id.value)

  deleteDoc(docRef)
    .then(() =&gt; {
      deleteBookForm.reset()
    })
})

// get a single document
const docRef = doc(db, 'books', 'lS9bzDHdk7rwUNknNtnz')

const unsubDoc = onSnapshot(docRef, (doc) =&gt; {
  console.log(doc.data(), doc.id)
})

// updating a document
const updateForm = document.querySelector('.update')
updateForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const docRef = doc(db, 'books', updateForm.id.value)

  updateDoc(docRef, {
    title: 'updated title'
  })
  .then(() =&gt; {
    updateForm.reset()
  })

})

// signing users up
const signupForm = document.querySelector('.signup')
signupForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const email = signupForm.email.value
  const password = signupForm.password.value

  createUserWithEmailAndPassword(auth, email, password)
    .then((cred) =&gt; {
      // console.log('user created:', cred.user)
      signupForm.reset()
    })
    .catch((err) =&gt; {
      console.log(err.message)
    })

})

// logging in and out
const logoutButton = document.querySelector('.logout')
logoutButton.addEventListener('click', () =&gt; {
  signOut(auth)
    .then(() =&gt; {
      // console.log('the user signed out')
    })
    .catch((err) =&gt; {
      console.log(err.message)
    })
})

const loginForm = document.querySelector('.login')
loginForm.addEventListener('submit', (e) =&gt; {
  e.preventDefault()

  const email = loginForm.email.value
  const password = loginForm.password.value

  signInWithEmailAndPassword(auth, email, password)
    .then((cred) =&gt; {
      // console.log('user logged in:', cred.user)
    })
    .catch((err) =&gt; {
      console.log(err.message)
    })

})

// subscribing to auth changes
const unsubAuth = onAuthStateChanged(auth, (user) =&gt; {
  console.log('user status changed:', user)
})

// unsubscribing from changes (auth &amp; db)
const unsubButton = document.querySelector('.unsub')
unsubButton.addEventListener('click', () =&gt; {
  console.log('unsubscribing')
  unsubCol()
  unsubDoc()
  unsubAuth()
})</code></pre>



<p>最後，關於 Firebase 更多學習應用，可以參考瀏覽說明文件 Firebase Documentation 來使用。</p>



<h2>Next Steps</h2>



<h3>Bonus Lecture: Next Steps</h3>



<h4>資源</h4>



<ul><li><a rel="noreferrer noopener" href="https://www.youtube.com/c/TheNetNinja/playlists" target="_blank">The Net Ninja Youtube Playlists 連結</a></li><li><a rel="noreferrer noopener" href="https://www.youtube.com/watch?v=aN1LnNq4z54&amp;list=PL4cUxeGkcC9jUPIes_B8vRjn1_GaplOPQ" target="_blank">Firebase Auth Tutorial</a></li><li><a rel="noreferrer noopener" href="https://www.youtube.com/watch?v=r6I-Ahc0HB4&amp;list=PL4cUxeGkcC9g6m_6Sld9Q4jzqdqHd2HiD" target="_blank">Regular Expressions (RegEx) Tutorial</a></li><li><a rel="noreferrer noopener" href="https://www.youtube.com/watch?v=w-7RQ46RgxU&amp;list=PL4cUxeGkcC9gcy9lrvMJ75z9maRw4byYp" target="_blank">Node JS Tutorial for Beginners</a>&nbsp;(舊版)</li><li><a rel="noreferrer noopener" href="https://www.youtube.com/watch?v=OxIDLw0M-m0&amp;list=PL4cUxeGkcC9ij8CfkAY2RAGb-tmkNwQHG" target="_blank">Complete React Tutorial (with Redux)</a></li><li><a href="https://www.udemy.com/user/47fd83f6-5e4a-4e87-a0f0-519ac51f91b6/" target="_blank" rel="noreferrer noopener">Udemy Course – The Net Ninja(Shaun Pelling)</a></li><li><a rel="noreferrer noopener" href="https://www.youtube.com/watch?v=zb3Qk8SG5Ms&amp;list=PL4cUxeGkcC9jsz4LDYc6kv3ymONOKxwBU" target="_blank">Node.js Crash Course Tutorial</a>&nbsp;(新版)</li></ul>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Modern JavaScript (3)</title>
		<link>/wordpress_blog/modern-javascript-3/</link>
		
		<dc:creator><![CDATA[gee.hsu]]></dc:creator>
		<pubDate>Fri, 11 Feb 2022 04:18:00 +0000</pubDate>
				<category><![CDATA[The Net Ninja]]></category>
		<guid isPermaLink="false">/wordpress_blog/?p=508</guid>

					<description><![CDATA[(Complete guide, from Novice to  [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p>(Complete guide, from Novice to Ninja)</p>



<blockquote class="wp-block-quote"><p>Learning Udemy Course：<a href="https://www.udemy.com/course/modern-javascript-from-novice-to-ninja/" target="_blank" rel="noreferrer noopener">Modern JavaScript</a></p><cite>建立者：The Net Ninja (Shaun Pelling)</cite></blockquote>



<p>Learn Modern JavaScript from the very start to ninja-level &amp; build awesome JavaScript applications.</p>



<h4>您會學到</h4>



<ul><li>Learn how to program with modern JavaScript, from the very beginning to more advanced topics</li><li>Learn all about OOP (object-oriented programming) with JavaScript, working with prototypes &amp; classes</li><li>Learn how to create real-world front-end applications with JavaScript (quizes, weather apps, chat rooms etc)</li><li>Learn how to make useful JavaScript driven UI components like popups, drop-downs, tabs, tool-tips &amp; more.</li><li>Learn how to use modern, cutting-edge JavaScript features today by using a modern workflow (Babel &amp; Webpack)</li><li>Learn how to use real-time databases to store, retrieve and update application data</li><li>Explore API’s to make the most of third-party data (such as weather information)</li></ul>



<h2 class="has-background" style="background-color:#ff6663">Project – Weather App</h2>



<h3>Project Preview &amp; Setup</h3>



<h4>操作步驟</h4>



<ul><li>創建一個專案資料夾 weather_app</li><li>新增一個 index.html 檔案</li><li>index.html 使用 doc + tab 建立環境、載入 CSS、Bootstrap CDN</li><li>新增一個 scripts 資料夾、並建立 app.js、forecast.js 檔案</li><li>在 index.html 載入 JS</li></ul>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css" integrity="sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn" crossorigin="anonymous"&gt;
  &lt;link rel="stylesheet" href="style.css"&gt;
  &lt;title&gt;Ninja Weather&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  

  &lt;script src="scripts/forecast.js"&gt;&lt;/script&gt;
  &lt;script src="scripts/app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<h3>HTML &amp; CSS Template</h3>



<h4>資源</h4>



<ul><li><a href="https://github.com/iamshaunjp/modern-javascript/tree/lesson-100" target="_blank" rel="noreferrer noopener">GitHub files for this lesson (HTML template)</a></li></ul>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css" integrity="sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn" crossorigin="anonymous"&gt;
  &lt;link rel="stylesheet" href="style.css"&gt;
  &lt;title&gt;Ninja Weather&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;div class="container my-5 mx-auto"&gt;

    &lt;h1 class="text-muted text-center my-4"&gt;Ninja Weather&lt;/h1&gt;

    &lt;form class="change-location my-4 text-center text-muted"&gt;
      &lt;label for="city"&gt;Enter a location for weather information&lt;/label&gt;
      &lt;input type="text" name="city" class="form-control p-4"&gt;
    &lt;/form&gt;

    &lt;div class="card shadow-lg rounded"&gt;
      &lt;img src="https://via.placeholder.com/400x300" class="time card-img-top" alt=""&gt;
      &lt;div class="icon bg-light mx-auto text-center"&gt;
        &lt;!-- icon --&gt;
      &lt;/div&gt;
      &lt;div class="text-muted text-uppercase text-center details"&gt;
        &lt;h5 class="my-3"&gt;City name&lt;/h5&gt;
        &lt;div class="my-3"&gt;Weather condition&lt;/div&gt;
        &lt;div class="display-4 my-4"&gt;
          &lt;span&gt;temp&lt;/span&gt;
          &lt;span&gt;&amp;deg;C&lt;/span&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;

  &lt;/div&gt;
  

  &lt;script src="scripts/forecast.js"&gt;&lt;/script&gt;
  &lt;script src="scripts/app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// style.css

body{
  background: #eeedec;
  letter-spacing: 0.2em;
  font-size: 0.8em;
}
.container{
  max-width: 400px;
}</code></pre>



<h4>Placeholder Image</h4>



<ul><li><a href="https://placeholder.com/" target="_blank" rel="noreferrer noopener">網站連結</a></li></ul>



<h3>AccuWeather API</h3>



<h4>資源</h4>



<ul><li><a href="https://developer.accuweather.com/" target="_blank" rel="noreferrer noopener">AccuWeather API Website</a></li></ul>



<h4>API Reference</h4>



<ul><li>Locations API<ul><li>Text Search – City Search</li></ul></li><li>Current Conditions API<ul><li>Current Conditions – Current Conditions</li></ul></li></ul>



<h4>個人練習</h4>



<ul><li>政府資料凱放平臺</li><li>中央氣象局開放資料平臺之資料擷取 API</li></ul>



<h3 class="has-background" style="background-color:#ff6663">Get City API Call</h3>



<pre class="wp-block-code"><code>// forecast.js

const key = 'rdec-key-123-45678-011121314';

const getCity = async (city) =&gt; {

  const base = 'https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-C0032-001';
  const query = `?Authorization=${key}&amp;locationName=${city}`;

  const response = await fetch(base + query);
  const data = await response.json();

  // console.log(data);
  // console.log(data.records.location&#91;0]);
  
return data.records.location&#91;0];

};

getCity('臺南市')
  .then(data =&gt; console.log(data))
  .catch(err =&gt; console.log(err));</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Get Weather API Call</h3>



<pre class="wp-block-code"><code>// forecast.js - 1

const key = 'rdec-key-123-45678-011121314';

// get weather information
const getWeather = async (id = 'F-C0032-001') =&gt; {

  const base = 'https://opendata.cwb.gov.tw/api/v1/rest/datastore/';
  const query = `${id}?Authorization=${key}`;

  const response = await fetch(base + query);
  const data = await response.json();

  // console.log(data.records.location);
  return data.records.location;

};

// get city information
const getCity = async (city) =&gt; {

  const base = 'https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-C0032-001';
  const query = `?Authorization=${key}&amp;locationName=${city}`;

  const response = await fetch(base + query);
  const data = await response.json();

  // console.log(data);
  // console.log(data.records.location&#91;0]);
  
return data.records.location;

};

getCity('臺南市').then(data =&gt; {
    return getWeather(data.key);
  }).then(data =&gt; {
    console.log(data);
  }).catch(err =&gt; console.log(err));
</code></pre>



<pre class="wp-block-code"><code>// forecast.js - 2

const key = 'rdec-key-123-45678-011121314';

// get weather information
const getWeather = async (id) =&gt; {

  const base = 'https://opendata.cwb.gov.tw/api/v1/rest/datastore/';
  const query = `${id}?Authorization=${key}`;

  const response = await fetch(base + query);
  const data = await response.json();

  // console.log(data.records.location);
  return data;

};

// get city information
const getCity = async (city) =&gt; {

  const base = 'https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-C0032-001';
  const query = `?Authorization=${key}&amp;locationName=${city}`;

  const response = await fetch(base + query);
  const data = await response.json();

  // console.log(data);
  // console.log(data.records.location&#91;0]);
  
return data;

};

getCity('臺南市').then(data =&gt; {
    return getWeather(data.result.resource_id);
  }).then(data =&gt; {
    console.log(data);
  }).catch(err =&gt; console.log(err));
</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Updating the Location</h3>



<pre class="wp-block-code"><code>// app.js

const cityForm = document.querySelector('form');

const updateCity = async (city) =&gt; {

  // console.log(city);
  const cityDets = await getCity(city);
  const weather = await getWeather(cityDets.result.resource_id);

  return {
    cityDets: cityDets,
    weather: weather
  };

};

cityForm.addEventListener('submit', e =&gt; {
  // prevent default action
  e.preventDefault();

  // get city value
  const city = cityForm.city.value.trim();
  cityForm.reset();

  // update the ui with new city
  updateCity(city)
  .then(data =&gt; console.log(data))
  .catch(err =&gt; console.log(err));

});</code></pre>



<h3>Object Shorthand Notation</h3>



<pre class="wp-block-code"><code>// app.js

const cityForm = document.querySelector('form');

const updateCity = async (city) =&gt; {

  // console.log(city);
  const cityDets = await getCity(city);
  const weather = await getWeather(cityDets.result.resource_id);

  return { cityDets, weather };

};

cityForm.addEventListener('submit', e =&gt; {
  // prevent default action
  e.preventDefault();

  // get city value
  const city = cityForm.city.value.trim();
  cityForm.reset();

  // update the ui with new city
  updateCity(city)
  .then(data =&gt; console.log(data))
  .catch(err =&gt; console.log(err));

});</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Updating the UI</h3>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css" integrity="sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn" crossorigin="anonymous"&gt;
  &lt;link rel="stylesheet" href="style.css"&gt;
  &lt;title&gt;Ninja Weather&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;div class="container my-5 mx-auto"&gt;

    &lt;h1 class="text-muted text-center my-4"&gt;Ninja Weather&lt;/h1&gt;

    &lt;form class="change-location my-4 text-center text-muted"&gt;
      &lt;label for="city"&gt;Enter a location for weather information&lt;/label&gt;
      &lt;input type="text" name="city" class="form-control p-4"&gt;
    &lt;/form&gt;

    &lt;div class="card shadow-lg rounded d-none"&gt;
      &lt;img src="https://via.placeholder.com/400x300" class="time card-img-top" alt=""&gt;
      &lt;div class="icon bg-light mx-auto text-center"&gt;
        &lt;!-- icon --&gt;
      &lt;/div&gt;
      &lt;div class="text-muted text-uppercase text-center details"&gt;
        &lt;h5 class="my-3"&gt;City name&lt;/h5&gt;
        &lt;div class="my-3"&gt;Weather condition&lt;/div&gt;
        &lt;div class="display-4 my-4"&gt;
          &lt;span&gt;temp&lt;/span&gt;
          &lt;span&gt;&amp;deg;C&lt;/span&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;

  &lt;/div&gt;
  

  &lt;script src="scripts/forecast.js"&gt;&lt;/script&gt;
  &lt;script src="scripts/app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// app.js

const cityForm = document.querySelector('form');
const card = document.querySelector('.card');
const details = document.querySelector('.details');

const updateUI = (data) =&gt; {
  
  const cityDets = data.cityDets;
  const weather = data.weather;

  // update details template
  details.innerHTML = `
    &lt;h4 class="my-3"&gt;今明36小時天氣預報&lt;/h4&gt;
    &lt;h5 class="my-3"&gt;${cityDets.records.location&#91;0].locationName}&lt;/h5&gt;
    &lt;div class="my-3"&gt;${cityDets.records.location&#91;0].weatherElement&#91;0].time&#91;0].parameter.parameterName}&lt;/div&gt;
    &lt;div&gt;↓&lt;/div&gt;
    &lt;div class="my-3"&gt;&lt;br&gt;${cityDets.records.location&#91;0].weatherElement&#91;0].time&#91;1].parameter.parameterName}&lt;/div&gt;
    &lt;div&gt;↓&lt;/div&gt;
    &lt;div class="my-3"&gt;&lt;br&gt;${cityDets.records.location&#91;0].weatherElement&#91;0].time&#91;2].parameter.parameterName}&lt;/div&gt;
    &lt;div class="display-4 my-4"&gt;
      &lt;span&gt;temp&lt;/span&gt;&lt;br&gt;
      &lt;span&gt;${cityDets.records.location&#91;0].weatherElement&#91;2].time&#91;0].parameter.parameterName} - ${cityDets.records.location&#91;0].weatherElement&#91;4].time&#91;0].parameter.parameterName}  &amp;deg;C&lt;/span&gt;
      &lt;div&gt;↓&lt;/div&gt;
      &lt;span&gt;${cityDets.records.location&#91;0].weatherElement&#91;2].time&#91;1].parameter.parameterName} - ${cityDets.records.location&#91;0].weatherElement&#91;4].time&#91;1].parameter.parameterName}  &amp;deg;C&lt;/span&gt;
      &lt;div&gt;↓&lt;/div&gt;
      &lt;span&gt;${cityDets.records.location&#91;0].weatherElement&#91;2].time&#91;2].parameter.parameterName} - ${cityDets.records.location&#91;0].weatherElement&#91;4].time&#91;2].parameter.parameterName}  &amp;deg;C&lt;/span&gt;
    &lt;/div&gt;
  `;

  // remove the d-none class if present
  if(card.classList.contains('d-none')){
    card.classList.remove('d-none');
  }

};

const updateCity = async (city) =&gt; {

  // console.log(city);
  const cityDets = await getCity(city);
  const weather = await getWeather(cityDets.result.resource_id);

  console.log(cityDets);
  return { cityDets, weather };

};

cityForm.addEventListener('submit', e =&gt; {
  // prevent default action
  e.preventDefault();

  // get city value
  const city = cityForm.city.value.trim();
  cityForm.reset();

  // update the ui with new city
  updateCity(city)
  .then(data =&gt; updateUI(data))
  .catch(err =&gt; console.log(err));

});</code></pre>



<pre class="wp-block-code"><code>// forecast.js

const key = 'rdec-key-123-45678-011121314';

// get weather information
const getWeather = async (id) =&gt; {

  const base = 'https://opendata.cwb.gov.tw/api/v1/rest/datastore/';
  const query = `${id}?Authorization=${key}`;

  const response = await fetch(base + query);
  const data = await response.json();

  // console.log(data.records.location);
  
  return data;

};

// get city information
const getCity = async (city) =&gt; {

  const base = 'https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-C0032-001';
  const query = `?Authorization=${key}&amp;locationName=${city}`;

  const response = await fetch(base + query);
  const data = await response.json();

  // console.log(data);
  // console.log(data.records.location&#91;0]);
  
  return data;

};
</code></pre>



<h3>Destructuring (解構賦值)</h3>



<pre class="wp-block-code"><code>// app.js

const cityForm = document.querySelector('form');
const card = document.querySelector('.card');
const details = document.querySelector('.details');

const updateUI = (data) =&gt; {
  
  // console.log(data);
  // const cityDets = data.cityDets;
  // const weather = data.weather;

  // destructure properties
  const { cityDets, weather } = data;

  // update details template
  details.innerHTML = `
    &lt;h4 class="my-3"&gt;今明36小時天氣預報&lt;/h4&gt;
    &lt;h5 class="my-3"&gt;${cityDets.records.location&#91;0].locationName}&lt;/h5&gt;
    &lt;div class="my-3"&gt;${weather.records.location&#91;0].weatherElement&#91;0].time&#91;0].parameter.parameterName}&lt;/div&gt;
    &lt;div&gt;↓&lt;/div&gt;
    &lt;div class="my-3"&gt;&lt;br&gt;${weather.records.location&#91;0].weatherElement&#91;0].time&#91;1].parameter.parameterName}&lt;/div&gt;
    &lt;div&gt;↓&lt;/div&gt;
    &lt;div class="my-3"&gt;&lt;br&gt;${weather.records.location&#91;0].weatherElement&#91;0].time&#91;2].parameter.parameterName}&lt;/div&gt;
    &lt;div class="display-4 my-4"&gt;
      &lt;span&gt;temp&lt;/span&gt;&lt;br&gt;
      &lt;span&gt;${weather.records.location&#91;0].weatherElement&#91;2].time&#91;0].parameter.parameterName} - ${weather.records.location&#91;0].weatherElement&#91;4].time&#91;0].parameter.parameterName}  &amp;deg;C&lt;/span&gt;
      &lt;div&gt;↓&lt;/div&gt;
      &lt;span&gt;${weather.records.location&#91;0].weatherElement&#91;2].time&#91;1].parameter.parameterName} - ${weather.records.location&#91;0].weatherElement&#91;4].time&#91;1].parameter.parameterName}  &amp;deg;C&lt;/span&gt;
      &lt;div&gt;↓&lt;/div&gt;
      &lt;span&gt;${weather.records.location&#91;0].weatherElement&#91;2].time&#91;2].parameter.parameterName} - ${weather.records.location&#91;0].weatherElement&#91;4].time&#91;2].parameter.parameterName}  &amp;deg;C&lt;/span&gt;
    &lt;/div&gt;
  `;

  // remove the d-none class if present
  if(card.classList.contains('d-none')){
    card.classList.remove('d-none');
  }

};

const updateCity = async (city) =&gt; {

  // console.log(city);
  const cityDets = await getCity(city);
  const weather = await getWeather(city);

  console.log(cityDets);
  console.log(weather);
  return { cityDets, weather };

};

cityForm.addEventListener('submit', e =&gt; {
  // prevent default action
  e.preventDefault();

  // get city value
  const city = cityForm.city.value.trim();
  cityForm.reset();

  // update the ui with new city
  updateCity(city)
  .then(data =&gt; updateUI(data))
  .catch(err =&gt; console.log(err));

});</code></pre>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css" integrity="sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn" crossorigin="anonymous"&gt;
  &lt;link rel="stylesheet" href="style.css"&gt;
  &lt;title&gt;Ninja Weather&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;div class="container my-5 mx-auto"&gt;

    &lt;h1 class="text-muted text-center my-4"&gt;Ninja Weather&lt;/h1&gt;

    &lt;form class="change-location my-4 text-center text-muted"&gt;
      &lt;label for="city"&gt;Enter a location for weather information&lt;/label&gt;
      &lt;input type="text" name="city" class="form-control p-4"&gt;
    &lt;/form&gt;

    &lt;div class="card shadow-lg rounded d-none"&gt;
      &lt;img src="https://via.placeholder.com/400x300" class="time card-img-top" alt=""&gt;
      &lt;div class="icon bg-light mx-auto text-center"&gt;
        &lt;!-- icon --&gt;
      &lt;/div&gt;
      &lt;div class="text-muted text-uppercase text-center details"&gt;
        &lt;h5 class="my-3"&gt;City name&lt;/h5&gt;
        &lt;div class="my-3"&gt;Weather condition&lt;/div&gt;
        &lt;div class="display-4 my-4"&gt;
          &lt;span&gt;temp&lt;/span&gt;
          &lt;span&gt;&amp;deg;C&lt;/span&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;

  &lt;/div&gt;
  

  &lt;script src="scripts/forecast.js"&gt;&lt;/script&gt;
  &lt;script src="scripts/app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// forecast.js

const key = 'rdec-key-123-45678-011121314';
const id = 'F-C0032-001';

// get weather information
const getWeather = async (city) =&gt; {

  const base = 'https://opendata.cwb.gov.tw/api/v1/rest/datastore/';
  const query = `${id}?Authorization=${key}&amp;locationName=${city}`;

  const response = await fetch(base + query);
  const data = await response.json();

  // console.log(data.records.location);
  
  return data;

};

// get city information
const getCity = async (city) =&gt; {

  const base = 'https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-C0032-001';
  const query = `?Authorization=${key}&amp;locationName=${city}`;

  const response = await fetch(base + query);
  const data = await response.json();

  // console.log(data);
  // console.log(data.records.location&#91;0]);
  
  return data;

};
</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Weather Icons &amp; images</h3>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css" integrity="sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn" crossorigin="anonymous"&gt;
  &lt;link rel="stylesheet" href="style.css"&gt;
  &lt;title&gt;Ninja Weather&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;div class="container my-5 mx-auto"&gt;

    &lt;h1 class="text-muted text-center my-4"&gt;臺灣天氣&lt;/h1&gt;

    &lt;form class="change-location my-4 text-center text-muted"&gt;
      &lt;label for="city"&gt;輸入地點取得天氣資訊&lt;/label&gt;&lt;br&gt;
      &lt;span class="text-muted"&gt;需輸入完整縣市名稱(例如:臺北市)&lt;/span&gt;&lt;br&gt;&lt;br&gt;
      &lt;input type="text" name="city" class="form-control p-4"&gt;
    &lt;/form&gt;

    &lt;div class="card shadow-lg rounded d-none"&gt;
      &lt;img src="https://via.placeholder.com/400x300" class="time card-img-top" alt=""&gt;
      &lt;div class="icon bg-light mx-auto text-center"&gt;
        &lt;!-- icon --&gt;
        &lt;img src="" alt=""&gt;
      &lt;/div&gt;
      &lt;div class="text-muted text-uppercase text-center details"&gt;
        &lt;h5 class="my-3"&gt;City name&lt;/h5&gt;
        &lt;div class="my-3"&gt;Weather condition&lt;/div&gt;
        &lt;div class="display-4 my-4"&gt;
          &lt;span&gt;temp&lt;/span&gt;
          &lt;span&gt;&amp;deg;C&lt;/span&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;

  &lt;/div&gt;
  

  &lt;script src="scripts/forecast.js"&gt;&lt;/script&gt;
  &lt;script src="scripts/app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// app.js

const cityForm = document.querySelector('form');
const card = document.querySelector('.card');
const details = document.querySelector('.details');
const time = document.querySelector('img.time');
const icon = document.querySelector('.icon img');

const updateUI = (data) =&gt; {
  
  // console.log(data);
  // const cityDets = data.cityDets;
  // const weather = data.weather;

  // destructure properties
  const { cityDets, weather } = data;

  // update details template
  details.innerHTML = `
    &lt;h4 class="my-3"&gt;12小時內天氣預報&lt;/h4&gt;
    &lt;h5 class="my-3"&gt;${cityDets.records.location&#91;0].locationName}&lt;/h5&gt;
    &lt;div class="my-3"&gt;${weather.records.location&#91;0].weatherElement&#91;0].time&#91;0].parameter.parameterName}&lt;/div&gt;
    &lt;div class="display-4 my-4"&gt;
      &lt;span&gt;氣溫&lt;/span&gt;&lt;br&gt;
      &lt;span&gt;${weather.records.location&#91;0].weatherElement&#91;2].time&#91;0].parameter.parameterName} - ${weather.records.location&#91;0].weatherElement&#91;4].time&#91;0].parameter.parameterName}  &amp;deg;C&lt;/span&gt;
    &lt;/div&gt;
  `;

  // update the night/day &amp; icon images
  const iconSrc = `img/icons/${weather.records.location&#91;0].weatherElement&#91;0].time&#91;0].parameter.parameterValue}.svg`;
  icon.setAttribute('src', iconSrc);

  let timeSrc = null;
  if(weather.records.location&#91;0].weatherElement&#91;0].time&#91;0].startTime.indexOf("06:00:00") &gt;= 0){
    timeSrc = 'img/day.svg';
  } else {
    timeSrc = 'img/night.svg';
  }
  time.setAttribute('src', timeSrc);

  // remove the d-none class if present
  if(card.classList.contains('d-none')){
    card.classList.remove('d-none');
  }

};

const updateCity = async (city) =&gt; {

  // console.log(city);
  const cityDets = await getCity(city);
  const weather = await getWeather(city);

  console.log(cityDets);
  console.log(weather);
  // console.log(weather.records.location&#91;0].weatherElement&#91;0].time&#91;0].startTime);
  return { cityDets, weather };

};

cityForm.addEventListener('submit', e =&gt; {
  // prevent default action
  e.preventDefault();

  // get city value
  const city = cityForm.city.value.trim();
  cityForm.reset();

  // update the ui with new city
  updateCity(city)
  .then(data =&gt; updateUI(data))
  .catch(err =&gt; console.log(err));

});</code></pre>



<pre class="wp-block-code"><code>// style.css

body{
  background: #eeedec;
  letter-spacing: 0.2em;
  font-size: 0.8em;
}
.container{
  max-width: 400px;
}
.icon{
  position: relative;
  top: -50px;
  border-radius: 50%;
  width: 100px;
  margin-bottom: -50px;
}</code></pre>



<h3>Ternary Operator (三元運算子)</h3>



<pre class="wp-block-code"><code>// app.js

const cityForm = document.querySelector('form');
const card = document.querySelector('.card');
const details = document.querySelector('.details');
const time = document.querySelector('img.time');
const icon = document.querySelector('.icon img');

const updateUI = (data) =&gt; {
  
  // console.log(data);
  // const cityDets = data.cityDets;
  // const weather = data.weather;

  // destructure properties
  const { cityDets, weather } = data;

  // update details template
  details.innerHTML = `
    &lt;h4 class="my-3"&gt;12小時內天氣預報&lt;/h4&gt;
    &lt;h5 class="my-3"&gt;${cityDets.records.location&#91;0].locationName}&lt;/h5&gt;
    &lt;div class="my-3"&gt;${weather.records.location&#91;0].weatherElement&#91;0].time&#91;0].parameter.parameterName}&lt;/div&gt;
    &lt;div class="display-4 my-4"&gt;
      &lt;span&gt;氣溫&lt;/span&gt;&lt;br&gt;
      &lt;span&gt;${weather.records.location&#91;0].weatherElement&#91;2].time&#91;0].parameter.parameterName} - ${weather.records.location&#91;0].weatherElement&#91;4].time&#91;0].parameter.parameterName}  &amp;deg;C&lt;/span&gt;
    &lt;/div&gt;
  `;

  // update the night/day &amp; icon images
  const iconSrc = `img/icons/${weather.records.location&#91;0].weatherElement&#91;0].time&#91;0].parameter.parameterValue}.svg`;
  icon.setAttribute('src', iconSrc);


  let timeSrc = weather.records.location&#91;0].weatherElement&#91;0].time&#91;0].startTime.indexOf("06:00:00") &gt;= 0 ? 'img/day.svg' : 'img/night.svg';

  // let timeSrc = null;
  // if(weather.records.location&#91;0].weatherElement&#91;0].time&#91;0].startTime.indexOf("06:00:00") &gt;= 0){
  //   timeSrc = 'img/day.svg';
  // } else {
  //   timeSrc = 'img/night.svg';
  // }
  time.setAttribute('src', timeSrc);

  // remove the d-none class if present
  if(card.classList.contains('d-none')){
    card.classList.remove('d-none');
  }

};

const updateCity = async (city) =&gt; {

  // console.log(city);
  const cityDets = await getCity(city);
  const weather = await getWeather(city);

  console.log(cityDets);
  console.log(weather);
  // console.log(weather.records.location&#91;0].weatherElement&#91;0].time&#91;0].startTime);
  return { cityDets, weather };

};

cityForm.addEventListener('submit', e =&gt; {
  // prevent default action
  e.preventDefault();

  // get city value
  const city = cityForm.city.value.trim();
  cityForm.reset();

  // update the ui with new city
  updateCity(city)
  .then(data =&gt; updateUI(data))
  .catch(err =&gt; console.log(err));

});

// ternary operator
// const result = true ? 'value 1' : 'value 2';
// console.log(result);</code></pre>



<h2>Local Storage</h2>



<h3>What is Local Storage?</h3>



<h4>Application Data</h4>



<ul><li>Set up a database to store &amp; retrieve data</li><li>Use local storage to store and retrieve data</li></ul>



<h4>Local Storage</h4>



<figure class="wp-block-gallery has-nested-images columns-1 is-cropped">
<figure class="wp-block-image size-large"><img loading="lazy" width="1435" height="705" data-id="510"  src="/wordpress_blog/wp-content/uploads/2022/04/localstorage-1.png" alt="" class="wp-image-510"/><figcaption>Local Storage &#8211; 1</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1461" height="613" data-id="511"  src="/wordpress_blog/wp-content/uploads/2022/04/localstorage-2.png" alt="" class="wp-image-511"/><figcaption>Local Storage &#8211; 2</figcaption></figure>
</figure>



<pre class="wp-block-code"><code>// Google Console
&gt;  window
&lt;  Window&nbsp;{window: Window, self: Window, document: document, name: '', location: Location,&nbsp;…}
&gt;</code></pre>



<h3>Storing &amp; Getting Data</h3>



<ul><li>Google Console</li><li>sandbox.js</li><li>Google Application → Storage → Local Storage</li></ul>



<pre class="wp-block-code"><code>// Google Console - 1
&gt;  window.localStorage
&lt;  Storage {length: 0}
&gt;  localStorage
&lt;  Storage {length: 0}
&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 2

// store data in local storage
localStorage.setItem('name', 'mario');
localStorage.setItem('age', 50);


// get data from local storage
let name = localStorage.getItem('name');
let age = localStorage.getItem('age');

console.log(name, age);

// updating data
localStorage.setItem('name', 'luigi');
localStorage.age = '40';

name = localStorage.getItem('name');
age = localStorage.getItem('age');
console.log(name, age);</code></pre>



<pre class="wp-block-code"><code>// Google Console - 2</code></pre>



<h3>Deleting Storage Data</h3>



<ul><li>sandbox.js</li><li>Google Console</li><li>Google Application</li></ul>



<pre class="wp-block-code"><code>// sandbox.js - 1

// store data in local storage
localStorage.setItem('name', 'mario');
localStorage.setItem('age', 50);

// get data from local storage
let name = localStorage.getItem('name');
let age = localStorage.getItem('age');

console.log(name, age);

// deleting data from local storage

</code></pre>



<pre class="wp-block-code"><code>// Google Console - 1
   mario 50
&gt;  localStorage
&lt;  Storage {name: 'mario', age: '50', length: 2}
&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 2

// store data in local storage
localStorage.setItem('name', 'mario');
localStorage.setItem('age', 50);

// get data from local storage
let name = localStorage.getItem('name');
let age = localStorage.getItem('age');

console.log(name, age);

// deleting data from local storage
// localStorage.removeItem('name');
localStorage.clear();

name = localStorage.getItem('name');
age = localStorage.getItem('age');

console.log(name, age);
</code></pre>



<pre class="wp-block-code"><code>// Google Console - 2
   mario 50
   null null
&gt;</code></pre>



<h3>Stringifying &amp; Parsing Data</h3>



<ul><li>sandbox.js</li><li>Google Console</li><li>Google Application</li></ul>



<pre class="wp-block-code"><code>// sandbox.js

const todos = &#91;
  {text: 'play mariokart', author: 'shaun'},
  {text: 'buy some milk', author: 'mario'},
  {text: 'buy some bread', author: 'luigi'}
];

// console.log(JSON.stringify(todos));
localStorage.setItem('todos', JSON.stringify(todos));

const stored = localStorage.getItem('todos');

console.log(JSON.parse(stored));</code></pre>



<pre class="wp-block-code"><code>// Google Console
   (3) &#91;{...}, {...}, {...}]
&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Updating the Weather App</h3>



<ul><li>app.js</li><li>Google Application</li></ul>



<pre class="wp-block-code"><code>// app.js

const cityForm = document.querySelector('form');
const card = document.querySelector('.card');
const details = document.querySelector('.details');
const time = document.querySelector('img.time');
const icon = document.querySelector('.icon img');

const updateUI = (data) =&gt; {
  
  // console.log(data);
  // const cityDets = data.cityDets;
  // const weather = data.weather;

  // destructure properties
  const { cityDets, weather } = data;

  // update details template
  details.innerHTML = `
    &lt;h4 class="my-3"&gt;12小時內天氣預報&lt;/h4&gt;
    &lt;h5 class="my-3"&gt;${cityDets.records.location&#91;0].locationName}&lt;/h5&gt;
    &lt;div class="my-3"&gt;${weather.records.location&#91;0].weatherElement&#91;0].time&#91;0].parameter.parameterName}&lt;/div&gt;
    &lt;div class="display-4 my-4"&gt;
      &lt;span&gt;氣溫&lt;/span&gt;&lt;br&gt;
      &lt;span&gt;${weather.records.location&#91;0].weatherElement&#91;2].time&#91;0].parameter.parameterName} - ${weather.records.location&#91;0].weatherElement&#91;4].time&#91;0].parameter.parameterName}  &amp;deg;C&lt;/span&gt;
    &lt;/div&gt;
  `;

  // update the night/day &amp; icon images
  const iconSrc = `img/icons/${weather.records.location&#91;0].weatherElement&#91;0].time&#91;0].parameter.parameterValue}.svg`;
  icon.setAttribute('src', iconSrc);


  let timeSrc = weather.records.location&#91;0].weatherElement&#91;0].time&#91;0].startTime.indexOf("06:00:00") || weather.records.location&#91;0].weatherElement&#91;0].time&#91;0].startTime.indexOf("12:00:00") &gt;= 0 ? 'img/day.svg' : 'img/night.svg';

  // let timeSrc = null;
  // if(weather.records.location&#91;0].weatherElement&#91;0].time&#91;0].startTime.indexOf("06:00:00") &gt;= 0){
  //   timeSrc = 'img/day.svg';
  // } else {
  //   timeSrc = 'img/night.svg';
  // }
  time.setAttribute('src', timeSrc);

  // remove the d-none class if present
  if(card.classList.contains('d-none')){
    card.classList.remove('d-none');
  }

};

const updateCity = async (city) =&gt; {

  // console.log(city);
  const cityDets = await getCity(city);
  const weather = await getWeather(city);

  console.log(cityDets);
  console.log(weather);
  // console.log(weather.records.location&#91;0].weatherElement&#91;0].time&#91;0].startTime);
  return { cityDets, weather };

};

cityForm.addEventListener('submit', e =&gt; {
  // prevent default action
  e.preventDefault();

  // get city value
  const city = cityForm.city.value.trim();
  cityForm.reset();

  // update the ui with new city
  updateCity(city)
  .then(data =&gt; updateUI(data))
  .catch(err =&gt; console.log(err));

  // set local storage
  localStorage.setItem('city', city);

});

// ternary operator
// const result = true ? 'value 1' : 'value 2';
// console.log(result);

if(localStorage.getItem('city')){
  updateCity(localStorage.getItem('city'))
    .then(data =&gt; updateUI(data))
    .catch(err =&gt; console.log(err));
};</code></pre>



<h2 class="has-background" style="background-color:#ff6663">Object Oriented JavaScript (物件導向)</h2>



<h3>What is OOP? (物件導向程式設計)</h3>



<pre class="wp-block-code"><code>// Google Console
&gt;  const names = &#91;'shaun', 'crystal']
&lt;  undefined
&gt;  names
&lt;  (2) &#91;"shaun", "crystal"]
&gt;  const ages = new Array(20,25,30)
&lt;  undefined
&gt;  ages
&lt;  (3) &#91;20, 25, 30]
&gt;  const userOne = {}
&lt;  undefined
&gt;  userOne
&lt;  {}
&gt;  const userTwo = new Object();
&lt;  undefined
&gt;  userTwo
&lt;  {}
&gt;  const name = 'mario'
&lt;  undefined
&gt;  name
&lt;  "mario"
&gt;  name.length
&lt;  5
&gt;  name.toUpperCase()
&lt;  "MARIO"
&gt;  const nameTwo = new String('ryu');
&lt;  undefined
&gt;  nameTwo
&lt;  String {"ryu"}
&gt;  new Number(5)
&lt;  Number {5}
&gt;  new Boolean(true)
&lt;  Boolean {true}
&gt;</code></pre>



<h3>Object Literal Recap (物件實字回顧)</h3>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;title&gt;Modern JavaScript&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Object Oriented JavaScript&lt;/h1&gt;
    
    
    &lt;script src="sandbox.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 1

const userOne = {
  username: 'ryu',
  email: 'ryu@thenetninja.co.uk',
  login(){
    console.log('the user logged in');
  },
  logout(){
    console.log('the user logged out');
  }
};

console.log(userOne.email, userOne.username);
userOne.login();

const userTwo = {
  username: 'chun li',
  email: 'chun.li@thenetninja.co.uk',
  login(){
    console.log('the user logged in');
  },
  logout(){
    console.log('the user logged out');
  }
};

console.log(userTwo.email, userTwo.username);
userTwo.login();

</code></pre>



<pre class="wp-block-code"><code>// Google Console - 1
   ryu@thenetninja.co.uk ryu
   the user logged in
   chun.li@thenetninja.co.uk chun li
   the user logged in
&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 2

const userOne = {
  username: 'ryu',
  email: 'ryu@thenetninja.co.uk',
  login(){
    console.log('the user logged in');
  },
  logout(){
    console.log('the user logged out');
  }
};

console.log(userOne.email, userOne.username);
userOne.login();

const userTwo = {
  username: 'chun li',
  email: 'chun.li@thenetninja.co.uk',
  login(){
    console.log('the user logged in');
  },
  logout(){
    console.log('the user logged out');
  }
};

console.log(userTwo.email, userTwo.username);
userTwo.login();

const userThree = new User('shaun@thenetninja.co.uk', 'shaun');</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Classes (類別)</h3>



<pre class="wp-block-code"><code>// sandbox.js

const userOne = {
  username: 'ryu',
  email: 'ryu@thenetninja.co.uk',
  login(){
    console.log('the user logged in');
  },
  logout(){
    console.log('the user logged out');
  }
};

console.log(userOne.email, userOne.username);
userOne.login();

const userTwo = {
  username: 'chun li',
  email: 'chun.li@thenetninja.co.uk',
  login(){
    console.log('the user logged in');
  },
  logout(){
    console.log('the user logged out');
  }
};

console.log(userTwo.email, userTwo.username);
userTwo.login();

const userThree = new User('shaun@thenetninja.co.uk', 'shaun');</code></pre>



<h4>Classes</h4>



<ul><li>A Class is like a blueprint(藍圖) for an object (it describes how one should be made)</li></ul>



<figure class="wp-block-gallery has-nested-images columns-1 is-cropped">
<figure class="wp-block-image size-large"><img loading="lazy" width="1536" height="553" data-id="513"  src="/wordpress_blog/wp-content/uploads/2022/04/Classes-1.png" alt="" class="wp-image-513"/><figcaption>Classes &#8211; 1</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1211" height="599" data-id="514"  src="/wordpress_blog/wp-content/uploads/2022/04/Classes-2.png" alt="" class="wp-image-514"/><figcaption>Classes &#8211; 2</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1536" height="603" data-id="515"  src="/wordpress_blog/wp-content/uploads/2022/04/Classes-3.png" alt="" class="wp-image-515"/><figcaption>Classes &#8211; 3</figcaption></figure>
</figure>



<h3 class="has-background" style="background-color:#ff6663">Class Constructors (類別建構子)</h3>



<pre class="wp-block-code"><code>// sandbox.js - 1

class User {
  constructor(){
    // set up properties
    this.username = 'mario';
  }
}

const userOne = new User();
const userTwo = new User();

console.log(userOne, userTwo);

// the 'new' keyword
// 1 - it creates a new empty object {}
// 2 - it binds the value of 'this' to the new empty object
// 3 - it calls the constructor function to 'build' the object</code></pre>



<pre class="wp-block-code"><code>// Google Console - 1
   User {username: 'mario'} User {username: 'mario'}
&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 2

class User {
  constructor(username){
    // set up properties
    this.username = username;
  }
}

const userOne = new User('mario');
const userTwo = new User('luigi');

console.log(userOne, userTwo);

// the 'new' keyword
// 1 - it creates a new empty object {}
// 2 - it binds the value of 'this' to the new empty object
// 3 - it calls the constructor function to 'build' the object</code></pre>



<pre class="wp-block-code"><code>// Google Console - 2
   User {username: 'mario'} User {username: 'luigi'}
&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 3

class User {
  constructor(username, email){
    // set up properties
    this.username = username;
    this.email = email;
  }
}

const userOne = new User('mario', 'mario@thenetninja.co.uk');
const userTwo = new User('luigi', 'luigi@thenetninja.co.uk');

console.log(userOne, userTwo);

// the 'new' keyword
// 1 - it creates a new empty object {}
// 2 - it binds the value of 'this' to the new empty object
// 3 - it calls the constructor function to 'build' the object</code></pre>



<pre class="wp-block-code"><code>// Google Console - 3
   User&nbsp;{username: 'mario', email: 'mario@thenetninja.co.uk'}
   User&nbsp;{username: 'luigi', email: 'luigi@thenetninja.co.uk'}
&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Class Methods &amp; Method Chaining</h3>



<pre class="wp-block-code"><code>// sandbox.js - 1

class User {
  constructor(username, email){
    // set up properties
    this.username = username;
    this.email = email;
  }
  login(){
    console.log(`${this.username} just logged in`);
  }
  logout(){
    console.log(`${this.username} just logged out`);
  }
}

const userOne = new User('mario', 'mario@thenetninja.co.uk');
const userTwo = new User('luigi', 'luigi@thenetninja.co.uk');

console.log(userOne, userTwo);
userOne.login();
userTwo.login();</code></pre>



<pre class="wp-block-code"><code>// Google Console - 1
   User&nbsp;{username: 'mario', email: 'mario@thenetninja.co.uk'}
   User&nbsp;{username: 'luigi', email: 'luigi@thenetninja.co.uk'}
   mario just logged in
   luigi just logged in
&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox - 2

class User {
  constructor(username, email){
    // set up properties
    this.username = username;
    this.email = email;
  }
  login(){
    console.log(`${this.username} just logged in`);
  }
  logout(){
    console.log(`${this.username} just logged out`);
  }
}

const userOne = new User('mario', 'mario@thenetninja.co.uk');
const userTwo = new User('luigi', 'luigi@thenetninja.co.uk');

console.log(userOne, userTwo);
userOne.logout();
userTwo.logout();</code></pre>



<pre class="wp-block-code"><code>// Google Console - 2
   User&nbsp;{username: 'mario', email: 'mario@thenetninja.co.uk'}
   User&nbsp;{username: 'luigi', email: 'luigi@thenetninja.co.uk'}
   mario just logged out
   luigi just logged out
&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 3

class User {
  constructor(username, email){
    // set up properties
    this.username = username;
    this.email = email;
    this.score = 0;
  }
  login(){
    console.log(`${this.username} just logged in`);
    return this;
  }
  logout(){
    console.log(`${this.username} just logged out`);
    return this;
  }
  incScore(){
    this.score += 1;
    console.log(`${this.username} has a score of ${this.score}`);
    return this;
  }
}

const userOne = new User('mario', 'mario@thenetninja.co.uk');
const userTwo = new User('luigi', 'luigi@thenetninja.co.uk');

console.log(userOne, userTwo);

userOne.login().incScore().incScore().logout();</code></pre>



<pre class="wp-block-code"><code>// Google Console - 3
   User {username: 'mario', email: 'mario@thenetninja.co.uk', score: 0}
   User {username: 'luigi', email: 'luigi@thenetninja.co.uk', score: 0}
   mario just logged in
   mario has a score of 1
   mario has a score of 2
   mario just logged out
&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Class Inheritance (類別繼承) (subclasses) (子類別)</h3>



<pre class="wp-block-code"><code>// sandbox.js - 1

class User {
  constructor(username, email){
    // set up properties
    this.username = username;
    this.email = email;
    this.score = 0;
  }
  login(){
    console.log(`${this.username} just logged in`);
    return this;
  }
  logout(){
    console.log(`${this.username} just logged out`);
    return this;
  }
  incScore(){
    this.score += 1;
    console.log(`${this.username} has a score of ${this.score}`);
    return this;
  }
}

class Admin extends User{

}

const userOne = new User('mario', 'mario@thenetninja.co.uk');
const userTwo = new User('luigi', 'luigi@thenetninja.co.uk');
const userThree = new Admin('shaun', 'shaun@thenetninja.co.uk');

console.log(userOne, userTwo, userThree);

</code></pre>



<pre class="wp-block-code"><code>// Google Console - 1
   User {username: 'mario', email: 'mario@thenetninja.co.uk', score: 0}
   User {username: 'luigi', email: 'luigi@thenetninja.co.uk', score: 0}
   Admin {username: 'shaun', email: 'shaun@thenetninja.co.uk', score: 0}
&gt;</code></pre>



<pre class="wp-block-code"><code>// Google Console - 2
   User {username: 'mario', email: 'mario@thenetninja.co.uk', score: 0}
   User {username: 'luigi', email: 'luigi@thenetninja.co.uk', score: 0}
   Admin {username: 'shaun', email: 'shaun@thenetninja.co.uk', score: 0}
&gt;  userThree.login();
   shaun just logged in
&lt;  Admin {username: 'shaun', email: 'shaun@thenetninja.co.uk', score: 0}
&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox - 3

class User {
  constructor(username, email){
    // set up properties
    this.username = username;
    this.email = email;
    this.score = 0;
  }
  login(){
    console.log(`${this.username} just logged in`);
    return this;
  }
  logout(){
    console.log(`${this.username} just logged out`);
    return this;
  }
  incScore(){
    this.score += 1;
    console.log(`${this.username} has a score of ${this.score}`);
    return this;
  }
}

class Admin extends User{
  deleteUser(user){
    users = users.filter((u) =&gt; {
      return u.username !== user.username;
    });
  }
}

const userOne = new User('mario', 'mario@thenetninja.co.uk');
const userTwo = new User('luigi', 'luigi@thenetninja.co.uk');
const userThree = new Admin('shaun', 'shaun@thenetninja.co.uk');

console.log(userOne, userTwo, userThree);

let users = &#91;userOne, userTwo, userThree];
console.log(users);

userThree.deleteUser(userTwo);
console.log(users);
</code></pre>



<pre class="wp-block-code"><code>// Google Console - 3
   User {username: 'mario', email: 'mario@thenetninja.co.uk', score: 0}
   User {username: 'luigi', email: 'luigi@thenetninja.co.uk', score: 0}
   Admin {username: 'shaun', email: 'shaun@thenetninja.co.uk', score: 0}
   (3) &#91;User, User, Admin]
   (2) &#91;User, Admin]
&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 3 縮寫

class User {
  constructor(username, email){
    // set up properties
    this.username = username;
    this.email = email;
    this.score = 0;
  }
  login(){
    console.log(`${this.username} just logged in`);
    return this;
  }
  logout(){
    console.log(`${this.username} just logged out`);
    return this;
  }
  incScore(){
    this.score += 1;
    console.log(`${this.username} has a score of ${this.score}`);
    return this;
  }
}

class Admin extends User{
  deleteUser(user){
    users = users.filter(u =&gt; u.username !== user.username);
  }
}

const userOne = new User('mario', 'mario@thenetninja.co.uk');
const userTwo = new User('luigi', 'luigi@thenetninja.co.uk');
const userThree = new Admin('shaun', 'shaun@thenetninja.co.uk');

console.log(userOne, userTwo, userThree);

let users = &#91;userOne, userTwo, userThree];
console.log(users);

userThree.deleteUser(userTwo);
console.log(users);
</code></pre>



<pre class="wp-block-code"><code>// Google Console - 3 縮寫
   User {username: 'mario', email: 'mario@thenetninja.co.uk', score: 0}
   User {username: 'luigi', email: 'luigi@thenetninja.co.uk', score: 0}
   Admin {username: 'shaun', email: 'shaun@thenetninja.co.uk', score: 0}
   (3) &#91;User, User, Admin]
   (2) &#91;User, Admin]
&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Super()</h3>



<pre class="wp-block-code"><code>// sandbox.js

class User {
  constructor(username, email){
    // set up properties
    this.username = username;
    this.email = email;
    this.score = 0;
  }
  login(){
    console.log(`${this.username} just logged in`);
    return this;
  }
  logout(){
    console.log(`${this.username} just logged out`);
    return this;
  }
  incScore(){
    this.score += 1;
    console.log(`${this.username} has a score of ${this.score}`);
    return this;
  }
}

class Admin extends User{
  constructor(username, email, title){
    super(username, email);
    this.title = title;
  }
  deleteUser(user){
    users = users.filter(u =&gt; u.username !== user.username);
  }
}

const userOne = new User('mario', 'mario@thenetninja.co.uk');
const userTwo = new User('luigi', 'luigi@thenetninja.co.uk');
const userThree = new Admin('shaun', 'shaun@thenetninja.co.uk', 'black-belt-ninja');

console.log(userThree);
</code></pre>



<pre class="wp-block-code"><code>// Google Console
   Admin&nbsp;{username: 'shaun', email: 'shaun@thenetninja.co.uk', score: 0, title: 'black-belt-ninja'}
&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Constructors (under the hood)</h3>



<pre class="wp-block-code"><code>// sandbox.js

// constructor functions

function User(username, email){
  this.username = username;
  this.email = email;
  this.login = function(){
    console.log(`${this.username} has logged in`);
  };
}

// class User {
//   constructor(username, email){
//     // set up properties
//     this.username = username;
//     this.email = email;
//   }
// }

const userOne = new User('mario', 'mario@thenetninja.co.uk');
const userTwo = new User('luigi', 'luigi@thenetninja.co.uk');

console.log(userOne, userTwo);
userOne.login();

// the 'new' keyword
// 1 - it creates a new empty object {}
// 2 - it binds the value of 'this' to the new empty object
// 3 - it calls the constructor function to 'build' the object</code></pre>



<pre class="wp-block-code"><code>// Google Console
   User&nbsp;{username: 'mario', email: 'mario@thenetninja.co.uk', login: ƒ}
   User&nbsp;{username: 'luigi', email: 'luigi@thenetninja.co.uk', login: ƒ}
   mario has logged in
&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Prototype Model (原型模型)</h3>



<p>不懂可以重複觀看、練習。</p>



<pre class="wp-block-code"><code>// sandbox.js - 1

// constructor functions

function User(username, email){
  this.username = username;
  this.email = email;
  this.login = function(){
    console.log(`${this.username} has logged in`);
  };
}

const userOne = new User('mario', 'mario@thenetninja.co.uk');
const userTwo = new User('luigi', 'luigi@thenetninja.co.uk');

console.log(userOne, userTwo);
userOne.login();
</code></pre>



<pre class="wp-block-code"><code>// Google Console - 1
   User User
   mario has logged in
&gt;  const nums = &#91;1,2,3,4,5]
&lt;  undefined
&gt;  nums
&lt;  (5) &#91;1,2,3,4,5]
&gt;</code></pre>



<h4>Prototypes (原型)</h4>



<ul><li>Every object in JavaScript has a prototype</li><li>Prototypes contain all the methods for that object type</li></ul>



<figure class="wp-block-gallery has-nested-images columns-1 is-cropped">
<figure class="wp-block-image size-large"><img loading="lazy" width="1476" height="516" data-id="518"  src="/wordpress_blog/wp-content/uploads/2022/04/prototype-1.png" alt="" class="wp-image-518"/><figcaption>Prototype &#8211; 1</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1536" height="674" data-id="517"  src="/wordpress_blog/wp-content/uploads/2022/04/prototype-2.png" alt="" class="wp-image-517"/><figcaption>Prototype &#8211; 2</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1536" height="681" data-id="519"  src="/wordpress_blog/wp-content/uploads/2022/04/prototype-3.png" alt="" class="wp-image-519"/><figcaption>Prototype &#8211; 3</figcaption></figure>
</figure>



<pre class="wp-block-code"><code>// Google Console - 2
   User User
   mario has logged in
&gt;  const nums = &#91;1,2,3,4,5]
&lt;  undefined
&gt;  nums
&lt;  (5) &#91;1,2,3,4,5]
&gt;  Array.prototype
&lt;  &#91;constructor: ƒ, concat: ƒ, copyWithin: ƒ, fill: ƒ, find: ƒ,&nbsp;…]
&gt;  Date.prototype
&lt;  {constructor: ƒ, toString: ƒ, toDateString: ƒ, toTimeString: ƒ, toISOString: ƒ,&nbsp;…}
&gt;  User.prototype
&lt;  {constructor: ƒ}
&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 3

// constructor functions

function User(username, email){
  this.username = username;
  this.email = email;
}

User.prototype.login = function(){
  console.log(`${this.username} has logged in`);
};

const userOne = new User('mario', 'mario@thenetninja.co.uk');
const userTwo = new User('luigi', 'luigi@thenetninja.co.uk');

console.log(userOne, userTwo);
userOne.login();
</code></pre>



<pre class="wp-block-code"><code>// Google Console - 3
   User {username: 'mario', email: 'mario@thenetninja.co.uk'}
   User {username: 'luigi', email: 'luigi@thenetninja.co.uk'}
   mario has logged in
&gt;  User.prototype
&lt;  {login: f, constructor: f}
&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 4

// constructor functions

function User(username, email){
  this.username = username;
  this.email = email;
}

User.prototype.login = function(){
  console.log(`${this.username} has logged in`);
};

User.prototype.logout = function(){
  console.log(`${this.username} has logged out`);
};

const userOne = new User('mario', 'mario@thenetninja.co.uk');
const userTwo = new User('luigi', 'luigi@thenetninja.co.uk');

console.log(userOne, userTwo);
userOne.login();
userOne.logout();
</code></pre>



<pre class="wp-block-code"><code>// Google Console - 4
   User {username: 'mario', email: 'mario@thenetninja.co.uk'}
   User {username: 'luigi', email: 'luigi@thenetninja.co.uk'}
   mario has logged in
   mario has logged out
&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 5
// constructor functions

function User(username, email){
  this.username = username;
  this.email = email;
}

User.prototype.login = function(){
  console.log(`${this.username} has logged in`);
  return this;
};

User.prototype.logout = function(){
  console.log(`${this.username} has logged out`);
  return this;
};

const userOne = new User('mario', 'mario@thenetninja.co.uk');
const userTwo = new User('luigi', 'luigi@thenetninja.co.uk');

console.log(userOne, userTwo);
userOne.login().logout();
</code></pre>



<pre class="wp-block-code"><code>// Google Console - 5
   User {username: 'mario', email: 'mario@thenetninja.co.uk'}
   User {username: 'luigi', email: 'luigi@thenetninja.co.uk'}
   mario has logged in
   mario has logged out
&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Prototypal Inheritance</h3>



<p>不懂可以重複觀看、練習。</p>



<pre class="wp-block-code"><code>// sandbox.js - 1

// constructor functions

function User(username, email){
  this.username = username;
  this.email = email;
}

User.prototype.login = function(){
  console.log(`${this.username} has logged in`);
  return this;
};

User.prototype.logout = function(){
  console.log(`${this.username} has logged out`);
  return this;
};

function Admin(username, email){
  User.call(this, username, email);
}

const userOne = new User('mario', 'mario@thenetninja.co.uk');
const userTwo = new User('luigi', 'luigi@thenetninja.co.uk');
const userThree =  new Admin('shaun', 'shaun@thenetninja.co.uk');

console.log(userOne, userTwo, userThree);
userOne.login().logout();</code></pre>



<pre class="wp-block-code"><code>// Google Console - 1
   User&nbsp;{username: 'mario', email: 'mario@thenetninja.co.uk'}
   User&nbsp;{username: 'luigi', email: 'luigi@thenetninja.co.uk'}
   Admin&nbsp;{username: 'shaun', email: 'shaun@thenetninja.co.uk'}
   mario has logged in
   mario has logged out
&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 2

// constructor functions

function User(username, email){
  this.username = username;
  this.email = email;
}

User.prototype.login = function(){
  console.log(`${this.username} has logged in`);
  return this;
};

User.prototype.logout = function(){
  console.log(`${this.username} has logged out`);
  return this;
};

function Admin(username, email, title){
  User.call(this, username, email);
  this.title = title;
}

const userOne = new User('mario', 'mario@thenetninja.co.uk');
const userTwo = new User('luigi', 'luigi@thenetninja.co.uk');
const userThree =  new Admin('shaun', 'shaun@thenetninja.co.uk', 'black-belt-ninja');

console.log(userOne, userTwo, userThree);
userOne.login().logout();</code></pre>



<pre class="wp-block-code"><code>// Google Console - 2
   User&nbsp;{username: 'mario', email: 'mario@thenetninja.co.uk'}
   User&nbsp;{username: 'luigi', email: 'luigi@thenetninja.co.uk'}
   Admin&nbsp;{username: 'shaun', email: 'shaun@thenetninja.co.uk', title: 'black-belt-ninja'}
   mario has logged in
   mario has logged out
&gt;</code></pre>



<pre class="wp-block-code"><code>// Google Console - 3
   User&nbsp;{username: 'mario', email: 'mario@thenetninja.co.uk'}
   User&nbsp;{username: 'luigi', email: 'luigi@thenetninja.co.uk'}
   Admin&nbsp;{username: 'shaun', email: 'shaun@thenetninja.co.uk', title: 'black-belt-ninja'}
   mario has logged in
   mario has logged out
&gt;  Admin.prototype
&lt;  {constructor: f}
&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 4

// constructor functions

function User(username, email){
  this.username = username;
  this.email = email;
}

User.prototype.login = function(){
  console.log(`${this.username} has logged in`);
  return this;
};

User.prototype.logout = function(){
  console.log(`${this.username} has logged out`);
  return this;
};

function Admin(username, email, title){
  User.call(this, username, email);
  this.title = title;
}

Admin.prototype = Object.create(User.prototype);

const userOne = new User('mario', 'mario@thenetninja.co.uk');
const userTwo = new User('luigi', 'luigi@thenetninja.co.uk');
const userThree =  new Admin('shaun', 'shaun@thenetninja.co.uk', 'black-belt-ninja');

console.log(userOne, userTwo, userThree);
userOne.login().logout();</code></pre>



<pre class="wp-block-code"><code>// Google Console - 4
   User&nbsp;{username: 'mario', email: 'mario@thenetninja.co.uk'}
   User&nbsp;{username: 'luigi', email: 'luigi@thenetninja.co.uk'}
   Admin&nbsp;{username: 'shaun', email: 'shaun@thenetninja.co.uk', title: 'black-belt-ninja'}
   mario has logged in
   mario has logged out
&gt;  Admin.prototype
&lt;  User {}
&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 5

// constructor functions

function User(username, email){
  this.username = username;
  this.email = email;
}

User.prototype.login = function(){
  console.log(`${this.username} has logged in`);
  return this;
};

User.prototype.logout = function(){
  console.log(`${this.username} has logged out`);
  return this;
};

function Admin(username, email, title){
  User.call(this, username, email);
  this.title = title;
}

Admin.prototype = Object.create(User.prototype);

Admin.prototype.deleteUser = function(){
  // delete a user
};

const userOne = new User('mario', 'mario@thenetninja.co.uk');
const userTwo = new User('luigi', 'luigi@thenetninja.co.uk');
const userThree =  new Admin('shaun', 'shaun@thenetninja.co.uk', 'black-belt-ninja');

console.log(userOne, userTwo, userThree);
userOne.login().logout();</code></pre>



<pre class="wp-block-code"><code>// Google Console - 5
   User&nbsp;{username: 'mario', email: 'mario@thenetninja.co.uk'}
   User&nbsp;{username: 'luigi', email: 'luigi@thenetninja.co.uk'}
   Admin&nbsp;{username: 'shaun', email: 'shaun@thenetninja.co.uk', title: 'black-belt-ninja'}
   mario has logged in
   mario has logged out
&gt;</code></pre>



<h3>Built-in Objects</h3>



<pre class="wp-block-code"><code>// Google Console
&gt;  new Array(1,2,3,4,5)
&lt;  (5) &#91;1,2,3,4,5]
&gt;  new Object
&lt;  {}
&gt;  new XMLHttpRequest
&lt;  XMLHttpRequest&nbsp;{onreadystatechange: null, readyState: 0, timeout: 0, withCredentials: false, upload: XMLHttpRequestUpload,&nbsp;…}
&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Making a Forecast Class (weather app)</h3>



<pre class="wp-block-code"><code>// scripts/forecast.js

class Forecast{
  constructor(){
    this.key = 'rdec-key-123-45678-011121314';
    this.weatherURI = 'https://opendata.cwb.gov.tw/api/v1/rest/datastore/';
    this.cityURI = 'https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-C0032-001';
    this.id = 'F-C0032-001';
  }
  async updateCity(city){
    const cityDets = await this.getCity(city);
    const weather = await this.getWeather(city);
    return { cityDets, weather };
  }
  async getCity(city){
    const query = `?Authorization=${this.key}&amp;locationName=${city}`;
    const response = await fetch(this.cityURI + query);
    const data = await response.json();
    return data;
  }
  async getWeather(city){
    const query = `${this.id}?Authorization=${this.key}&amp;locationName=${city}`;
    const response = await fetch(this.weatherURI + query);
    const data = await response.json();
    return data;
  }
}
</code></pre>



<pre class="wp-block-code"><code>// scripts/app.js

const cityForm = document.querySelector('form');
const card = document.querySelector('.card');
const details = document.querySelector('.details');
const time = document.querySelector('img.time');
const icon = document.querySelector('.icon img');
const forecast = new Forecast();

// console.log(forecast);

const updateUI = (data) =&gt; {
  // destructure properties
  const { cityDets, weather } = data;

  // update details template
  details.innerHTML = `
    &lt;h4 class="my-3"&gt;12小時內天氣預報&lt;/h4&gt;
    &lt;h5 class="my-3"&gt;${cityDets.records.location&#91;0].locationName}&lt;/h5&gt;
    &lt;div class="my-3"&gt;${weather.records.location&#91;0].weatherElement&#91;0].time&#91;0].parameter.parameterName}&lt;/div&gt;
    &lt;div class="display-4 my-4"&gt;
      &lt;span&gt;氣溫&lt;/span&gt;&lt;br&gt;
      &lt;span&gt;${weather.records.location&#91;0].weatherElement&#91;2].time&#91;0].parameter.parameterName} - ${weather.records.location&#91;0].weatherElement&#91;4].time&#91;0].parameter.parameterName}  &amp;deg;C&lt;/span&gt;
    &lt;/div&gt;
  `;

  // update the night/day &amp; icon images
  const iconSrc = `img/icons/${weather.records.location&#91;0].weatherElement&#91;0].time&#91;0].parameter.parameterValue}.svg`;
  icon.setAttribute('src', iconSrc);


  const timeSrc = weather.records.location&#91;0].weatherElement&#91;0].time&#91;0].startTime.indexOf("06:00:00") || weather.records.location&#91;0].weatherElement&#91;0].time&#91;0].startTime.indexOf("12:00:00") &gt;= 0 ? 'img/day.svg' : 'img/night.svg';
  time.setAttribute('src', timeSrc);

  // remove the d-none class if present
  if(card.classList.contains('d-none')){
    card.classList.remove('d-none');
  }

};

cityForm.addEventListener('submit', e =&gt; {
  // prevent default action
  e.preventDefault();

  // get city value
  const city = cityForm.city.value.trim();
  cityForm.reset();

  // update the ui with new city
  forecast.updateCity(city)
  .then(data =&gt; updateUI(data))
  .catch(err =&gt; console.log(err));

  // set local storage
  localStorage.setItem('city', city);

});

if(localStorage.getItem('city')){
  forecast.updateCity(localStorage.getItem('city'))
    .then(data =&gt; updateUI(data))
    .catch(err =&gt; console.log(err));
};</code></pre>



<h2 class="has-background" style="background-color:#ff6663">Databases (Firebase)</h2>



<h3>NoSQL Databases</h3>



<h4>Storing Data</h4>



<ul><li>Websites work with data<ul><li>blog posts, todos, comments, user info, scores etc</li></ul></li><li>We can store this data in database<ul><li>Firebase (by Google)</li></ul></li></ul>



<h4>Storing Data</h4>



<figure class="wp-block-image size-full"><img loading="lazy" width="1497" height="725" src="/wordpress_blog/wp-content/uploads/2022/04/Storing-Data.png" alt="" class="wp-image-521"/><figcaption>Storing Data</figcaption></figure>



<h4>NoSQL Databases</h4>



<figure class="wp-block-image size-full"><img loading="lazy" width="1536" height="652" src="/wordpress_blog/wp-content/uploads/2022/04/NoSQL-Databases.png" alt="" class="wp-image-522"/><figcaption>NoSQL Databases</figcaption></figure>



<h3 class="has-background" style="background-color:#ff6663">Firebase &amp; Firestore</h3>



<h4>操作步驟</h4>



<ul><li>GO TO CONSOLE</li><li>新的 Firebase 專案 &gt; 新增專案</li><li>專案名稱 udemy-modern-javascript</li><li>適用於 Firebase 專案的 Google Analytics (分析)<ul><li>這裡我先不使用</li></ul></li><li>建立專案</li><li>建構 &gt; Firestore Database</li><li>建立資料庫</li><li>Cloud Firestore 的安全規則<ul><li>以測試模式啟動 (在這裡先使用這個)<br>以正式版模式啟動 (在未來使用上安全是重要的)</li></ul></li><li>設定 Cloud Firestore 位置<ul><li>選擇東亞啟用</li></ul></li><li>新增集合 (Add collection)<ul><li>集合 ID (Collection ID) – recipes</li></ul></li><li>新增第一份文件 (Add first document)<ul><li>欄位(Field) title、類型(Type) string、值(Value) veg &amp; tofu ninja curry</li><li>欄位(Field) author、類型(Type) string、值(Value) ryu</li><li>欄位(Field) created_at 日期(Date) 2022年1月24日、類型(Type) timestamp</li></ul></li><li>自動產生的 ID、然後儲存</li><li>新增文件 (Add a document)<ul><li>欄位(Field) title、類型(Type) string、值(Value) spring green burrito</li><li>欄位(Field) author、類型(Type) string、值(Value) chun li</li><li>欄位(Field) created_at 日期(Date) 2022年1月25日、類型(Type) timestamp</li></ul></li><li>自動產生的 ID、然後儲存</li></ul>



<p>可以參考 The Net Ninja Youtube Channel 的其他課程。</p>



<h4>課程補充文件</h4>



<ul><li><a href="https://firebase.google.com/docs/firestore/quickstart#set_up_your_development_environment" target="_blank" rel="noreferrer noopener">Firebase Documentation 開始使用 Cloud Firestore</a></li></ul>



<pre class="wp-block-code"><code>// In index.html file put the script tag like this:

&lt;script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js"&gt;&lt;/script&gt;
&lt;script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-firestore.js"&gt;&lt;/script&gt;
&lt;script&gt;
  // replace "xxxx" with your own generated firebase config
  const firebaseConfig = {
  apiKey: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
  authDomain: 'xxxxxxxxxxxxxxxxxxxxx.com',
  projectId: 'xxxxx-js',
  storageBucket: 'xxxxxxxxxxx.com',
  messagingSenderId: 'xxxxxxxxxxxxxxxxx',
  appId: 'xxxxxxxxxxxxxxxxx',
  measurementId: 'xxxxxxxxxxxx'
  };
    
  firebase.initializeApp(firebaseConfig);
  const db = firebase.firestore();
&lt;/script&gt;
&lt;script src="sandbox.js"&gt;&lt;/script&gt;</code></pre>



<pre class="wp-block-code"><code>// in sandbox.js file

db.collection('recipes')
   .get()
   .then((snapshot) =&gt; {
      snapshot.docs.forEach((doc) =&gt; {
         console.log(doc.data());
      });
   })
   .catch((err) =&gt; {
      console.log(err);
   });</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Connecting to Firestore</h3>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;title&gt;Modern JavaScript&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Databases(Firebase)&lt;/h1&gt;
    
    
    &lt;script src="sandbox.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<h4>操作步驟</h4>



<ul><li>建立一個 index.html 檔案</li><li>專案總覽 udemy-modern-javascript</li><li>首先請新增應用程式 &gt; 選擇網頁</li><li>將 Firebase 新增至您的網頁應用程式<ul><li>註冊應用程式 &gt;應用程式暱稱 udemy-modern-javascript &gt; 註冊應用程式</li><li>新增 Firebase SDK &gt; 使用 &lt;script&gt; 標記 (選擇這個)</li></ul></li><li>這個教學影片版本是使用 5.9.1</li><li>載入 Bootstrap v4.6</li><li>製作 index.html 的 HTML Template</li></ul>



<p>注意:<br>Make sure you use the same version of Firebase as me – 5.9.1 – to make sure everything works the same way as in the videos.<br><br>There will be a chapter at the end of the course showing how to use the most recent version of Firebase as well (version 9)</p>



<pre class="wp-block-code"><code>// index.html - HTML Template

  &lt;div class="container my-5"&gt;
    &lt;h2&gt;Recipes&lt;/h2&gt;
    &lt;ul&gt;
      &lt;li&gt;Mushroom pie&lt;/li&gt;
      &lt;li&gt;Veg curry&lt;/li&gt;
    &lt;/ul&gt;
    &lt;form&gt;
      &lt;label for="recipe"&gt;Add a new recipe:&lt;/label&gt;
      &lt;div class="input-group"&gt;
        &lt;input type="text" class="form-control" id="recipe" required&gt;
        &lt;div class="input-group-append"&gt;
          &lt;input type="submit" value="add" class="btn btn-outline-secondary"&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/form&gt;
  &lt;/div&gt;</code></pre>



<pre class="wp-block-code"><code>// index.html - 串接資料查閱 Firebase

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css" integrity="sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn" crossorigin="anonymous"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;title&gt;Modern JavaScript&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    
  &lt;div class="container my-5"&gt;
    &lt;h2&gt;Recipes&lt;/h2&gt;
    &lt;ul&gt;
      &lt;li&gt;Mushroom pie&lt;/li&gt;
      &lt;li&gt;Veg curry&lt;/li&gt;
    &lt;/ul&gt;
    &lt;form&gt;
      &lt;label for="recipe"&gt;Add a new recipe:&lt;/label&gt;
      &lt;div class="input-group"&gt;
        &lt;input type="text" class="form-control" id="recipe" required&gt;
        &lt;div class="input-group-append"&gt;
          &lt;input type="submit" value="add" class="btn btn-outline-secondary"&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/form&gt;
  &lt;/div&gt;
    
    &lt;script src="https://www.gstatic.com/firebasejs/5.9.1/firebase-app.js"&gt;&lt;/script&gt;
    &lt;script src="https://www.gstatic.com/firebasejs/5.9.1/firebase-firestore.js"&gt;&lt;/script&gt;
    &lt;script&gt;
      // Initialize Firebase
      const firebaseConfig = {
          apiKey: "",
          authDomain: "",
          projectId: "",
          storageBucket: "",
          messagingSenderId: "",
          appId: ""
      };
      
      // Initialize Firebase
      firebase.initializeApp(firebaseConfig);
      const db = firebase.firestore();
    &lt;/script&gt;
    &lt;script src="sandbox.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Getting Collections</h3>



<pre class="wp-block-code"><code>// sandbox.js

</code></pre>



<pre class="wp-block-code"><code>// index.html - 串接資料查閱 firebase

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css" integrity="sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn" crossorigin="anonymous"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;title&gt;Modern JavaScript&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    
  &lt;div class="container my-5"&gt;
    &lt;h2&gt;Recipes&lt;/h2&gt;
    &lt;ul&gt;
    &lt;/ul&gt;
    &lt;form&gt;
      &lt;label for="recipe"&gt;Add a new recipe:&lt;/label&gt;
      &lt;div class="input-group"&gt;
        &lt;input type="text" class="form-control" id="recipe" required&gt;
        &lt;div class="input-group-append"&gt;
          &lt;input type="submit" value="add" class="btn btn-outline-secondary"&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/form&gt;
  &lt;/div&gt;
    
    &lt;script src="https://www.gstatic.com/firebasejs/5.9.1/firebase-app.js"&gt;&lt;/script&gt;
    &lt;script src="https://www.gstatic.com/firebasejs/5.9.1/firebase-firestore.js"&gt;&lt;/script&gt;
    &lt;script&gt;
      // Initialize Firebase
      const firebaseConfig = {
          apiKey: "",
          authDomain: "",
          projectId: "",
          storageBucket: "",
          messagingSenderId: "",
          appId: ""
      };
      
      // Initialize Firebase
      firebase.initializeApp(firebaseConfig);
      const db = firebase.firestore();
    &lt;/script&gt;
    &lt;script src="sandbox.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js

const list = document.querySelector('ul');

const addRecipe = (recipe) =&gt; {
  // console.log(recipe.created_at.toDate());
  let time = recipe.created_at.toDate();
  let html = `
    &lt;li&gt;
      &lt;div&gt;${recipe.title}&lt;/div&gt;
      &lt;div&gt;${time}&lt;/div&gt;
    &lt;/li&gt;
  `;

  // console.log(html);
  list.innerHTML += html;
}

// get documents
db.collection('recipes').get().then(snapshot =&gt; {
  // when we have the data
  snapshot.docs.forEach(doc =&gt; {
    // console.log(doc.data());
    addRecipe(doc.data());
  });
}).catch(err =&gt; {
  console.log(err);
});</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Saving Documents</h3>



<pre class="wp-block-code"><code>// sandbox.js

const list = document.querySelector('ul');
const form = document.querySelector('form');

const addRecipe = (recipe) =&gt; {
  // console.log(recipe.created_at.toDate());
  let time = recipe.created_at.toDate();
  let html = `
    &lt;li&gt;
      &lt;div&gt;${recipe.title}&lt;/div&gt;
      &lt;div&gt;${time}&lt;/div&gt;
    &lt;/li&gt;
  `;

  // console.log(html);
  list.innerHTML += html;
}

// get documents
db.collection('recipes').get().then(snapshot =&gt; {
  // when we have the data
  snapshot.docs.forEach(doc =&gt; {
    // console.log(doc.data());
    addRecipe(doc.data());
  });
}).catch(err =&gt; {
  console.log(err);
});

// add documents
form.addEventListener('submit', e =&gt; {
  e.preventDefault();

  const now = new Date();
  const recipe = {
    title: form.recipe.value,
    created_at: firebase.firestore.Timestamp.fromDate(now)
  };

  db.collection('recipes').add(recipe).then(() =&gt; {
    console.log('recipe added');
  }).catch(err =&gt; {
    console.log(err);
  });

});</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Deleting Documents</h3>



<p>不懂可重複觀看、練習。</p>



<pre class="wp-block-code"><code>// index.html - 串接資料查閱 Firebase

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css" integrity="sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn" crossorigin="anonymous"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;title&gt;Modern JavaScript&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    
  &lt;div class="container my-5"&gt;
    &lt;h2&gt;Recipes&lt;/h2&gt;
    &lt;ul&gt;
    &lt;/ul&gt;
    &lt;form&gt;
      &lt;label for="recipe"&gt;Add a new recipe:&lt;/label&gt;
      &lt;div class="input-group"&gt;
        &lt;input type="text" class="form-control" id="recipe" required&gt;
        &lt;div class="input-group-append"&gt;
          &lt;input type="submit" value="add" class="btn btn-outline-secondary"&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/form&gt;
  &lt;/div&gt;
    
    &lt;script src="https://www.gstatic.com/firebasejs/5.9.1/firebase-app.js"&gt;&lt;/script&gt;
    &lt;script src="https://www.gstatic.com/firebasejs/5.9.1/firebase-firestore.js"&gt;&lt;/script&gt;
    &lt;script&gt;
      // Initialize Firebase
      const firebaseConfig = {
          apiKey: "",
          authDomain: "",
          projectId: "",
          storageBucket: "",
          messagingSenderId: "",
          appId: ""
      };
      
      // Initialize Firebase
      firebase.initializeApp(firebaseConfig);
      const db = firebase.firestore();
    &lt;/script&gt;
    &lt;script src="sandbox.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js

const list = document.querySelector('ul');
const form = document.querySelector('form');

const addRecipe = (recipe, id) =&gt; {
  // console.log(recipe.created_at.toDate());
  let time = recipe.created_at.toDate();
  let html = `
    &lt;li data-id="${id}"&gt;
      &lt;div&gt;${recipe.title}&lt;/div&gt;
      &lt;div&gt;${time}&lt;/div&gt;
      &lt;button class="btn btn-danger btn-sm my-2"&gt;delete&lt;/button&gt;
    &lt;/li&gt;
  `;

  // console.log(html);
  list.innerHTML += html;
}

// get documents
db.collection('recipes').get().then(snapshot =&gt; {
  // when we have the data
  snapshot.docs.forEach(doc =&gt; {
    // console.log(doc.data());
    // console.log(doc.id);
    addRecipe(doc.data(), doc.id);
  });
}).catch(err =&gt; {
  console.log(err);
});

// add documents
form.addEventListener('submit', e =&gt; {
  e.preventDefault();

  const now = new Date();
  const recipe = {
    title: form.recipe.value,
    created_at: firebase.firestore.Timestamp.fromDate(now)
  };

  db.collection('recipes').add(recipe).then(() =&gt; {
    console.log('recipe added');
  }).catch(err =&gt; {
    console.log(err);
  });

});

// deleting data
list.addEventListener('click', e =&gt; {
  // console.log(e);
  if(e.target.tagName === 'BUTTON'){
    const id = e.target.parentElement.getAttribute('data-id');
    // console.log(id);
    db.collection('recipes').doc(id).delete().then(() =&gt; {
      console.log('recipe deleted');
    });
  }
});</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Real-time Listeners</h3>



<p>不懂可重複觀看、練習。</p>



<pre class="wp-block-code"><code>// sandbox.js

const list = document.querySelector('ul');
const form = document.querySelector('form');

const addRecipe = (recipe, id) =&gt; {
  // console.log(recipe.created_at.toDate());
  let time = recipe.created_at.toDate();
  let html = `
    &lt;li data-id="${id}"&gt;
      &lt;div&gt;${recipe.title}&lt;/div&gt;
      &lt;div&gt;${time}&lt;/div&gt;
      &lt;button class="btn btn-danger btn-sm my-2"&gt;delete&lt;/button&gt;
    &lt;/li&gt;
  `;

  // console.log(html);
  list.innerHTML += html;
}

const deleteRecipe = (id) =&gt; {
  const recipes = document.querySelectorAll('li');
  recipes.forEach(recipe =&gt; {
    if(recipe.getAttribute('data-id') === id){
      recipe.remove();
    }
  });
}

// get documents
db.collection('recipes').onSnapshot(snapshot =&gt; {
  // console.log(snapshot.docChanges());
  snapshot.docChanges().forEach(change =&gt; {
    // console.log(change);
    const doc = change.doc;
    // console.log(doc);
    if(change.type === 'added'){
      addRecipe(doc.data(), doc.id);
    } else if (change.type === 'removed'){
      deleteRecipe(doc.id);
    }
  })
});

// add documents
form.addEventListener('submit', e =&gt; {
  e.preventDefault();

  const now = new Date();
  const recipe = {
    title: form.recipe.value,
    created_at: firebase.firestore.Timestamp.fromDate(now)
  };

  db.collection('recipes').add(recipe).then(() =&gt; {
    console.log('recipe added');
  }).catch(err =&gt; {
    console.log(err);
  });

});

// deleting data
list.addEventListener('click', e =&gt; {
  // console.log(e);
  if(e.target.tagName === 'BUTTON'){
    const id = e.target.parentElement.getAttribute('data-id');
    // console.log(id);
    db.collection('recipes').doc(id).delete().then(() =&gt; {
      console.log('recipe deleted');
    });
  }
});</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Unsubscribing</h3>



<pre class="wp-block-code"><code>// index.html - 串接資料查閱 Firebase

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css" integrity="sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn" crossorigin="anonymous"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;title&gt;Modern JavaScript&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    
  &lt;div class="container my-5"&gt;
    &lt;h2&gt;Recipes&lt;/h2&gt;
    &lt;ul&gt;
    &lt;/ul&gt;
    &lt;form&gt;
      &lt;label for="recipe"&gt;Add a new recipe:&lt;/label&gt;
      &lt;div class="input-group"&gt;
        &lt;input type="text" class="form-control" id="recipe" required&gt;
        &lt;div class="input-group-append"&gt;
          &lt;input type="submit" value="add" class="btn btn-outline-secondary"&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/form&gt;
    &lt;button&gt;unsubscribe from changes&lt;/button&gt;
  &lt;/div&gt;
    
    &lt;script src="https://www.gstatic.com/firebasejs/5.9.1/firebase-app.js"&gt;&lt;/script&gt;
    &lt;script src="https://www.gstatic.com/firebasejs/5.9.1/firebase-firestore.js"&gt;&lt;/script&gt;
    &lt;script&gt;
      // Initialize Firebase
      const firebaseConfig = {
          apiKey: "",
          authDomain: "",
          projectId: "",
          storageBucket: "",
          messagingSenderId: "",
          appId: ""
      };
      
      // Initialize Firebase
      firebase.initializeApp(firebaseConfig);
      const db = firebase.firestore();
    &lt;/script&gt;
    &lt;script src="sandbox.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js

const list = document.querySelector('ul');
const form = document.querySelector('form');
const button = document.querySelector('button');

const addRecipe = (recipe, id) =&gt; {
  // console.log(recipe.created_at.toDate());
  let time = recipe.created_at.toDate();
  let html = `
    &lt;li data-id="${id}"&gt;
      &lt;div&gt;${recipe.title}&lt;/div&gt;
      &lt;div&gt;${time}&lt;/div&gt;
      &lt;button class="btn btn-danger btn-sm my-2"&gt;delete&lt;/button&gt;
    &lt;/li&gt;
  `;

  // console.log(html);
  list.innerHTML += html;
}

const deleteRecipe = (id) =&gt; {
  const recipes = document.querySelectorAll('li');
  recipes.forEach(recipe =&gt; {
    if(recipe.getAttribute('data-id') === id){
      recipe.remove();
    }
  });
}

// get documents
const unsub = db.collection('recipes').onSnapshot(snapshot =&gt; {
  // console.log(snapshot.docChanges());
  snapshot.docChanges().forEach(change =&gt; {
    // console.log(change);
    const doc = change.doc;
    // console.log(doc);
    if(change.type === 'added'){
      addRecipe(doc.data(), doc.id);
    } else if (change.type === 'removed'){
      deleteRecipe(doc.id);
    }
  })
});

// add documents
form.addEventListener('submit', e =&gt; {
  e.preventDefault();

  const now = new Date();
  const recipe = {
    title: form.recipe.value,
    created_at: firebase.firestore.Timestamp.fromDate(now)
  };

  db.collection('recipes').add(recipe).then(() =&gt; {
    console.log('recipe added');
  }).catch(err =&gt; {
    console.log(err);
  });

});

// deleting data
list.addEventListener('click', e =&gt; {
  // console.log(e);
  if(e.target.tagName === 'BUTTON'){
    const id = e.target.parentElement.getAttribute('data-id');
    // console.log(id);
    db.collection('recipes').doc(id).delete().then(() =&gt; {
      console.log('recipe deleted');
    });
  }
});

// unsub from database changes
button.addEventListener('click', () =&gt; {
  unsub();
  console.log('unsubscribed from collection changes');
});</code></pre>



<h2 class="has-background" style="background-color:#ff6663">Project – Real-time Chatroom</h2>



<p>非常有趣，不懂可以重複觀看、練習。</p>



<h3>Project Preview &amp; Setup</h3>



<h4>操作步驟</h4>



<ul><li>建立一個專案資料夾 ninja_chat</li><li>建立 index.html 檔案</li><li>建立一個 scripts 資料夾</li><li>在 scripts 資料夾裡面建立以下檔案<ul><li>app.js</li><li>ui.js</li><li>chat.js</li></ul></li><li>載入 JS 檔案，chat.js、ui.js、app.js</li><li>載入 CSS 檔案，bootstrap v4.6 cdn</li><li>建立 style.css 檔案</li><li>載入 CSS 檔案，style.css</li><li>開啟 Live Server</li></ul>



<h3>HTML Template</h3>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css" integrity="sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn" crossorigin="anonymous"&gt;
  &lt;link rel="stylesheet" href="style.css"&gt;
  &lt;title&gt;Ninja Chat&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;!-- container &amp; title --&gt;
  &lt;div class="container my-4"&gt;
    &lt;h1 class="my-4 text-center"&gt;Ninja Chat&lt;/h1&gt;


    &lt;!-- buttons for chatrooms --&gt;
    &lt;div class="chat-rooms mb-3 text-center"&gt;
      &lt;div class="my-2"&gt;Choose a chatroom:&lt;/div&gt;
      &lt;button class="btn" id="general"&gt;#general&lt;/button&gt;
      &lt;button class="btn" id="gaming"&gt;#gaming&lt;/button&gt;
      &lt;button class="btn" id="music"&gt;#music&lt;/button&gt;
      &lt;button class="btn" id="ninjas"&gt;#ninjas&lt;/button&gt;
    &lt;/div&gt;

    &lt;!-- chat list / window --&gt;
    &lt;div class="chat-window"&gt;
      &lt;ul class="chat-list list-group"&gt;&lt;/ul&gt;
    &lt;/div&gt;

    &lt;!-- new chat form --&gt;
    &lt;form class="new-chat my-3"&gt;
      &lt;div class="input-group"&gt;
        &lt;div class="input-group-prepend"&gt;
          &lt;div class="input-group-text"&gt;Your message:&lt;/div&gt;
        &lt;/div&gt;
        &lt;input type="text" id="message" class="form-control" required&gt;
        &lt;div class="input-group-append"&gt;
          &lt;input type="submit" class="btn" value="send"&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/form&gt;

    &lt;!-- update name form --&gt;
    &lt;form class="new-name my-3"&gt;
      &lt;div class="input-group"&gt;
        &lt;div class="input-group-prepend"&gt;
          &lt;div class="input-group-text"&gt;Update name:&lt;/div&gt;
        &lt;/div&gt;
        &lt;input type="text" id="name" class="form-control" required&gt;
        &lt;div class="input-group-append"&gt;
          &lt;input type="submit" class="btn" value="update"&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="update-mssg"&gt;&lt;/div&gt;
    &lt;/form&gt;
    
  &lt;/div&gt;

  &lt;script src="scripts/chat.js"&gt;&lt;/script&gt;
  &lt;script src="scripts/ui.js"&gt;&lt;/script&gt;
  &lt;script src="scripts/app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// style.css

.container{
  max-width: 600px;
}
.btn{
  background: #43d9be;
  color: white;
  outline: none !important;
  box-shadow: none !important;
}
.btn:focus{
  outline: none !important;
}</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Connecting to Firebase</h3>



<p>Make sure you use the same version of Firebase as me – 5.9.1 – to make sure everything works the same way as in the videos.<br><br>There will be a chapter at the end of the course showing how to use the most recent version of Firebase as well (version 9)</p>



<h4>操作步驟</h4>



<ul><li>載入 SDK 設定和配置 (使用 udermy-modern-javascript 來練習)</li><li>點選 udemy-modern-javascript、選擇 Firestore Database</li><li>並不是每次都需要手動新增集合(collection)，這邊是想要新增兩個虛假的文件</li><li>開始新增集合 (Set collection ID)<ul><li>集合ID (Collection ID) chats</li></ul></li><li>新增第一份文件、自動產生 ID，然後儲存<ul><li>欄位(Field) message、類型(Types) string、值(Value) hey guys</li><li>欄位(Field) username、類型(Types) string、值(Value) yoshi</li><li>欄位(Field) room、類型(Types) string、值(Value) general</li><li>欄位(Field) created_at、類型(Types) timestamp 2022年1月27日</li></ul></li><li>新增文件、自動產生 ID、然後儲存<ul><li>欄位(Field) message、類型(Types) string、值(Value) Yo Yoshi</li><li>欄位(Field) username、類型(Types) string、值(Value) mario</li><li>欄位(Field) room、類型(Types) string、值(Value) general</li><li>欄位(Field) created_at、類型 timestamp 2022年1月27日</li></ul></li></ul>



<pre class="wp-block-code"><code>// index.html 串接資料查閱 Firebase

&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css" integrity="sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn" crossorigin="anonymous"&gt;
  &lt;link rel="stylesheet" href="style.css"&gt;
  &lt;title&gt;Ninja Chat&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;!-- container &amp; title --&gt;
  &lt;div class="container my-4"&gt;
    &lt;h1 class="my-4 text-center"&gt;Ninja Chat&lt;/h1&gt;


    &lt;!-- buttons for chatrooms --&gt;
    &lt;div class="chat-rooms mb-3 text-center"&gt;
      &lt;div class="my-2"&gt;Choose a chatroom:&lt;/div&gt;
      &lt;button class="btn" id="general"&gt;#general&lt;/button&gt;
      &lt;button class="btn" id="gaming"&gt;#gaming&lt;/button&gt;
      &lt;button class="btn" id="music"&gt;#music&lt;/button&gt;
      &lt;button class="btn" id="ninjas"&gt;#ninjas&lt;/button&gt;
    &lt;/div&gt;

    &lt;!-- chat list / window --&gt;
    &lt;div class="chat-window"&gt;
      &lt;ul class="chat-list list-group"&gt;&lt;/ul&gt;
    &lt;/div&gt;

    &lt;!-- new chat form --&gt;
    &lt;form class="new-chat my-3"&gt;
      &lt;div class="input-group"&gt;
        &lt;div class="input-group-prepend"&gt;
          &lt;div class="input-group-text"&gt;Your message:&lt;/div&gt;
        &lt;/div&gt;
        &lt;input type="text" id="message" class="form-control" required&gt;
        &lt;div class="input-group-append"&gt;
          &lt;input type="submit" class="btn" value="send"&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/form&gt;

    &lt;!-- update name form --&gt;
    &lt;form class="new-name my-3"&gt;
      &lt;div class="input-group"&gt;
        &lt;div class="input-group-prepend"&gt;
          &lt;div class="input-group-text"&gt;Update name:&lt;/div&gt;
        &lt;/div&gt;
        &lt;input type="text" id="name" class="form-control" required&gt;
        &lt;div class="input-group-append"&gt;
          &lt;input type="submit" class="btn" value="update"&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="update-mssg"&gt;&lt;/div&gt;
    &lt;/form&gt;
    
  &lt;/div&gt;

  &lt;script src="https://www.gstatic.com/firebasejs/5.9.1/firebase-app.js"&gt;&lt;/script&gt;
  &lt;script src="https://www.gstatic.com/firebasejs/5.9.1/firebase-firestore.js"&gt;&lt;/script&gt;
  &lt;script&gt;
    // Initialize Firebase
    const firebaseConfig = {
        apiKey: "",
        authDomain: "",
        projectId: "",
        storageBucket: "",
        messagingSenderId: "",
        appId: ""
    };
    
    // Initialize Firebase
    firebase.initializeApp(firebaseConfig);
    const db = firebase.firestore();
  &lt;/script&gt;
  &lt;script src="scripts/chat.js"&gt;&lt;/script&gt;
  &lt;script src="scripts/ui.js"&gt;&lt;/script&gt;
  &lt;script src="scripts/app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Chatroom Class &amp; Adding Chats</h3>



<p>chat.js 從零開始撰寫程式碼，<br>不懂可重複觀看、練習。</p>



<pre class="wp-block-code"><code>// chat.js

// adding new chat documents
// setting up a real-time listener to get new chats
// updating the username
// updating the room

class Chatroom {
  constructor(room, username){
    this.room = room;
    this.username = username;
    this.chats = db.collection('chats');
  }
  async addChat(message){
    // format a chat object
    const now = new Date();
    const chat = {
      message,
      username: this.username,
      room: this.room,
      created_at: firebase.firestore.Timestamp.fromDate(now)
    };
    // save the chat document
    const response = await this.chats.add(chat);
    return response;
  }
}

const chatroom = new Chatroom('gaming', 'shaun');
// console.log(chatroom);

chatroom.addChat('hello everyone')
  .then(() =&gt; console.log('chat added'))
  .catch(err =&gt; console.log(err));</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Setting up a Real-time Listener</h3>



<pre class="wp-block-code"><code>// chat.js

// adding new chat documents
// setting up a real-time listener to get new chats
// updating the username
// updating the room

class Chatroom {
  constructor(room, username){
    this.room = room;
    this.username = username;
    this.chats = db.collection('chats');
  }
  async addChat(message){
    // format a chat object
    const now = new Date();
    const chat = {
      message,
      username: this.username,
      room: this.room,
      created_at: firebase.firestore.Timestamp.fromDate(now)
    };
    // save the chat document
    const response = await this.chats.add(chat);
    return response;
  }
  getChats(callback){
    this.chats
      .onSnapshot(snapshot =&gt; {
        snapshot.docChanges().forEach(change =&gt; {
          if(change.type === 'added'){
            // update the ui
            callback(change.doc.data());
          }
        });
    });
  }
}

const chatroom = new Chatroom('gaming', 'shaun');

chatroom.getChats((data) =&gt; {
  console.log(data);
});</code></pre>



<h4>測試 – 在 Firestore Database 新增文件是否會 console.log 出物件資料</h4>



<ul><li>新增文件<ul><li>欄位(Field) message、類型(Types) string、值(Value) test</li></ul></li></ul>



<h3 class="has-background" style="background-color:#ff6663">Complex Queries</h3>



<p>不懂可重複觀看、練習。</p>



<pre class="wp-block-code"><code>// chat.js

// adding new chat documents
// setting up a real-time listener to get new chats
// updating the username
// updating the room

class Chatroom {
  constructor(room, username){
    this.room = room;
    this.username = username;
    this.chats = db.collection('chats');
  }
  async addChat(message){
    // format a chat object
    const now = new Date();
    const chat = {
      message,
      username: this.username,
      room: this.room,
      created_at: firebase.firestore.Timestamp.fromDate(now)
    };
    // save the chat document
    const response = await this.chats.add(chat);
    return response;
  }
  getChats(callback){
    this.chats
      .where('room', '==', this.room)
      .orderBy('created_at')
      .onSnapshot(snapshot =&gt; {
        snapshot.docChanges().forEach(change =&gt; {
          if(change.type === 'added'){
            // update the ui
            callback(change.doc.data());
          }
        });
    });
  }
}

const chatroom = new Chatroom('general', 'shaun');

chatroom.getChats((data) =&gt; {
  console.log(data);
});</code></pre>



<h4>操作步驟</h4>



<ul><li>在 Firestore Database 移除 test 文件</li><li>在 orderBy(‘created_at) 產生錯誤時 Google Console 有顯示如何建立 index、開啟後按建立</li></ul>



<h3 class="has-background" style="background-color:#ff6663">Updating the Room &amp; Username</h3>



<p>不懂可重複觀看、練習。</p>



<pre class="wp-block-code"><code>// chat.js

// adding new chat documents
// setting up a real-time listener to get new chats
// updating the username
// updating the room

class Chatroom {
  constructor(room, username){
    this.room = room;
    this.username = username;
    this.chats = db.collection('chats');
    this.unsub;
  }
  async addChat(message){
    // format a chat object
    const now = new Date();
    const chat = {
      message,
      username: this.username,
      room: this.room,
      created_at: firebase.firestore.Timestamp.fromDate(now)
    };
    // save the chat document
    const response = await this.chats.add(chat);
    return response;
  }
  getChats(callback){
    this.unsub = this.chats
      .where('room', '==', this.room)
      .orderBy('created_at')
      .onSnapshot(snapshot =&gt; {
        snapshot.docChanges().forEach(change =&gt; {
          if(change.type === 'added'){
            // update the ui
            callback(change.doc.data());
          }
        });
    });
  }
  updateName(username){
    this.username = username;
  }
  updateRoom(room){
    this.room = room;
    console.log('room updated');
    if(this.undub){
      this.unsub();
    }
  }
}

const chatroom = new Chatroom('general', 'shaun');

chatroom.getChats((data) =&gt; {
  console.log(data);
});

setTimeout(() =&gt; {
  chatroom.updateRoom('gaming');
  chatroom.updateName('yoshi');
  chatroom.getChats((data) =&gt; {
    console.log(data);
  });
  chatroom.addChat('hello');
}, 3000);</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Creating a ChatUI Class</h3>



<p>不懂可重複觀看、練習。</p>



<pre class="wp-block-code"><code>// chat.js

// adding new chat documents
// setting up a real-time listener to get new chats
// updating the username
// updating the room

class Chatroom {
  constructor(room, username){
    this.room = room;
    this.username = username;
    this.chats = db.collection('chats');
    this.unsub;
  }
  async addChat(message){
    // format a chat object
    const now = new Date();
    const chat = {
      message,
      username: this.username,
      room: this.room,
      created_at: firebase.firestore.Timestamp.fromDate(now)
    };
    // save the chat document
    const response = await this.chats.add(chat);
    return response;
  }
  getChats(callback){
    this.unsub = this.chats
      .where('room', '==', this.room)
      .orderBy('created_at')
      .onSnapshot(snapshot =&gt; {
        snapshot.docChanges().forEach(change =&gt; {
          if(change.type === 'added'){
            // update the ui
            callback(change.doc.data());
          }
        });
    });
  }
  updateName(username){
    this.username = username;
  }
  updateRoom(room){
    this.room = room;
    console.log('room updated');
    if(this.undub){
      this.unsub();
    }
  }
}

</code></pre>



<pre class="wp-block-code"><code>// app.js

// dom queries
const chatList = document.querySelector('.chat-list');

// class instances
const chatUI = new ChatUI(chatList);
const chatroom = new Chatroom('general', 'shaun');

// get chats and render
chatroom.getChats(data =&gt; chatUI.render(data));</code></pre>



<pre class="wp-block-code"><code>// ui.js

// render chat templates to the DOM
// clear the list of chats (when the room changes)

class ChatUI {
  constructor(list){
    this.list = list;
  }
  render(data){
    const html = `
      &lt;li class="list-group-item"&gt;
        &lt;span class="username"&gt;${data.username}&lt;/span&gt;
        &lt;span class="message"&gt;${data.message}&lt;/span&gt;
        &lt;div class="time"&gt;${data.created_at.toDate()}&lt;/div&gt;
      &lt;/li&gt;
    `;

    this.list.innerHTML += html;
  }
}
</code></pre>



<h3>Formatting the Dates</h3>



<h4>GitHub Course</h4>



<ul><li><a rel="noreferrer noopener" href="https://github.com/iamshaunjp/modern-javascript/blob/lesson-143/chat_project/index.html" target="_blank">課程連結</a></li><li><a href="https://cdnjs.cloudflare.com/ajax/libs/date-fns/1.9.0/date_fns.min.js" target="_blank" rel="noreferrer noopener">自己找的 date-fns 1.9.0 cdn</a></li></ul>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css" integrity="sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn" crossorigin="anonymous"&gt;
  &lt;link rel="stylesheet" href="style.css"&gt;
  &lt;title&gt;Ninja Chat&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

  &lt;!-- container &amp; title --&gt;
  &lt;div class="container my-4"&gt;
    &lt;h1 class="my-4 text-center"&gt;Ninja Chat&lt;/h1&gt;


    &lt;!-- buttons for chatrooms --&gt;
    &lt;div class="chat-rooms mb-3 text-center"&gt;
      &lt;div class="my-2"&gt;Choose a chatroom:&lt;/div&gt;
      &lt;button class="btn" id="general"&gt;#general&lt;/button&gt;
      &lt;button class="btn" id="gaming"&gt;#gaming&lt;/button&gt;
      &lt;button class="btn" id="music"&gt;#music&lt;/button&gt;
      &lt;button class="btn" id="ninjas"&gt;#ninjas&lt;/button&gt;
    &lt;/div&gt;

    &lt;!-- chat list / window --&gt;
    &lt;div class="chat-window"&gt;
      &lt;ul class="chat-list list-group"&gt;&lt;/ul&gt;
    &lt;/div&gt;

    &lt;!-- new chat form --&gt;
    &lt;form class="new-chat my-3"&gt;
      &lt;div class="input-group"&gt;
        &lt;div class="input-group-prepend"&gt;
          &lt;div class="input-group-text"&gt;Your message:&lt;/div&gt;
        &lt;/div&gt;
        &lt;input type="text" id="message" class="form-control" required&gt;
        &lt;div class="input-group-append"&gt;
          &lt;input type="submit" class="btn" value="send"&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/form&gt;

    &lt;!-- update name form --&gt;
    &lt;form class="new-name my-3"&gt;
      &lt;div class="input-group"&gt;
        &lt;div class="input-group-prepend"&gt;
          &lt;div class="input-group-text"&gt;Update name:&lt;/div&gt;
        &lt;/div&gt;
        &lt;input type="text" id="name" class="form-control" required&gt;
        &lt;div class="input-group-append"&gt;
          &lt;input type="submit" class="btn" value="update"&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="update-mssg"&gt;&lt;/div&gt;
    &lt;/form&gt;
    
  &lt;/div&gt;

  &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/date-fns/1.9.0/date_fns.min.js"&gt;&lt;/script&gt;
  &lt;script src="https://www.gstatic.com/firebasejs/5.9.1/firebase-app.js"&gt;&lt;/script&gt;
  &lt;script src="https://www.gstatic.com/firebasejs/5.9.1/firebase-firestore.js"&gt;&lt;/script&gt;
  &lt;script&gt;
    // Initialize Firebase
    const firebaseConfig = {
        apiKey: "",
        authDomain: "",
        projectId: "",
        storageBucket: "",
        messagingSenderId: "",
        appId: ""
    };
    
    // Initialize Firebase
    firebase.initializeApp(firebaseConfig);
    const db = firebase.firestore();
  &lt;/script&gt;
  &lt;script src="scripts/chat.js"&gt;&lt;/script&gt;
  &lt;script src="scripts/ui.js"&gt;&lt;/script&gt;
  &lt;script src="scripts/app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// ui.js

// render chat templates to the DOM
// clear the list of chats (when the room changes)

class ChatUI {
  constructor(list){
    this.list = list;
  }
  render(data){
    const when = dateFns.distanceInWordsToNow(
      data.created_at.toDate(),
      { addSuffix: true }
    );
    const html = `
      &lt;li class="list-group-item"&gt;
        &lt;span class="username"&gt;${data.username}&lt;/span&gt;
        &lt;span class="message"&gt;${data.message}&lt;/span&gt;
        &lt;div class="time"&gt;${when}&lt;/div&gt;
      &lt;/li&gt;
    `;

    this.list.innerHTML += html;
  }
}
</code></pre>



<pre class="wp-block-code"><code>// style.css

.container{
  max-width: 600px;
}
.btn{
  background: #43d9be;
  color: white;
  outline: none !important;
  box-shadow: none !important;
}
.btn:focus{
  outline: none !important;
}
.username{
  font-weight: bold;
}
.time{
  font-size: 0.7em;
  color: #999;
}</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Sending New Chats</h3>



<p>不懂可重複觀看、練習。</p>



<pre class="wp-block-code"><code>// app.js

// dom queries
const chatList = document.querySelector('.chat-list');
const newChatForm = document.querySelector('.new-chat');

// add a new chat
newChatForm.addEventListener('submit', e =&gt; {
  e.preventDefault();
  const message = newChatForm.message.value.trim();
  chatroom.addChat(message)
    .then(() =&gt; newChatForm.reset())
    .catch(err =&gt; console.log(err));
});

// class instances
const chatUI = new ChatUI(chatList);
const chatroom = new Chatroom('general', 'shaun');

// get chats and render
chatroom.getChats(data =&gt; chatUI.render(data));</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Changing Username &amp; Local Storage</h3>



<p>重要，不懂可重複觀看、練習。</p>



<pre class="wp-block-code"><code>// app.js - 1

// dom queries
const chatList = document.querySelector('.chat-list');
const newChatForm = document.querySelector('.new-chat');
const newNameForm = document.querySelector('.new-name');
const updateMssg = document.querySelector('.update-mssg');

// add a new chat
newChatForm.addEventListener('submit', e =&gt; {
  e.preventDefault();
  const message = newChatForm.message.value.trim();
  chatroom.addChat(message)
    .then(() =&gt; newChatForm.reset())
    .catch(err =&gt; console.log(err));
});

// update username
newNameForm.addEventListener('submit', e =&gt; {
  e.preventDefault();
  // update name via chatroom
  const newName = newNameForm.name.value.trim();
  chatroom.updateName(newName);
  // reset the form
  newNameForm.reset();
  // show then hide the update message
  updateMssg.innerText = `Your name was updated to ${newName}`;
  setTimeout(() =&gt; updateMssg.innerText = '', 3000);
});

// class instances
const chatUI = new ChatUI(chatList);
const chatroom = new Chatroom('general', 'shaun');

// get chats and render
chatroom.getChats(data =&gt; chatUI.render(data));</code></pre>



<pre class="wp-block-code"><code>// style.css

.container{
  max-width: 600px;
}
.btn{
  background: #43d9be;
  color: white;
  outline: none !important;
  box-shadow: none !important;
}
.btn:focus{
  outline: none !important;
}
.username{
  font-weight: bold;
}
.time{
  font-size: 0.7em;
  color: #999;
}
.update-mssg{
  text-align: center;
  margin: 20px auto;
}</code></pre>



<pre class="wp-block-code"><code>// Google Console
&gt;  chatroom
&lt;  Chatroom&nbsp;{room: 'general', username: 'luigi', chats: t, unsub: ƒ}</code></pre>



<pre class="wp-block-code"><code>// chat.js

// adding new chat documents
// setting up a real-time listener to get new chats
// updating the username
// updating the room

class Chatroom {
  constructor(room, username){
    this.room = room;
    this.username = username;
    this.chats = db.collection('chats');
    this.unsub;
  }
  async addChat(message){
    // format a chat object
    const now = new Date();
    const chat = {
      message,
      username: this.username,
      room: this.room,
      created_at: firebase.firestore.Timestamp.fromDate(now)
    };
    // save the chat document
    const response = await this.chats.add(chat);
    return response;
  }
  getChats(callback){
    this.unsub = this.chats
      .where('room', '==', this.room)
      .orderBy('created_at')
      .onSnapshot(snapshot =&gt; {
        snapshot.docChanges().forEach(change =&gt; {
          if(change.type === 'added'){
            // update the ui
            callback(change.doc.data());
          }
        });
    });
  }
  updateName(username){
    this.username = username;
    localStorage.setItem('username', username);
  }
  updateRoom(room){
    this.room = room;
    console.log('room updated');
    if(this.undub){
      this.unsub();
    }
  }
}

</code></pre>



<pre class="wp-block-code"><code>// app.js - 2

// dom queries
const chatList = document.querySelector('.chat-list');
const newChatForm = document.querySelector('.new-chat');
const newNameForm = document.querySelector('.new-name');
const updateMssg = document.querySelector('.update-mssg');

// add a new chat
newChatForm.addEventListener('submit', e =&gt; {
  e.preventDefault();
  const message = newChatForm.message.value.trim();
  chatroom.addChat(message)
    .then(() =&gt; newChatForm.reset())
    .catch(err =&gt; console.log(err));
});

// update username
newNameForm.addEventListener('submit', e =&gt; {
  e.preventDefault();
  // update name via chatroom
  const newName = newNameForm.name.value.trim();
  chatroom.updateName(newName);
  // reset the form
  newNameForm.reset();
  // show then hide the update message
  updateMssg.innerText = `Your name was updated to ${newName}`;
  setTimeout(() =&gt; updateMssg.innerText = '', 3000);
});

// check local storage for a name
const username = localStorage.username ? localStorage.username : 'anon';

// class instances
const chatUI = new ChatUI(chatList);
const chatroom = new Chatroom('general', username);

// get chats and render
chatroom.getChats(data =&gt; chatUI.render(data));</code></pre>



<pre class="wp-block-code"><code>// Google Console - test
&gt;  chatroom
&lt;  Chatroom&nbsp;{room: 'general', username: 'anon', chats: t, unsub: ƒ}
&gt;</code></pre>



<pre class="wp-block-code"><code>// Goolge Console - Update name: luigi
&gt;  chatroom
&lt;  Chatroom&nbsp;{room: 'general', username: 'anon', chats: t, unsub: ƒ}
&gt;  chatroom
&lt;  Chatroom&nbsp;{room: 'general', username: 'luigi', chats: t, unsub: ƒ}
&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Updating the Room</h3>



<p>不懂可重複觀看、練習。</p>



<pre class="wp-block-code"><code>// app.js

// dom queries
const chatList = document.querySelector('.chat-list');
const newChatForm = document.querySelector('.new-chat');
const newNameForm = document.querySelector('.new-name');
const updateMssg = document.querySelector('.update-mssg');
const rooms = document.querySelector('.chat-rooms');

// add a new chat
newChatForm.addEventListener('submit', e =&gt; {
  e.preventDefault();
  const message = newChatForm.message.value.trim();
  chatroom.addChat(message)
    .then(() =&gt; newChatForm.reset())
    .catch(err =&gt; console.log(err));
});

// update username
newNameForm.addEventListener('submit', e =&gt; {
  e.preventDefault();
  // update name via chatroom
  const newName = newNameForm.name.value.trim();
  chatroom.updateName(newName);
  // reset the form
  newNameForm.reset();
  // show then hide the update message
  updateMssg.innerText = `Your name was updated to ${newName}`;
  setTimeout(() =&gt; updateMssg.innerText = '', 3000);
});

// update the chat room
rooms.addEventListener('click', e =&gt; {
  // console.log(e);
  if(e.target.tagName === 'BUTTON'){
    chatUI.clear();
    chatroom.updateRoom(e.target.getAttribute('id'));
    chatroom.getChats(chat =&gt; chatUI.render(chat));
  }
});

// check local storage for a name
const username = localStorage.username ? localStorage.username : 'anon';

// class instances
const chatUI = new ChatUI(chatList);
const chatroom = new Chatroom('general', username);

// get chats and render
chatroom.getChats(data =&gt; chatUI.render(data));</code></pre>



<pre class="wp-block-code"><code>// ui.js

// render chat templates to the DOM
// clear the list of chats (when the room changes)

class ChatUI {
  constructor(list){
    this.list = list;
  }
  clear(){
    this.list.innerHTML = '';
  }
  render(data){
    const when = dateFns.distanceInWordsToNow(
      data.created_at.toDate(),
      { addSuffix: true }
    );
    const html = `
      &lt;li class="list-group-item"&gt;
        &lt;span class="username"&gt;${data.username}&lt;/span&gt;
        &lt;span class="message"&gt;${data.message}&lt;/span&gt;
        &lt;div class="time"&gt;${when}&lt;/div&gt;
      &lt;/li&gt;
    `;

    this.list.innerHTML += html;
  }
}
</code></pre>



<h3>Testing the App</h3>



<h4>資源</h4>



<ul><li><a href="https://www.youtube.com/playlist?list=PL4cUxeGkcC9jUPIes_B8vRjn1_GaplOPQ" target="_blank" rel="noreferrer noopener">Firebase Auth Playlist on The Net Ninja YouTube Channel</a></li></ul>



<h2>More ES6 Features</h2>



<h3>Spread &amp; Rest</h3>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css" integrity="sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn" crossorigin="anonymous"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;title&gt;Modern JavaScript&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    
    &lt;script src="sandbox.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js

// rest parameter - 其餘參數
const double = (...nums) =&gt; {
  console.log(nums);
  return nums.map(num =&gt; num*2);
}

const result = double(1,3,5,7,9,2,4,6,8);
console.log(result);

// spread syntax (arrays) - 展開語法 (陣列)

const people = &#91;'shaun', 'ryu', 'crystal'];
console.log(...people);
const members = &#91;'mario', 'chun-li', ...people];
console.log(members);

// spread syntax (objects) - 展開語法 (物件)

const person = { name: 'shaun', age: 30, job: 'net ninja'};
const personClone = {...person, location: 'manchester'};

console.log(personClone);</code></pre>



<h3>Sets</h3>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css" integrity="sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn" crossorigin="anonymous"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;title&gt;Modern JavaScript&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    
    &lt;script src="sandbox.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js

// sets
const namesArray = &#91;'ryu', 'chun-li', 'ryu', 'shaun'];
console.log(namesArray);

// const namesSet = new Set(&#91;'ryu', 'chun-li', 'ryu', 'shaun']);
// const namesSet = new Set(namesArray);
// console.log(namesSet);

// const uniqueNames = &#91;...namesSet];
const uniqueNames = &#91;...new Set(namesArray)];
console.log(uniqueNames);

const ages = new Set();
ages.add(20);
ages.add(25).add(30);
ages.add(25);
ages.delete(25);

console.log(ages, ages.size);
console.log(ages.has(30), ages.has(25));

ages.clear();
console.log(ages);

const ninjas = new Set(&#91;
  {name: 'shaun', age: 30},
  {name: 'crystal', age: 29},
  {name: 'chun-li', age: 32}
]);

ninjas.forEach(ninja =&gt; {
  console.log(ninja.name, ninja.age);
});</code></pre>



<h3>Symbols (符號)</h3>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css" integrity="sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn" crossorigin="anonymous"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;title&gt;Modern JavaScript&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    
    &lt;script src="sandbox.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js

const symbolOne = Symbol('a generic name');
const symbolTwo = Symbol('a generic name');

console.log(symbolOne, symbolTwo, typeof symbolOne);
console.log(symbolOne === symbolTwo);

const ninja = {};

ninja.age = 30;
ninja&#91;'belt'] = 'orange';
ninja&#91;'belt'] = 'black';

ninja&#91;symbolOne] = 'ryu';
ninja&#91;symbolTwo] = 'shaun';

console.log(ninja);</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Modern JavaScript (2)</title>
		<link>/wordpress_blog/modern-javascript-2/</link>
		
		<dc:creator><![CDATA[gee.hsu]]></dc:creator>
		<pubDate>Mon, 17 Jan 2022 03:46:00 +0000</pubDate>
				<category><![CDATA[The Net Ninja]]></category>
		<guid isPermaLink="false">/wordpress_blog/?p=492</guid>

					<description><![CDATA[(Complete guide, from Novice to  [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p>(Complete guide, from Novice to Ninja)</p>



<blockquote class="wp-block-quote"><p>Learning Udemy Course：<a href="https://www.udemy.com/course/modern-javascript-from-novice-to-ninja/" target="_blank" rel="noreferrer noopener">Modern JavaScript</a></p><cite>建立者：The Net Ninja (Shaun Pelling)</cite></blockquote>



<p>Learn Modern JavaScript from the very start to ninja-level &amp; build awesome JavaScript applications.</p>



<h4>您會學到</h4>



<ul><li>Learn how to program with modern JavaScript, from the very beginning to more advanced topics</li><li>Learn all about OOP (object-oriented programming) with JavaScript, working with prototypes &amp; classes</li><li>Learn how to create real-world front-end applications with JavaScript (quizes, weather apps, chat rooms etc)</li><li>Learn how to make useful JavaScript driven UI components like popups, drop-downs, tabs, tool-tips &amp; more.</li><li>Learn how to use modern, cutting-edge JavaScript features today by using a modern workflow (Babel &amp; Webpack)</li><li>Learn how to use real-time databases to store, retrieve and update application data</li><li>Explore API’s to make the most of third-party data (such as weather information)</li></ul>



<h2>Forms &amp; Form Events</h2>



<h3>Events Inside Forms</h3>



<h4>Form Events</h4>



<ul><li>Capture data or information from a user</li><li>E.g. a username &amp; password</li></ul>



<h4>Submit Events</h4>



<ul><li>“submit” event, which submits the form</li><li>keyboard events</li></ul>



<h3>Submit Events</h3>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;title&gt;Modern JavaScript&lt;/title&gt;
    &lt;style&gt;
        body {
            background: #eee;
        }

        form {
            max-width: 200px;
            margin: 40px auto;
            background: white;
            padding: 10px;
        }

        input {
            display: block;
            margin: 10px auto;
            padding: 4px;
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

    &lt;form class="signup-form"&gt;
        &lt;input type="text" id="username" placeholder="username"&gt;
        &lt;input type="submit" value="submit"&gt;
    &lt;/form&gt;
    
    &lt;script src="sandbox.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js

const form = document.querySelector('.signup-form');
// const username = document.querySelector('#username');

form.addEventListener('submit', e =&gt; {
  e.preventDefault();
  // console.log(username.value);
  console.log(form.username.value);
});</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Regular Expressions (正規表達式)</h3>



<h4>資源</h4>



<ul><li><a href="https://regex101.com/" target="_blank" rel="noreferrer noopener">Regex101 Website</a></li><li><a href="https://www.youtube.com/playlist?list=PL4cUxeGkcC9g6m_6Sld9Q4jzqdqHd2HiD" target="_blank" rel="noreferrer noopener">Regex Playlist on the Net Ninja Youtube Channel</a></li></ul>



<h4>Regex101 介紹</h4>



<ul><li>ninja</li><li>^ninja$</li><li>^[a-z]$</li><li>^[c-p]$</li><li>^[a-zA-Z]$</li><li>^[a-zA-Z]{6,10}$，大小寫a~z、字數6~10</li><li>^[a-zA-Z0-9]{6,10}$，大小寫a-z、數字0到9、字數6~10</li><li>^.{6,10}$，任何字符字元、字數6~10</li></ul>



<h3 class="has-background" style="background-color:#ff6663">Testing RegEx Patterns</h3>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;title&gt;Modern JavaScript&lt;/title&gt;
    &lt;style&gt;
        body {
            background: #eee;
        }

        form {
            max-width: 200px;
            margin: 40px auto;
            background: white;
            padding: 10px;
        }

        input {
            display: block;
            margin: 10px auto;
            padding: 4px;
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

    &lt;form class="signup-form"&gt;
        &lt;input type="text" id="username" placeholder="username"&gt;
        &lt;input type="submit" value="submit"&gt;
    &lt;/form&gt;
    
    &lt;script src="sandbox.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 1

const form = document.querySelector('.signup-form');
// const username = document.querySelector('#username');

form.addEventListener('submit', e =&gt; {
  e.preventDefault();
  // console.log(username.value);
  console.log(form.username.value);
});

// testing RegEx
const username = 'shaunp123';
const pattern = /^&#91;a-z]{6,}$/;

let result = pattern.test(username);
// console.log(result);

if(result){
  console.log('regex test passed :)');
}
else{
  console.log('regex test failed :(');
}</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 2

const form = document.querySelector('.signup-form');
// const username = document.querySelector('#username');

form.addEventListener('submit', e =&gt; {
  e.preventDefault();
  // console.log(username.value);
  console.log(form.username.value);
});

// testing RegEx
const username = 'shaunp123';
const pattern = /^&#91;a-z]{6,}$/;

// let result = pattern.test(username);
// // console.log(result);

// if(result){
//   console.log('regex test passed :)');
// }
// else{
//   console.log('regex test failed :(');
// }

let result = username.search(pattern);
console.log(result);</code></pre>



<pre class="wp-block-code"><code>// Google Console - 2
   -1
&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 3

const form = document.querySelector('.signup-form');
// const username = document.querySelector('#username');

form.addEventListener('submit', e =&gt; {
  e.preventDefault();
  // console.log(username.value);
  console.log(form.username.value);
});

// testing RegEx
const username = 'shaunp';
const pattern = /^&#91;a-z]{6,}$/;

// let result = pattern.test(username);
// // console.log(result);

// if(result){
//   console.log('regex test passed :)');
// }
// else{
//   console.log('regex test failed :(');
// }

let result = username.search(pattern);
console.log(result);</code></pre>



<pre class="wp-block-code"><code>// Google Console - 3
   0
&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 4

const form = document.querySelector('.signup-form');
// const username = document.querySelector('#username');

form.addEventListener('submit', e =&gt; {
  e.preventDefault();
  // console.log(username.value);
  console.log(form.username.value);
});

// testing RegEx
const username = '3434shaunp3656';
const pattern = /&#91;a-z]{6,}/;

// let result = pattern.test(username);
// // console.log(result);

// if(result){
//   console.log('regex test passed :)');
// }
// else{
//   console.log('regex test failed :(');
// }

let result = username.search(pattern);
console.log(result);</code></pre>



<pre class="wp-block-code"><code>// Google Console - 4
   4
&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 5

const form = document.querySelector('.signup-form');
// const username = document.querySelector('#username');

form.addEventListener('submit', e =&gt; {
  e.preventDefault();
  // console.log(username.value);
  console.log(form.username.value);
});

// testing RegEx
const username = '3434shaunp3656';
const pattern = /^&#91;a-z]{6,}$/;

// let result = pattern.test(username);
// // console.log(result);

// if(result){
//   console.log('regex test passed :)');
// }
// else{
//   console.log('regex test failed :(');
// }

let result = username.search(pattern);
console.log(result);</code></pre>



<pre class="wp-block-code"><code>// Google Console - 5
   -1
&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Basic Form Validation</h3>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;title&gt;Modern JavaScript&lt;/title&gt;
    &lt;style&gt;
        body {
            background: #eee;
        }

        form {
            max-width: 200px;
            margin: 40px auto;
            background: white;
            padding: 10px;
        }

        input {
            display: block;
            margin: 10px auto;
            padding: 4px;
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

    &lt;form class="signup-form"&gt;
        &lt;input type="text" id="username" name="username" placeholder="username"&gt;
        &lt;input type="submit" value="submit"&gt;
        &lt;div class="feedback"&gt;&lt;/div&gt;
    &lt;/form&gt;
    
    &lt;script src="sandbox.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js

const form = document.querySelector('.signup-form');
const feedback = document.querySelector('.feedback');

form.addEventListener('submit', e =&gt; {
  e.preventDefault();

  // validation
  const username = form.username.value;
  const usernamePattern = /^&#91;a-zA-Z]{6,12}$/;

  if(usernamePattern.test(username)){
    // feedback good info
    feedback.textContent = 'that username is valid!';
  }
  else{
    // feedback help info
    feedback.textContent = 'username must contain letters only &amp; be between 6 &amp; 12 characters long';
  }

});
</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Keyboard Events</h3>



<h4>MDN 文件</h4>



<ul><li><a href="https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation#validating_forms_using_javascript" target="_blank" rel="noreferrer noopener">Validating forms using JavaScript</a></li></ul>



<pre class="wp-block-code"><code>// index.html - 1

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;title&gt;Modern JavaScript&lt;/title&gt;
    &lt;style&gt;
        body {
            background: #eee;
        }

        form {
            max-width: 200px;
            margin: 40px auto;
            background: white;
            padding: 10px;
        }

        input {
            display: block;
            margin: 10px auto;
            padding: 4px;
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

    &lt;form class="signup-form"&gt;
        &lt;input type="text" id="username" name="username" placeholder="username"&gt;
        &lt;input type="submit" value="submit"&gt;
        &lt;div class="feedback"&gt;&lt;/div&gt;
    &lt;/form&gt;
    
    &lt;script src="sandbox.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 1

const form = document.querySelector('.signup-form');
const feedback = document.querySelector('.feedback');
const usernamePattern = /^&#91;a-zA-Z]{6,12}$/;

form.addEventListener('submit', e =&gt; {
  e.preventDefault();

  // validation
  const username = form.username.value;

  if(usernamePattern.test(username)){
    // feedback good info
    feedback.textContent = 'that username is valid!';
  }
  else{
    // feedback help info
    feedback.textContent = 'username must contain letters only &amp; be between 6 &amp; 12 characters long';
  }

});

// live feedback
form.username.addEventListener('keyup', e =&gt; {
  // console.log(e.target.value, form.username.value);
  if(usernamePattern.test(e.target.value)){
    console.log('passed');
  }
  else{
    console.log('failed');
  }
});
</code></pre>



<pre class="wp-block-code"><code>// Google Console - 1
5  failed
   passed
&gt;</code></pre>



<pre class="wp-block-code"><code>// index.html - 2

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;title&gt;Modern JavaScript&lt;/title&gt;
    &lt;style&gt;
        body {
            background: #eee;
        }

        form {
            max-width: 200px;
            margin: 40px auto;
            background: white;
            padding: 10px;
        }

        input {
            display: block;
            margin: 10px auto;
            padding: 4px;
        }

        .success {
            border: 2px solid limegreen;
        }

        .error {
            border: 2px solid crimson;
        }
        
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

    &lt;form class="signup-form"&gt;
        &lt;input type="text" id="username" name="username" placeholder="username"&gt;
        &lt;input type="submit" value="submit"&gt;
        &lt;div class="feedback"&gt;&lt;/div&gt;
    &lt;/form&gt;
    
    &lt;script src="sandbox.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 2

const form = document.querySelector('.signup-form');
const feedback = document.querySelector('.feedback');
const usernamePattern = /^&#91;a-zA-Z]{6,12}$/;

form.addEventListener('submit', e =&gt; {
  e.preventDefault();

  // validation
  const username = form.username.value;

  if(usernamePattern.test(username)){
    // feedback good info
    feedback.textContent = 'that username is valid!';
  }
  else{
    // feedback help info
    feedback.textContent = 'username must contain letters only &amp; be between 6 &amp; 12 characters long';
  }

});

// live feedback
form.username.addEventListener('keyup', e =&gt; {
  // console.log(e.target.value, form.username.value);
  if(usernamePattern.test(e.target.value)){
    // console.log('passed');
    form.username.setAttribute('class', 'success');
  }
  else{
    // console.log('failed');
    form.username.setAttribute('class', 'error');
  }
});
</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 3 console.log(e);

const form = document.querySelector('.signup-form');
const feedback = document.querySelector('.feedback');
const usernamePattern = /^&#91;a-zA-Z]{6,12}$/;

form.addEventListener('submit', e =&gt; {
  e.preventDefault();

  // validation
  const username = form.username.value;

  if(usernamePattern.test(username)){
    // feedback good info
    feedback.textContent = 'that username is valid!';
  }
  else{
    // feedback help info
    feedback.textContent = 'username must contain letters only &amp; be between 6 &amp; 12 characters long';
  }

});

// live feedback
form.username.addEventListener('keyup', e =&gt; {
  console.log(e);
  // console.log(e.target.value, form.username.value);
  if(usernamePattern.test(e.target.value)){
    // console.log('passed');
    form.username.setAttribute('class', 'success');
  }
  else{
    // console.log('failed');
    form.username.setAttribute('class', 'error');
  }
});
</code></pre>



<h2>Project – Interactive Ninja Quiz</h2>



<h3>Project Preview &amp; Setup</h3>



<h3>Bootstrap Basics</h3>



<h4>資源</h4>



<ul><li><a rel="noreferrer noopener" href="https://getbootstrap.com/" target="_blank">Bootstrap Website</a>&nbsp;– 使用 v4.3</li></ul>



<h3>HTML Template</h3>



<h4>資源</h4>



<ul><li><a href="https://github.com/iamshaunjp/modern-javascript/tree/lesson-66" target="_blank" rel="noreferrer noopener">GitHub files for this lesson (HTML template)</a></li></ul>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous"&gt;
    &lt;title&gt;Ninja Quiz&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    
    &lt;!-- top section --&gt;
    &lt;div class="intro py-3 bg-white text-center"&gt;
      &lt;div class="container"&gt;
        &lt;h2 class="text-primary display-3 my-4"&gt;Ninja Quiz&lt;/h2&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;!-- quiz section --&gt;
    &lt;div class="quiz py-4 bg-primary"&gt;
      &lt;div class="container"&gt;
        &lt;h2 class="my-5 text-white"&gt;On with the questions...&lt;/h2&gt;

        &lt;form class="quiz-form text-light"&gt;
          &lt;div class="my-5"&gt;
            &lt;p class="lead font-weight-normal"&gt;1. How do you give a ninja directions?&lt;/p&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q1" value="A" checked&gt;
              &lt;label class="form-check-label"&gt;Show them a map&lt;/label&gt;
            &lt;/div&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q1" value="B"&gt;
              &lt;label class="form-check-label"&gt;Don't worry, a ninja will find you&lt;/label&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="my-5"&gt;
            &lt;p class="lead font-weight-normal"&gt;2. If a ninja has 3 apples, then gives one to Mario &amp; one to Yoshi, how many apples does the ninja have left?&lt;/p&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q2" value="A" checked&gt;
              &lt;label class="form-check-label"&gt;1 apple&lt;/label&gt;
            &lt;/div&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q2" value="B"&gt;
              &lt;label class="form-check-label"&gt;3 apples, and two corpses&lt;/label&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="my-5"&gt;
            &lt;p class="lead font-weight-normal"&gt;3. How do you know when you've met a ninja?&lt;/p&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q3" value="A" checked&gt;
              &lt;label class="form-check-label"&gt;You'll recognize the outfit&lt;/label&gt;
            &lt;/div&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q3" value="B"&gt;
              &lt;label class="form-check-label"&gt;The grim reaper will tell you&lt;/label&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="my-5"&gt;
            &lt;p class="lead font-weight-normal"&gt;4. What is a ninja's favorite array method?&lt;/p&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q4" value="A" checked&gt;
              &lt;label class="form-check-label"&gt;forEach()&lt;/label&gt;
            &lt;/div&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q4" value="B"&gt;
              &lt;label class="form-check-label"&gt;Slice()&lt;/label&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="text-center"&gt;
            &lt;input type="submit" class="btn btn-light"&gt;
          &lt;/div&gt;
        &lt;/form&gt;

      &lt;/div&gt;
    &lt;/div&gt;

    &lt;script src="app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Checking Answers</h3>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous"&gt;
    &lt;title&gt;Ninja Quiz&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    
    &lt;!-- top section --&gt;
    &lt;div class="intro py-3 bg-white text-center"&gt;
      &lt;div class="container"&gt;
        &lt;h2 class="text-primary display-3 my-4"&gt;Ninja Quiz&lt;/h2&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;!-- quiz section --&gt;
    &lt;div class="quiz py-4 bg-primary"&gt;
      &lt;div class="container"&gt;
        &lt;h2 class="my-5 text-white"&gt;On with the questions...&lt;/h2&gt;

        &lt;form class="quiz-form text-light"&gt;
          &lt;div class="my-5"&gt;
            &lt;p class="lead font-weight-normal"&gt;1. How do you give a ninja directions?&lt;/p&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q1" value="A" checked&gt;
              &lt;label class="form-check-label"&gt;Show them a map&lt;/label&gt;
            &lt;/div&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q1" value="B"&gt;
              &lt;label class="form-check-label"&gt;Don't worry, a ninja will find you&lt;/label&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="my-5"&gt;
            &lt;p class="lead font-weight-normal"&gt;2. If a ninja has 3 apples, then gives one to Mario &amp; one to Yoshi, how many apples does the ninja have left?&lt;/p&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q2" value="A" checked&gt;
              &lt;label class="form-check-label"&gt;1 apple&lt;/label&gt;
            &lt;/div&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q2" value="B"&gt;
              &lt;label class="form-check-label"&gt;3 apples, and two corpses&lt;/label&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="my-5"&gt;
            &lt;p class="lead font-weight-normal"&gt;3. How do you know when you've met a ninja?&lt;/p&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q3" value="A" checked&gt;
              &lt;label class="form-check-label"&gt;You'll recognize the outfit&lt;/label&gt;
            &lt;/div&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q3" value="B"&gt;
              &lt;label class="form-check-label"&gt;The grim reaper will tell you&lt;/label&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="my-5"&gt;
            &lt;p class="lead font-weight-normal"&gt;4. What is a ninja's favorite array method?&lt;/p&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q4" value="A" checked&gt;
              &lt;label class="form-check-label"&gt;forEach()&lt;/label&gt;
            &lt;/div&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q4" value="B"&gt;
              &lt;label class="form-check-label"&gt;Slice()&lt;/label&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="text-center"&gt;
            &lt;input type="submit" class="btn btn-light"&gt;
          &lt;/div&gt;
        &lt;/form&gt;

      &lt;/div&gt;
    &lt;/div&gt;

    &lt;script src="app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// app.js

const correctAnswers = &#91;'B','B','B','B'];
const form = document.querySelector('.quiz-form');

form.addEventListener('submit', e =&gt; {
  e.preventDefault();

  let score = 0;
  const userAnswers = &#91;form.q1.value, form.q2.value, form.q3.value, form.q4.value];

  // check answers
  userAnswers.forEach((answer, index) =&gt; {
    if(answer === correctAnswers&#91;index]){
      score += 25;
    }
  });

  console.log(score);

});</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Showing the Score</h3>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous"&gt;
    &lt;title&gt;Ninja Quiz&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    
    &lt;!-- top section --&gt;
    &lt;div class="intro py-3 bg-white text-center"&gt;
      &lt;div class="container"&gt;
        &lt;h2 class="text-primary display-3 my-4"&gt;Ninja Quiz&lt;/h2&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;!-- result section --&gt;
    &lt;div class="result py-4 d-none bg-light text-center"&gt;
      &lt;div class="container lead"&gt;
        &lt;p&gt;You are &lt;span class="text-primary display-4 p-3"&gt;0%&lt;/span&gt; ninja&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;!-- quiz section --&gt;
    &lt;div class="quiz py-4 bg-primary"&gt;
      &lt;div class="container"&gt;
        &lt;h2 class="my-5 text-white"&gt;On with the questions...&lt;/h2&gt;

        &lt;form class="quiz-form text-light"&gt;
          &lt;div class="my-5"&gt;
            &lt;p class="lead font-weight-normal"&gt;1. How do you give a ninja directions?&lt;/p&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q1" value="A" checked&gt;
              &lt;label class="form-check-label"&gt;Show them a map&lt;/label&gt;
            &lt;/div&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q1" value="B"&gt;
              &lt;label class="form-check-label"&gt;Don't worry, a ninja will find you&lt;/label&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="my-5"&gt;
            &lt;p class="lead font-weight-normal"&gt;2. If a ninja has 3 apples, then gives one to Mario &amp; one to Yoshi, how many apples does the ninja have left?&lt;/p&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q2" value="A" checked&gt;
              &lt;label class="form-check-label"&gt;1 apple&lt;/label&gt;
            &lt;/div&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q2" value="B"&gt;
              &lt;label class="form-check-label"&gt;3 apples, and two corpses&lt;/label&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="my-5"&gt;
            &lt;p class="lead font-weight-normal"&gt;3. How do you know when you've met a ninja?&lt;/p&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q3" value="A" checked&gt;
              &lt;label class="form-check-label"&gt;You'll recognize the outfit&lt;/label&gt;
            &lt;/div&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q3" value="B"&gt;
              &lt;label class="form-check-label"&gt;The grim reaper will tell you&lt;/label&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="my-5"&gt;
            &lt;p class="lead font-weight-normal"&gt;4. What is a ninja's favorite array method?&lt;/p&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q4" value="A" checked&gt;
              &lt;label class="form-check-label"&gt;forEach()&lt;/label&gt;
            &lt;/div&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q4" value="B"&gt;
              &lt;label class="form-check-label"&gt;Slice()&lt;/label&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="text-center"&gt;
            &lt;input type="submit" class="btn btn-light"&gt;
          &lt;/div&gt;
        &lt;/form&gt;

      &lt;/div&gt;
    &lt;/div&gt;

    &lt;script src="app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// app.js

const correctAnswers = &#91;'B','B','B','B'];
const form = document.querySelector('.quiz-form');
const result = document.querySelector('.result');

form.addEventListener('submit', e =&gt; {
  e.preventDefault();

  let score = 0;
  const userAnswers = &#91;form.q1.value, form.q2.value, form.q3.value, form.q4.value];

  // check answers
  userAnswers.forEach((answer, index) =&gt; {
    if(answer === correctAnswers&#91;index]){
      score += 25;
    }
  });

  // show result on page
  result.querySelector('span').textContent = `${score}%`;
  result.classList.remove('d-none');
  

});</code></pre>



<h3 class="has-background" style="background-color:#ff6663">The Window Object (觀念、scrollTo)</h3>



<pre class="wp-block-code"><code>// Google Console
&gt;  window
&lt;  Window&nbsp;{window: Window, self: Window, document: document, name: '', location: Location,&nbsp;…}
&gt;  window.outerWidth
&lt;  1280
&gt;  outerWidth
&lt;  1280
&gt;</code></pre>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous"&gt;
    &lt;title&gt;Ninja Quiz&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    
    &lt;!-- top section --&gt;
    &lt;div class="intro py-3 bg-white text-center"&gt;
      &lt;div class="container"&gt;
        &lt;h2 class="text-primary display-3 my-4"&gt;Ninja Quiz&lt;/h2&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;!-- result section --&gt;
    &lt;div class="result py-4 d-none bg-light text-center"&gt;
      &lt;div class="container lead"&gt;
        &lt;p&gt;You are &lt;span class="text-primary display-4 p-3"&gt;0%&lt;/span&gt; ninja&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;!-- quiz section --&gt;
    &lt;div class="quiz py-4 bg-primary"&gt;
      &lt;div class="container"&gt;
        &lt;h2 class="my-5 text-white"&gt;On with the questions...&lt;/h2&gt;

        &lt;form class="quiz-form text-light"&gt;
          &lt;div class="my-5"&gt;
            &lt;p class="lead font-weight-normal"&gt;1. How do you give a ninja directions?&lt;/p&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q1" value="A" checked&gt;
              &lt;label class="form-check-label"&gt;Show them a map&lt;/label&gt;
            &lt;/div&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q1" value="B"&gt;
              &lt;label class="form-check-label"&gt;Don't worry, a ninja will find you&lt;/label&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="my-5"&gt;
            &lt;p class="lead font-weight-normal"&gt;2. If a ninja has 3 apples, then gives one to Mario &amp; one to Yoshi, how many apples does the ninja have left?&lt;/p&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q2" value="A" checked&gt;
              &lt;label class="form-check-label"&gt;1 apple&lt;/label&gt;
            &lt;/div&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q2" value="B"&gt;
              &lt;label class="form-check-label"&gt;3 apples, and two corpses&lt;/label&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="my-5"&gt;
            &lt;p class="lead font-weight-normal"&gt;3. How do you know when you've met a ninja?&lt;/p&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q3" value="A" checked&gt;
              &lt;label class="form-check-label"&gt;You'll recognize the outfit&lt;/label&gt;
            &lt;/div&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q3" value="B"&gt;
              &lt;label class="form-check-label"&gt;The grim reaper will tell you&lt;/label&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="my-5"&gt;
            &lt;p class="lead font-weight-normal"&gt;4. What is a ninja's favorite array method?&lt;/p&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q4" value="A" checked&gt;
              &lt;label class="form-check-label"&gt;forEach()&lt;/label&gt;
            &lt;/div&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q4" value="B"&gt;
              &lt;label class="form-check-label"&gt;Slice()&lt;/label&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="text-center"&gt;
            &lt;input type="submit" class="btn btn-light"&gt;
          &lt;/div&gt;
        &lt;/form&gt;

      &lt;/div&gt;
    &lt;/div&gt;

    &lt;script src="app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// app.js

const correctAnswers = &#91;'B','B','B','B'];
const form = document.querySelector('.quiz-form');
const result = document.querySelector('.result');

form.addEventListener('submit', e =&gt; {
  e.preventDefault();

  let score = 0;
  const userAnswers = &#91;form.q1.value, form.q2.value, form.q3.value, form.q4.value];

  // check answers
  userAnswers.forEach((answer, index) =&gt; {
    if(answer === correctAnswers&#91;index]){
      score += 25;
    }
  });

  // show result on page
  scrollTo(0,0);
  result.querySelector('span').textContent = `${score}%`;
  result.classList.remove('d-none');
  

});

// window object (global object)

// console.log('hello');
// window.console.log('hello');

// console.log(document.querySelector('form'));
// console.log(window.document.querySelector('form'));

// alert('hello');
// window.alert('hello');

// setTimeout(() =&gt; {
//   alert('hello, ninjas');
// }, 3000);</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Intervals &amp; Animating the Score</h3>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous"&gt;
    &lt;title&gt;Ninja Quiz&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    
    &lt;!-- top section --&gt;
    &lt;div class="intro py-3 bg-white text-center"&gt;
      &lt;div class="container"&gt;
        &lt;h2 class="text-primary display-3 my-4"&gt;Ninja Quiz&lt;/h2&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;!-- result section --&gt;
    &lt;div class="result py-4 d-none bg-light text-center"&gt;
      &lt;div class="container lead"&gt;
        &lt;p&gt;You are &lt;span class="text-primary display-4 p-3"&gt;0%&lt;/span&gt; ninja&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;!-- quiz section --&gt;
    &lt;div class="quiz py-4 bg-primary"&gt;
      &lt;div class="container"&gt;
        &lt;h2 class="my-5 text-white"&gt;On with the questions...&lt;/h2&gt;

        &lt;form class="quiz-form text-light"&gt;
          &lt;div class="my-5"&gt;
            &lt;p class="lead font-weight-normal"&gt;1. How do you give a ninja directions?&lt;/p&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q1" value="A" checked&gt;
              &lt;label class="form-check-label"&gt;Show them a map&lt;/label&gt;
            &lt;/div&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q1" value="B"&gt;
              &lt;label class="form-check-label"&gt;Don't worry, a ninja will find you&lt;/label&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="my-5"&gt;
            &lt;p class="lead font-weight-normal"&gt;2. If a ninja has 3 apples, then gives one to Mario &amp; one to Yoshi, how many apples does the ninja have left?&lt;/p&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q2" value="A" checked&gt;
              &lt;label class="form-check-label"&gt;1 apple&lt;/label&gt;
            &lt;/div&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q2" value="B"&gt;
              &lt;label class="form-check-label"&gt;3 apples, and two corpses&lt;/label&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="my-5"&gt;
            &lt;p class="lead font-weight-normal"&gt;3. How do you know when you've met a ninja?&lt;/p&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q3" value="A" checked&gt;
              &lt;label class="form-check-label"&gt;You'll recognize the outfit&lt;/label&gt;
            &lt;/div&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q3" value="B"&gt;
              &lt;label class="form-check-label"&gt;The grim reaper will tell you&lt;/label&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="my-5"&gt;
            &lt;p class="lead font-weight-normal"&gt;4. What is a ninja's favorite array method?&lt;/p&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q4" value="A" checked&gt;
              &lt;label class="form-check-label"&gt;forEach()&lt;/label&gt;
            &lt;/div&gt;
            &lt;div class="form-check my-2 text-white-50"&gt;
              &lt;input type="radio" name="q4" value="B"&gt;
              &lt;label class="form-check-label"&gt;Slice()&lt;/label&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="text-center"&gt;
            &lt;input type="submit" class="btn btn-light"&gt;
          &lt;/div&gt;
        &lt;/form&gt;

      &lt;/div&gt;
    &lt;/div&gt;

    &lt;script src="app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// app.js

const correctAnswers = &#91;'B','B','B','B'];
const form = document.querySelector('.quiz-form');
const result = document.querySelector('.result');

form.addEventListener('submit', e =&gt; {
  e.preventDefault();

  let score = 0;
  const userAnswers = &#91;form.q1.value, form.q2.value, form.q3.value, form.q4.value];

  // check answers
  userAnswers.forEach((answer, index) =&gt; {
    if(answer === correctAnswers&#91;index]){
      score += 25;
    }
  });

  // show result on page
  scrollTo(0,0);

  result.classList.remove('d-none');
  
  let output = 0;
  const timer = setInterval(() =&gt; {
    result.querySelector('span').textContent = `${output}%`;
    if(output === score){
      clearInterval(timer);
    }
    else{
      output++;
    }
  }, 10);

});

// setTimeout(() =&gt; {
//   // do something
// }, 3000);

// let i = 0;
// const timer = setInterval(() =&gt; {
//   console.log('hello');
//   i++;
//   if(i === 5){
//     clearInterval(timer);
//   }
// }, 1000);</code></pre>



<h2>Array Methods(陣列方法)</h2>



<h3 class="has-background" style="background-color:#ff6663">Filter Method</h3>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;title&gt;Modern JavaScript&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

    &lt;h1&gt;Array Methods&lt;/h1&gt;
    
    &lt;script src="sandbox.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 1

const scores = &#91;10, 30, 15, 25, 50, 40, 5];

// const filteredScores = scores.filter((score) =&gt; {
//   return score &gt; 20;
// });

// console.log(filteredScores);

const users = &#91;
  {name: 'shaun', premium: true},
  {name: 'yoshi', premium: false},
  {name: 'mario', premium: false},
  {name: 'chun-li', premium: true}
];

const premiumUsers = users.filter(user =&gt; {
  return user.premium
});

console.log(premiumUsers);</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 2

const scores = &#91;10, 30, 15, 25, 50, 40, 5];

// const filteredScores = scores.filter((score) =&gt; {
//   return score &gt; 20;
// });

// console.log(filteredScores);

const users = &#91;
  {name: 'shaun', premium: true},
  {name: 'yoshi', premium: false},
  {name: 'mario', premium: false},
  {name: 'chun-li', premium: true}
];

const premiumUsers = users.filter(user =&gt; user.premium);

console.log(premiumUsers);</code></pre>



<h3>Map Method</h3>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;title&gt;Modern JavaScript&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

    &lt;h1&gt;Array Methods&lt;/h1&gt;
    
    &lt;script src="sandbox.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 1

// map method
const prices = &#91;20, 10, 30, 25, 15, 40, 80, 5];

const salePrices = prices.map((price) =&gt; {
  return price / 2;
});

console.log(salePrices);</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 2 縮寫

// map method
const prices = &#91;20, 10, 30, 25, 15, 40, 80, 5];

const salePrices = prices.map(price =&gt; price / 2);

console.log(salePrices);</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 3 與 4 做比較

// map method
const prices = &#91;20, 10, 30, 25, 15, 40, 80, 5];

// const salePrices = prices.map(price =&gt; price / 2);
// console.log(salePrices);

const products = &#91;
  {name: 'gold star', price: 20},
  {name: 'mushroom', price: 40},
  {name: 'green shells', price: 30},
  {name: 'banana skin', price: 10},
  {name: 'red shells', price: 50}
];

const saleProducts = products.map((product) =&gt; {
  if(product.price &gt; 30){
    product.price = product.price / 2;
    return product;
  }
  else {
    return product;
  }
});

console.log(saleProducts, products);</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 4 與 3 做比較

// map method
const prices = &#91;20, 10, 30, 25, 15, 40, 80, 5];

// const salePrices = prices.map(price =&gt; price / 2);
// console.log(salePrices);

const products = &#91;
  {name: 'gold star', price: 20},
  {name: 'mushroom', price: 40},
  {name: 'green shells', price: 30},
  {name: 'banana skin', price: 10},
  {name: 'red shells', price: 50}
];

const saleProducts = products.map((product) =&gt; {
  if(product.price &gt; 30){
    return {name: product.name, price: product.price / 2};
  }
  else {
    return product;
  }
});

console.log(saleProducts, products);</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 5 縮寫

// map method
const prices = &#91;20, 10, 30, 25, 15, 40, 80, 5];

// const salePrices = prices.map(price =&gt; price / 2);
// console.log(salePrices);

const products = &#91;
  {name: 'gold star', price: 20},
  {name: 'mushroom', price: 40},
  {name: 'green shells', price: 30},
  {name: 'banana skin', price: 10},
  {name: 'red shells', price: 50}
];

const saleProducts = products.map(product =&gt; {
  if(product.price &gt; 30){
    return {name: product.name, price: product.price / 2};
  }
  else {
    return product;
  }
});

console.log(saleProducts, products);</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Reduce Method</h3>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;title&gt;Modern JavaScript&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

    &lt;h1&gt;Array Methods&lt;/h1&gt;
    
    &lt;script src="sandbox.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 1

// reduce method
const scores = &#91;10, 20, 60, 40, 70, 90, 30];

const result = scores.reduce((acc, curr) =&gt; {
  if(curr &gt; 50){
    acc++;
  }
  return acc;
}, 0);

console.log(result);</code></pre>



<pre class="wp-block-code"><code>// Google Console - 1
   3
&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 2

// reduce method
// const scores = &#91;10, 20, 60, 40, 70, 90, 30];

// const result = scores.reduce((acc, curr) =&gt; {
//   if(curr &gt; 50){
//     acc++;
//   }
//   return acc;
// }, 0);

// console.log(result);

const scores = &#91;
  {player: 'mario', score: 50},
  {player: 'yoshi', score: 30},
  {player: 'mario', score: 70},
  {player: 'crystal', score: 60},
  {player: 'mario', score: 50},
  {player: 'yoshi', score: 30},
  {player: 'mario', score: 70},
  {player: 'crystal', score: 60},
  {player: 'mario', score: 90},
  {player: 'yoshi', score: 30},
  {player: 'mario', score: 30},
  {player: 'crystal', score: 60},
  {player: 'mario', score: 50},
  {player: 'yoshi', score: 30},
  {player: 'mario', score: 80},
  {player: 'crystal', score: 60}
];

const marioTotal = scores.reduce((acc, curr) =&gt; {
  if(curr.player === 'mario'){
    acc += curr.score;
  }
  return acc;
}, 0);

console.log(marioTotal);
</code></pre>



<pre class="wp-block-code"><code>// Google Console - 2
   490
&gt;</code></pre>



<h4>補充 MDN 文件</h4>



<ul><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce" target="_blank" rel="noreferrer noopener">Array.prototype.reduce()</a></li></ul>



<h3>Find Method</h3>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;title&gt;Modern JavaScript&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

    &lt;h1&gt;Array Methods&lt;/h1&gt;
    
    &lt;script src="sandbox.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 1

// find method
const scores = &#91;10, 5, 0, 40, 30, 10, 90, 70];

const firstHighScore = scores.find((score) =&gt; {
  return score &gt; 50;
});

console.log(firstHighScore);</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 2 縮寫

// find method
const scores = &#91;10, 5, 0, 40, 30, 10, 90, 70];

const firstHighScore = scores.find(score =&gt; score &gt; 50);

console.log(firstHighScore);</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Sort Method (排序方法)</h3>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;title&gt;Modern JavaScript&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

    &lt;h1&gt;Array Methods&lt;/h1&gt;
    
    &lt;script src="sandbox.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 1

// example 1 - sorting strings
const names = &#91;'mario', 'shaun', 'chun-li', 'yoshi', 'luigi'];

// names.sort();
// names.reverse();
// console.log(names);


// example 2 - sorting numbers
const scores = &#91;10, 50, 20, 5, 35, 70, 45];

// scores.sort();
// scores.reverse();
// console.log(scores);



// example 3 - sorting objects
const players = &#91;
  {name: 'mario', score: 20},
  {name: 'luigi', score: 10},
  {name: 'chun-li', score: 50},
  {name: 'yoshi', score: 30},
  {name: 'shaun', score: 70}
];

players.sort((a,b) =&gt; {
  if(a.score &gt; b.score){
    return -1;
  } else if (b.score &gt; a.score){
    return 1;
  } else {
    return 0;
  }
});

players.sort((a,b) =&gt; {
  return b.score - a.score;
});

console.log(players);</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 2 縮寫

// example 1 - sorting strings
const names = &#91;'mario', 'shaun', 'chun-li', 'yoshi', 'luigi'];

// names.sort();
// names.reverse();
// console.log(names);


// example 2 - sorting numbers
const scores = &#91;10, 50, 20, 5, 35, 70, 45];

// scores.sort();
// scores.reverse();
// console.log(scores);



// example 3 - sorting objects
const players = &#91;
  {name: 'mario', score: 20},
  {name: 'luigi', score: 10},
  {name: 'chun-li', score: 50},
  {name: 'yoshi', score: 30},
  {name: 'shaun', score: 70}
];

players.sort((a,b) =&gt; {
  if(a.score &gt; b.score){
    return -1;
  } else if (b.score &gt; a.score){
    return 1;
  } else {
    return 0;
  }
});

players.sort((a,b) =&gt; b.score - a.score);

console.log(players);</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 3

// example 1 - sorting strings
const names = &#91;'mario', 'shaun', 'chun-li', 'yoshi', 'luigi'];

// names.sort();
// names.reverse();
// console.log(names);


// example 2 - sorting numbers
const scores = &#91;10, 50, 20, 5, 35, 70, 45];

// scores.sort();
// scores.reverse();
// console.log(scores);



// example 3 - sorting objects
const players = &#91;
  {name: 'mario', score: 20},
  {name: 'luigi', score: 10},
  {name: 'chun-li', score: 50},
  {name: 'yoshi', score: 30},
  {name: 'shaun', score: 70}
];

// players.sort((a,b) =&gt; {
//   if(a.score &gt; b.score){
//     return -1;
//   } else if (b.score &gt; a.score){
//     return 1;
//   } else {
//     return 0;
//   }
// });

players.sort((a,b) =&gt; b.score - a.score);

console.log(players);</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 4

// example 1 - sorting strings
const names = &#91;'mario', 'shaun', 'chun-li', 'yoshi', 'luigi'];

// names.sort();
// names.reverse();
// console.log(names);


// example 2 - sorting numbers
const scores = &#91;10, 50, 20, 5, 35, 70, 45];

// scores.sort();
// scores.reverse();
// console.log(scores);

scores.sort((a,b) =&gt; a - b);
console.log(scores);

// example 3 - sorting objects
const players = &#91;
  {name: 'mario', score: 20},
  {name: 'luigi', score: 10},
  {name: 'chun-li', score: 50},
  {name: 'yoshi', score: 30},
  {name: 'shaun', score: 70}
];

// players.sort((a,b) =&gt; {
//   if(a.score &gt; b.score){
//     return -1;
//   } else if (b.score &gt; a.score){
//     return 1;
//   } else {
//     return 0;
//   }
// });

players.sort((a,b) =&gt; b.score - a.score);

console.log(players);</code></pre>



<pre class="wp-block-code"><code>// Google Console - 4
   (7) &#91;5, 10, 20, 35, 45, 50, 70]
   (5) &#91;{...}, {...}, {...}, {...}, {...}
     0: {name: 'shaun', score: 70}
     1: {name: 'chun-li', score: 50}
     2: {name: 'yoshi', score: 30}
     3: {name: 'mario', score: 20}
     4: {name: 'luigi', score: 10}
     length: 5
     &#91;&#91;Prototype]]: Array(0)
&gt;</code></pre>



<h4 class="has-background" style="background-color:#ff6663">MDN 文件</h4>



<ul><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/sort" target="_blank" rel="noreferrer noopener">Array.prototype.sort()</a></li></ul>



<h3 class="has-background" style="background-color:#ff6663">Chaining Array Methods</h3>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;title&gt;Modern JavaScript&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

    &lt;h1&gt;Array Methods&lt;/h1&gt;
    
    &lt;script src="sandbox.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 1

const products = &#91;
  {name: 'gold star', price: 30},
  {name: 'green shell', price: 10},
  {name: 'red shell', price: 40},
  {name: 'banana skin', price: 5},
  {name: 'mushroom', price: 50}
];

const filtered = products.filter(product =&gt; product.price &gt; 20);

const promos = filtered.map(product =&gt; {
  return `the ${product.name} is ${product.price / 2} pounds`;
});

console.log(promos);</code></pre>



<pre class="wp-block-code"><code>// sandbox.js - 2

const products = &#91;
  {name: 'gold star', price: 30},
  {name: 'green shell', price: 10},
  {name: 'red shell', price: 40},
  {name: 'banana skin', price: 5},
  {name: 'mushroom', price: 50}
];

// const filtered = products.filter(product =&gt; product.price &gt; 20);

// const promos = filtered.map(product =&gt; {
//   return `the ${product.name} is ${product.price / 2} pounds`;
// });

const promos = products
  .filter(product =&gt; product.price &gt; 20)
  .map(product =&gt; `the ${product.name} is ${product.price / 2} pounds`);

console.log(promos);</code></pre>



<pre class="wp-block-code"><code>// Google Console - 2
   (3) &#91;'the gold star is 15 pounds', 'the red shell is 20 pounds', 'the mushroom is 25 pounds']
&gt;</code></pre>



<h2 class="has-background" style="background-color:#ff6663">Project – Todo List (待辦清單)</h2>



<h3>Project Preview and Setup</h3>



<h4>操作步驟</h4>



<ul><li>新增專案資料夾 todos</li><li>新增 style.css、app.js 檔案</li><li>新增 index.html 檔案、載入 CSS、JS、Bootstrap、Font Awesome</li></ul>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;link rel="stylesheet" href="https://pro.fontawesome.com/releases/v5.10.0/css/all.css" integrity="sha384-AYmEC3Yw5cVb3ZcuHtOA93w35dYTsvhLPVnYs9eStHfGJvOvKxVfELGroGkvsg+p" crossorigin="anonymous"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css" integrity="sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn" crossorigin="anonymous"&gt;
  &lt;link rel="stylesheet" href="style.css"&gt;
  &lt;title&gt;Todos&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;script src="app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<h3>HTML &amp; CSS Template</h3>



<h4>資源</h4>



<ul><li><a rel="noreferrer noopener" href="https://github.com/iamshaunjp/modern-javascript/tree/lesson-78" target="_blank">GitHub files for this lesson (HTML template)</a></li></ul>



<h4>操作步驟</h4>



<ul><li>index.html 程式碼撰寫</li><li>style.css 程式碼撰寫</li></ul>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;link rel="stylesheet" href="https://pro.fontawesome.com/releases/v5.10.0/css/all.css"&gt;
  &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css"&gt;
  &lt;link rel="stylesheet" href="style.css"&gt;
  &lt;title&gt;Todos&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  
  &lt;div class="container"&gt;

    &lt;header class="text-center text-light my-4"&gt;
      &lt;h1 class="mb-4"&gt;Todo List&lt;/h1&gt;
      &lt;form class="search"&gt;
        &lt;input class="form-control m-auto" type="text" name="search" placeholder="search todos"&gt;
      &lt;/form&gt;
    &lt;/header&gt;

    &lt;ul class="list-group todos mx-auto text-light"&gt;
      &lt;li class="list-group-item d-flex justify-content-between align-items-center"&gt;
        &lt;span&gt;play mariokart&lt;/span&gt;
        &lt;i class="far fa-trash-alt delete"&gt;&lt;/i&gt;
      &lt;/li&gt;
      &lt;li class="list-group-item d-flex justify-content-between align-items-center"&gt;
        &lt;span&gt;defeat ganon in zelda&lt;/span&gt;
        &lt;i class="far fa-trash-alt delete"&gt;&lt;/i&gt;
      &lt;/li&gt;
      &lt;li class="list-group-item d-flex justify-content-between align-items-center"&gt;
        &lt;span&gt;make a veggie pie&lt;/span&gt;
        &lt;i class="far fa-trash-alt delete"&gt;&lt;/i&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;form class="add text-center my-4"&gt;
      &lt;label class="text-light"&gt;Add a new todo...&lt;/label&gt;
      &lt;input class="form-control m-auto" type="text" name="add"&gt;
    &lt;/form&gt;

  &lt;/div&gt;

  &lt;script src="app.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// style.css

body{
  background: #352f5b;
}
.container{
  max-width: 400px;
}
input&#91;type=text],
input&#91;type=text]:focus{
  color: #fff;
  border: none;
  background: rgba(0,0,0,0.2);
  max-width: 400px;
}
.todos li{
  background: #423a6f;
}
.delete{
  cursor: pointer;
}</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Adding Todos</h3>



<pre class="wp-block-code"><code>// app.js

const addForm = document.querySelector('.add');
const list = document.querySelector('.todos');

const generateTemplate = todo =&gt; {

  const html = `
    &lt;li class="list-group-item d-flex justify-content-between align-items-center"&gt;
      &lt;span&gt;${todo}&lt;/span&gt;
      &lt;i class="far fa-trash-alt delete"&gt;&lt;/i&gt;
    &lt;/li&gt;
  `;

  list.innerHTML += html;

}

addForm.addEventListener('submit', e =&gt; {

  e.preventDefault();
  const todo = addForm.add.value.trim();
  // console.log(todo);

  if(todo.length){
    generateTemplate(todo);
    addForm.reset();
  }

});</code></pre>



<h4>Todo text overflowing outside the list</h4>



<p>解決方式有兩種</p>



<ul><li>word-wrap: break-word;</li><li>word-break: break-all;</li></ul>



<pre class="wp-block-code"><code>// style.css - word-break: break-all;

body{
  background: #352f5b;
}
.container{
  max-width: 400px;
}
input&#91;type=text],
input&#91;type=text]:focus{
  color: #fff;
  border: none;
  background: rgba(0,0,0,0.2);
  max-width: 400px;
}
.todos li{
  background: #423a6f;
}
.delete{
  cursor: pointer;
}

/* todo text overflowing outside the list */
.todos li span{
  word-break: break-all;
}</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Deleting Todos</h3>



<pre class="wp-block-code"><code>// app.js

const addForm = document.querySelector('.add');
const list = document.querySelector('.todos');

const generateTemplate = todo =&gt; {

  const html = `
    &lt;li class="list-group-item d-flex justify-content-between align-items-center"&gt;
      &lt;span&gt;${todo}&lt;/span&gt;
      &lt;i class="far fa-trash-alt delete"&gt;&lt;/i&gt;
    &lt;/li&gt;
  `;

  list.innerHTML += html;

}

addForm.addEventListener('submit', e =&gt; {

  e.preventDefault();
  const todo = addForm.add.value.trim();
  // console.log(todo);

  if(todo.length){
    generateTemplate(todo);
    addForm.reset();
  }

});

// delete todos
list.addEventListener('click', e =&gt; {

  if(e.target.classList.contains('delete')){
    e.target.parentElement.remove();
  }

});</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Searching &amp; Filtering Todos</h3>



<p>需重複觀看、練習。</p>



<pre class="wp-block-code"><code>// app.js

const addForm = document.querySelector('.add');
const list = document.querySelector('.todos');
const search = document.querySelector('.search input');

const generateTemplate = todo =&gt; {
  const html = `
    &lt;li class="list-group-item d-flex justify-content-between align-items-center"&gt;
      &lt;span&gt;${todo}&lt;/span&gt;
      &lt;i class="far fa-trash-alt delete"&gt;&lt;/i&gt;
    &lt;/li&gt;
  `;
  list.innerHTML += html;

}

// add todos
addForm.addEventListener('submit', e =&gt; {
  e.preventDefault();
  const todo = addForm.add.value.trim();

  if(todo.length){
    generateTemplate(todo);
    addForm.reset();
  }
});

// delete todos
list.addEventListener('click', e =&gt; {
  if(e.target.classList.contains('delete')){
    e.target.parentElement.remove();
  }
});

const filterTodos = (term) =&gt; {
  Array.from(list.children)
    .filter((todo) =&gt; !todo.textContent.toLowerCase().includes(term))
    .forEach((todo) =&gt; todo.classList.add('filtered'));

  Array.from(list.children)
    .filter((todo) =&gt; todo.textContent.toLowerCase().includes(term))
    .forEach((todo) =&gt; todo.classList.remove('filtered'));
};

// keyup event
search.addEventListener('keyup', () =&gt; {
  const term = search.value.trim().toLowerCase();
  filterTodos(term);
});</code></pre>



<pre class="wp-block-code"><code>// style.css

body{
  background: #352f5b;
}
.container{
  max-width: 400px;
}
input&#91;type=text],
input&#91;type=text]:focus{
  color: #fff;
  border: none;
  background: rgba(0,0,0,0.2);
  max-width: 400px;
}
.todos li{
  background: #423a6f;
}
.delete{
  cursor: pointer;
}
.filtered{
  display: none !important;
}

/* todo text overflowing outside the list */
.todos li span{
  word-break: break-all;
}</code></pre>



<h2>Dates &amp; Times</h2>



<h3>Dates &amp; Times in JavaScript</h3>



<h4>JavaScript Data Types</h4>



<figure class="wp-block-table"><table><tbody><tr><td>Object</td><td>Arrays, Object Literals, Functions,&nbsp;<strong>Dates</strong>&nbsp;etc</td></tr></tbody></table></figure>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;title&gt;Modern JavaScript&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

    &lt;h1&gt;Dates &amp; Times&lt;/h1&gt;
    
    &lt;script src="sandbox.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js

// dates &amp; times
const now = new Date();

console.log(now);
console.log(typeof now);

// year, months, day, times
console.log('getFullYear:', now.getFullYear());
console.log('getMonth:', now.getMonth());
console.log('getDate:', now.getDate());
console.log('getDay:', now.getDay());
console.log('getHours:', now.getHours());
console.log('getMinutes:', now.getMinutes());
console.log('getSeconds:', now.getSeconds());

// timestamps
console.log('timestamp:', now.getTime());

// date strings
console.log(now.toDateString());
console.log(now.toTimeString());
console.log(now.toLocaleString());</code></pre>



<h3>Timestamps &amp; Comparisons (時間戳記 &amp; 比較)</h3>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;title&gt;Modern JavaScript&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

    &lt;h1&gt;Dates &amp; Times&lt;/h1&gt;
    
    &lt;script src="sandbox.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js

// timestamps

const before = new Date('February 1 2019 7:30:59');
const now = new Date();

// console.log(now.getTime(), before.getTime());

const diff = now.getTime() - before.getTime();
console.log(diff);

const mins = Math.round(diff / 1000 / 60);
const hours = Math.round(mins / 60);
const days = Math.round(hours / 24);

console.log(mins, hours, days);

console.log(`the blog was written ${days} days ago`);

// converting timestamps into date objects
const timestamp = 1675938474990;
console.log(new Date(timestamp));</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Building a Digital Clock</h3>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;title&gt;Modern JavaScript&lt;/title&gt;
    &lt;style&gt;
        body{
            background: #333;
        }
        .clock{
            font-size: 4em;
            text-align: center;
            margin: 200px auto;
            color: yellow;
            font-family: arial;
        }
        .clock span{
            padding: 20px;
            background: #444;
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

    &lt;div class="clock"&gt;&lt;/div&gt;
    
    &lt;script src="sandbox.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js

const clock = document.querySelector('.clock');

const tick = () =&gt; {

  const now = new Date();

  const h = now.getHours();
  const m = now.getMinutes();
  const s = now.getSeconds();

  // console.log(h, m, s);
  const html = `
    &lt;span&gt;${h}&lt;/span&gt; :
    &lt;span&gt;${m}&lt;/span&gt; :
    &lt;span&gt;${s}&lt;/span&gt;
  `;

  clock.innerHTML = html;

};

setInterval(tick, 1000);</code></pre>



<h3>Date-fns Library</h3>



<h4>資源</h4>



<ul><li><a href="https://date-fns.org/" target="_blank" rel="noreferrer noopener">Date-fns Library Website</a></li></ul>



<h4>Date-fns Library 文件使用</h4>



<ul><li>isAfter</li><li>isToday</li><li>format</li></ul>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;title&gt;Modern JavaScript&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

    &lt;div class="clock"&gt;&lt;/div&gt;
    
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/date-fns/1.9.0/date_fns.min.js"&gt;&lt;/script&gt;
    &lt;script src="sandbox.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js

const now = new Date();

// console.log(dateFns.isToday(now));

// formatting options
console.log(dateFns.format(now, 'YYYY'));
console.log(dateFns.format(now, 'MMMM'));
console.log(dateFns.format(now, 'MMM'));
console.log(dateFns.format(now, 'dddd'));
console.log(dateFns.format(now, 'Do'));
console.log(dateFns.format(now, 'dddd, Do, MMMM, YYYY'));
console.log(dateFns.format(now, 'dddd Do MMMM YYYY'));

// comparing dates
const before = new Date('February 1 2019 12:00:00');

console.log(dateFns.distanceInWords(now, before, {addSuffix: true}));</code></pre>



<h2 class="has-background" style="background-color:#ff6663">Async JavaScript (非同步)</h2>



<p>這個章節重要、比較困難，需要重複觀看、練習。</p>



<h3>What is Asynchronous JavaScript?</h3>



<h4>Async JavaScript</h4>



<ul><li>Governs how we perform tasks which take some time to complete<br>(e.g. Getting data from a database)</li></ul>



<p>Start something now and finish it later</p>



<h4>Synchronous JavaScript (同步)</h4>



<ul><li>JavaScript can run ONE statement at a time</li></ul>



<pre class="wp-block-code"><code>console.log('line one');
console.log('line two');
console.log('line three');</code></pre>



<h4>Single Threaded</h4>



<figure class="wp-block-image size-full"><img loading="lazy" width="1183" height="757" src="/wordpress_blog/wp-content/uploads/2022/04/single-threaded.png" alt="" class="wp-image-493"/><figcaption>Single Threaded</figcaption></figure>



<h4>Async to the Rescue…</h4>



<p>Start something now &amp; finish it later</p>



<figure class="wp-block-image size-full"><img loading="lazy" width="1283" height="829" src="/wordpress_blog/wp-content/uploads/2022/04/async-to-the-rescue.png" alt="" class="wp-image-494"/><figcaption>Async to the rescue</figcaption></figure>



<h3>Async Code in Action</h3>



<pre class="wp-block-code"><code>// index.html

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;link rel="stylesheet" href="style.css"&gt;
    &lt;title&gt;Modern JavaScript&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

    
    
    &lt;script src="sandbox.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>



<pre class="wp-block-code"><code>// sandbox.js

console.log(1);
console.log(2);

setTimeout(() =&gt; {
  console.log('callback function fired');
}, 2000);

console.log(3);
console.log(4);</code></pre>



<pre class="wp-block-code"><code>// Google Console
   1
   2
   3
   4
   callback function fired
&gt;</code></pre>



<h3>What are HTTP Requests?</h3>



<h4>HTTP Requests</h4>



<ul><li>Make HTTP requests to get data from another server</li><li>We make these requests to API endpoints</li></ul>



<h4>API Endpoints</h4>



<ul><li>Example API endpoint:<br>http://www.musicapi.com/artist/moby</li></ul>



<figure class="wp-block-image size-full"><img loading="lazy" width="1536" height="465" src="/wordpress_blog/wp-content/uploads/2022/04/api-endpoints.png" alt="" class="wp-image-496"/><figcaption>API Endpoints</figcaption></figure>



<h4>JSONPlaceholder</h4>



<ul><li><a href="https://jsonplaceholder.typicode.com/" target="_blank" rel="noreferrer noopener">JSONPlaceholder 連結</a></li></ul>



<h4>Google Network</h4>



<ul><li>Name – 1</li><li>Headers</li><li>Response</li></ul>



<h3>Making HTTP Requests (XHR)</h3>



<pre class="wp-block-code"><code>// sandbox.js

const request = new XMLHttpRequest();

request.addEventListener('readystatechange', () =&gt; {
  // console.log(request, request.readyState);
  if(request.readyState === 4){
    console.log(request.responseText);
  }
});

request.open('GET', 'https://jsonplaceholder.typicode.com/todos/');
request.send();</code></pre>



<h4>MDN Web Docs</h4>



<ul><li><a rel="noreferrer noopener" href="https://developer.mozilla.org/zh-TW/docs/Web/API/XMLHttpRequest/readyState" target="_blank">XMLHttpRequest.readyState MDN 文件</a></li><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/HTTP/Status" target="_blank" rel="noreferrer noopener">HTTP 狀態碼</a></li></ul>



<h3>Response Status</h3>



<ul><li>404</li><li>200</li></ul>



<pre class="wp-block-code"><code>// sandbox.js

const request = new XMLHttpRequest();

request.addEventListener('readystatechange', () =&gt; {
  // console.log(request, request.readyState);
  if(request.readyState === 4 &amp;&amp; request.status === 200){
    console.log(request, request.responseText);
  } else if(request.readyState === 4){
    console.log('could not fetch the data');
  }
});

request.open('GET', 'https://jsonplaceholder.typicode.com/todoss/');
request.send();</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Callback Functions (回呼函式)</h3>



<pre class="wp-block-code"><code>// sandbox.js

const getTodos = (callback) =&gt; {
  const request = new XMLHttpRequest();

  request.addEventListener('readystatechange', () =&gt; {
    // console.log(request, request.readyState);
    if(request.readyState === 4 &amp;&amp; request.status === 200){
      // console.log(request, request.responseText);
      callback(undefined, request.responseText);
    } else if(request.readyState === 4){
      // console.log('could not fetch the data');
      callback('could not fetch data', undefined);
    }
  });

  request.open('GET', 'https://jsonplaceholder.typicode.com/todos/');
  request.send();
};

console.log(1);
console.log(2);

getTodos((err, data) =&gt; {
  console.log('callback fired');
  // console.log(err, data);
  if(err){
    console.log(err);
  } else {
    console.log(data);
  }
});

console.log(3);
console.log(4);</code></pre>



<h3>JSON Data</h3>



<pre class="wp-block-code"><code>// sandbox.js

const getTodos = (callback) =&gt; {
  const request = new XMLHttpRequest();

  request.addEventListener('readystatechange', () =&gt; {
    if(request.readyState === 4 &amp;&amp; request.status === 200){
      const data = JSON.parse(request.responseText);
      callback(undefined, data);
    } else if(request.readyState === 4){
      callback('could not fetch data', undefined);
    }
  });

  request.open('GET', 'todos.json');
  request.send();
};

getTodos((err, data) =&gt; {
  console.log('callback fired');
  if(err){
    console.log(err);
  } else {
    console.log(data);
  }
});
</code></pre>



<pre class="wp-block-code"><code>// todos.json

&#91;
  { "text": "play mariokart", "author": "Shaun" },
  { "text": "buy some bread", "author": "Mario" },
  { "text": "do the plumming", "author": "Luigi" }
]</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Callback Hell</h3>



<pre class="wp-block-code"><code>// sandbox.js

const getTodos = (resource, callback) =&gt; {
  const request = new XMLHttpRequest();

  request.addEventListener('readystatechange', () =&gt; {
    if(request.readyState === 4 &amp;&amp; request.status === 200){
      const data = JSON.parse(request.responseText);
      callback(undefined, data);
    } else if(request.readyState === 4){
      callback('could not fetch data', undefined);
    }
  });

  request.open('GET', resource);
  request.send();
};

getTodos('todos/luigi.json', (err, data) =&gt; {
  console.log(data);
  getTodos('todos/mario.json', (err, data) =&gt; {
    console.log(data);
    getTodos('todos/shaun.json', (err, data) =&gt; {
      console.log(data);
    })
  })
});
</code></pre>



<pre class="wp-block-code"><code>// todos/luigi.json

&#91;
  { "text": "do the plumming", "author": "Luigi" },
  { "text": "avoid mario", "author": "Luigi" },
  { "text": "go kart racing", "author": "Luigi" }
]</code></pre>



<pre class="wp-block-code"><code>// todos/mario.json

&#91;
  { "text": "make fun of luigi", "author": "Mario" },
  { "text": "rescue peach (again)", "author": "Mario" },
  { "text": "go kart racing", "author": "Mario" }
]</code></pre>



<pre class="wp-block-code"><code>// todos/shaun.json

&#91;
  { "text": "play mariokart", "author": "Shaun" },
  { "text": "buy some bread", "author": "Shaun" },
  { "text": "take a nap", "author": "Shaun" }
]</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Promise Basics</h3>



<pre class="wp-block-code"><code>// sandbox.js

const getTodos = (resource) =&gt; {
  
  return new Promise((resolve, reject) =&gt; {
    const request = new XMLHttpRequest();

    request.addEventListener('readystatechange', () =&gt; {
      if(request.readyState === 4 &amp;&amp; request.status === 200){
        const data = JSON.parse(request.responseText);
        resolve(data);
      } else if(request.readyState === 4){
        reject('error getting resource');
      }
    });

    request.open('GET', resource);
    request.send();
  });

};

getTodos('todos/luigi.json').then(data =&gt; {
  console.log('promise resolved:', data);
}).catch(err =&gt; {
  console.log('promise rejected:', err);
});

// promise example

// const getSomething = () =&gt; {

//   return new Promise((resolve, reject) =&gt; {
//     // fetch something
//     resolve('some data');
//     // reject('some error');
//   });

// };

// getSomething().then((data) =&gt; {
//   console.log(data);
// }, (err) =&gt; {
//   console.log(err);
// });

// getSomething().then(data =&gt; {
//   console.log(data);
// }).catch(err =&gt; {
//   console.log(err);
// });</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Chaining Promises</h3>



<pre class="wp-block-code"><code>// sandbox.js

const getTodos = (resource) =&gt; {
  
  return new Promise((resolve, reject) =&gt; {
    const request = new XMLHttpRequest();

    request.addEventListener('readystatechange', () =&gt; {
      if(request.readyState === 4 &amp;&amp; request.status === 200){
        const data = JSON.parse(request.responseText);
        resolve(data);
      } else if(request.readyState === 4){
        reject('error getting resource');
      }
    });

    request.open('GET', resource);
    request.send();
  });

};

getTodos('todos/luigi.json').then(data =&gt; {
  console.log('promise 1 resolved:', data);
  return getTodos('todos/mario.json');
}).then(data =&gt; {
  console.log('promise 2 resolved:', data);
  return getTodos('todos/shauns.json');
}).then(data =&gt; {
  console.log('promise 3 resolved:', data);
}).catch(err =&gt; {
  console.log('promise rejected:', err);
});</code></pre>



<h3 class="has-background" style="background-color:#ff6663">The Fetch API</h3>



<pre class="wp-block-code"><code>// sandbox.js

// fetch api

fetch('todos/luigi.json').then((response) =&gt; {
  console.log('resolved', response);
  return response.json();
}).then(data =&gt; {
  console.log(data);
}).catch((err) =&gt; {
  console.log('rejected', err);
});</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Async &amp; Await</h3>



<pre class="wp-block-code"><code>// sandbox.js

// async &amp; await

const getTodos = async () =&gt; {

  const response = await fetch('todos/luigi.json');
  const data = await response.json();
  
  return data;

};

console.log(1);
console.log(2);

getTodos()
  .then(data =&gt; console.log('resolved:', data));

console.log(3);
console.log(4);

// fetch('todos/luigi.json').then((response) =&gt; {
//   console.log('resolved', response);
//   return response.json();
// }).then(data =&gt; {
//   console.log(data);
// }).catch((err) =&gt; {
//   console.log('rejected', err);
// });</code></pre>



<h3 class="has-background" style="background-color:#ff6663">Throwing &amp; Catching Errors</h3>



<pre class="wp-block-code"><code>// sandbox.js

// async &amp; await

const getTodos = async () =&gt; {

  const response = await fetch('todos/luigis.json');

  if(response.status !== 200){
    throw new Error('cannot fetch the data');
  }

  const data = await response.json();
  
  return data;

};

getTodos()
  .then(data =&gt; console.log('resolved:', data))
  .catch(err =&gt; console.log('rejected:', err.message));</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>CSS Grid Tutorial</title>
		<link>/wordpress_blog/css-grid-tutorial/</link>
		
		<dc:creator><![CDATA[gee.hsu]]></dc:creator>
		<pubDate>Sun, 16 Jan 2022 02:59:00 +0000</pubDate>
				<category><![CDATA[The Net Ninja]]></category>
		<guid isPermaLink="false">/wordpress_blog/?p=484</guid>

					<description><![CDATA[#1 – Why Use CSS Grid? In this f [&#8230;]]]></description>
										<content:encoded><![CDATA[
<h2>#1 – Why Use CSS Grid?</h2>



<p>In this first CSS grid tutorial, I’ll show you why CSS grid is so awesome, and compare it to other layout techniques such as floats and flexbox.</p>



<h3>COURSE LINKS</h3>



<ul><li><a href="https://atom.io/" target="_blank" rel="noreferrer noopener">Atom editor</a></li><li><a href="https://github.com/iamshaunjp/css-grid-playlist" target="_blank" rel="noreferrer noopener">GitHub Repo</a></li></ul>



<h4>floats、flex、grid 範例程式碼</h4>



<pre class="wp-block-code"><code>// floats.html

&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
	&lt;title&gt;Using Floats&lt;/title&gt;
	&lt;style&gt;
		body{
			color: #fff;
			font-family: 'Nunito Semibold';
			text-align: center;
			line-height: 3em;
		}
		#content{
			max-width: 960px;
			margin: 0 auto;
		}
		header{
			background: #3bbced;
			height: 50px;
		}
		main{
			float: right;
			width: 60%;
			background: #e82b69;
			height: 400px;
		}
		aside{
			background: #fac24a;
			height: 200px;
		}
		nav{
			background: #8ae348;
			height: 200px;
		}
		footer{
			background: #a56dda;
			height: 100px;
		}
		#sidebar{
			float: left;
			width: 40%;
		}
		#middle:after{
			content: '';
			display: block;
			clear: both;
		}
	&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

	&lt;div id="content"&gt;
		
		&lt;header&gt;Header&lt;/header&gt;

		&lt;div id="middle"&gt;&lt;!-- extra markup --&gt;

			&lt;main&gt;Main&lt;/main&gt;

			&lt;div id="sidebar"&gt;&lt;!-- extra markup --&gt;

				&lt;aside&gt;Aside&lt;/aside&gt;

				&lt;nav&gt;Nav&lt;/nav&gt;

			&lt;/div&gt;

		&lt;/div&gt;

		&lt;footer&gt;Footer&lt;/footer&gt;

	&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;
</code></pre>



<pre class="wp-block-code"><code>// flex.html

&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
	&lt;title&gt;Using Flexbox&lt;/title&gt;
	&lt;style&gt;
		body{
			color: #fff;
			font-family: 'Nunito Semibold';
			text-align: center;
			line-height: 3em;
		}
		#content{
			max-width: 960px;
			margin: 0 auto;
		}
		#middle{
			display: flex;
		}
		#sidebar{
			flex-grow: 1;
		}
		header{
			background: #3bbced;
			height: 50px;
		}
		main{
			background: #e82b69;
			flex-grow: 2;
		}
		aside{
			background: #fac24a;
			flex-grow: 1;
			height: 200px;
		}
		nav{
			background: #8ae348;
			flex-grow: 1;
			height: 200px;
		}
		footer{
			background: #a56dda;
			height: 100px;
		}
		#middle:after{
			content: '';
			display: block;
			clear: both;
		}
	&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

	&lt;div id="content"&gt;

		&lt;header&gt;Header&lt;/header&gt;

		&lt;div id="middle"&gt;&lt;!-- extra markup --&gt;

			&lt;main&gt;Main&lt;/main&gt;

			&lt;div id="sidebar"&gt;&lt;!-- extra markup --&gt;

				&lt;aside&gt;Aside&lt;/aside&gt;

				&lt;nav&gt;Nav&lt;/nav&gt;

			&lt;/div&gt;

		&lt;/div&gt;

		&lt;footer&gt;Footer&lt;/footer&gt;

	&lt;/div&gt;

&lt;/body&gt;
</code></pre>



<pre class="wp-block-code"><code>// grids.html

&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
	&lt;title&gt;Using CSS Grid&lt;/title&gt;
	&lt;style&gt;
		body{
			color: #fff;
			font-family: 'Nunito Semibold';
			text-align: center;
		}
		#content{
			display: grid;
			grid-template-columns: 1fr 2fr;
			grid-auto-rows: minmax(150px, auto);
			max-width: 960px;
			margin: 0 auto;
		}
		#content &gt; *{
			padding: 10px;
		}
		header{
			grid-column: span 3;
			background: #3bbced;
		}
		main{
			grid-column: 2 / 4;
			grid-row: 2 / 4;
			background: #e82b69;
		}
		aside{
			grid-column: 1 / 2;
			background: #fac24a;
		}
		nav{
			grid-column: 1 / 2;
			background: #8ae348;
		}
		footer{
			grid-column: span 3;
			background: #a56dda;
		}
	&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

	&lt;div id="content"&gt;

		&lt;header&gt;Header&lt;/header&gt;

		&lt;main&gt;Main&lt;/main&gt;

		&lt;aside&gt;Aside&lt;/aside&gt;

		&lt;nav&gt;Nav&lt;/nav&gt;

		&lt;footer&gt;Footer&lt;/footer&gt;

	&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;
</code></pre>



<h4>CSS Grid</h4>



<figure class="wp-block-gallery has-nested-images columns-1 is-cropped">
<figure class="wp-block-image size-large"><img loading="lazy" width="1536" height="731" data-id="485"  src="/wordpress_blog/wp-content/uploads/2022/04/grid-desktop-mobile.jpg" alt="" class="wp-image-485"/><figcaption>Grid Desktop Mobile</figcaption></figure>



<figure class="wp-block-image size-large"><img loading="lazy" width="1102" height="1035" data-id="486"  src="/wordpress_blog/wp-content/uploads/2022/04/grid-webpage.jpg" alt="" class="wp-image-486"/><figcaption>Grid Webpage</figcaption></figure>
</figure>



<h2>#2 – Columns</h2>



<p>In this CSS grid tutorial, I’ll show you how to work with grid columns – the amount of columns you want in your grid, the width of those columns, and how content is placed onto them.</p>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
	&lt;title&gt;Using CSS Grid&lt;/title&gt;
	&lt;style&gt;
		body{
			color: #fff;
			font-family: 'Nunito Semibold';
			text-align: center;
		}
		#content{
			display: grid;
			/* grid-template-columns: 33.3% 33.3% 33.3%; */
			/* grid-template-columns: 30% 20% 50%; */
			/* grid-template-columns: 1fr 1fr 1fr; */
			/* grid-template-columns: 1fr 2fr 1fr; */
			/* grid-template-columns: repeat(3, 1fr); */
			grid-template-columns: repeat(9, 1fr);
			max-width: 960px;
			margin: 0 auto;
		}
		#content div{
			background: #3bbced;
			padding: 30px;
		}
		#content div:nth-child(even){
			background: #777;
		}
	&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

	&lt;div id="content"&gt;

		&lt;div&gt;1&lt;/div&gt;
		&lt;div&gt;2&lt;/div&gt;
		&lt;div&gt;3&lt;/div&gt;
		&lt;div&gt;4&lt;/div&gt;
		&lt;div&gt;5&lt;/div&gt;
		&lt;div&gt;6&lt;/div&gt;
		&lt;div&gt;7&lt;/div&gt;
		&lt;div&gt;8&lt;/div&gt;
		&lt;div&gt;9&lt;/div&gt;

	&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;
</code></pre>



<h4>格線布局的基本概念</h4>



<ul><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/CSS/CSS_Grid_Layout/Basic_Concepts_of_Grid_Layout" target="_blank" rel="noreferrer noopener">MDN Web Docs 連結</a></li></ul>



<h2>#3 – Rows</h2>



<p>In this CSS grid tutorial I’ll talk about grid rows.</p>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
	&lt;title&gt;Using CSS Grid&lt;/title&gt;
	&lt;style&gt;
		body{
			color: #fff;
			font-family: 'Nunito Semibold';
			text-align: center;
		}
		#content{
			display: grid;
			grid-template-columns: repeat(3, 1fr);
			/* grid-auto-rows: 200px; */
			/* grid-auto-rows: minmax(200px, auto); */
			/* grid-template-rows: 200px 300px 400px 200px; */
			/* grid-template-rows: repeat(3, 200px); */
			/* grid-template-rows: repeat(3, minmax(200px, auto)); */
			grid-template-rows: repeat(10, minmax(200px, auto));
			/* grid-column-gap: 10px; */
			/* column-gap: 10px; */
			/* grid-row-gap: 10px; */
			/* row-gap: 10px; */
			/* grid-gap: 10px; */
			gap: 10px;
			max-width: 960px;
			margin: 0 auto;
		}
		#content div{
			background: #3bbced;
			padding: 30px;
		}
		#content div:nth-child(even){
			background: #777;
		}
	&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

	&lt;div id="content"&gt;

		&lt;div&gt;1&lt;/div&gt;
		&lt;div&gt;2&lt;/div&gt;
		&lt;div&gt;Lorem ipsum dolor, sit amet consectetur adipisicing elit. Praesentium voluptates suscipit temporibus magnam natus et architecto eligendi animi id dolores! Minima, commodi iure voluptatum quibusdam consequuntur dolores tempora sapiente dignissimos repudiandae nam illo rem blanditiis non aspernatur architecto odio, veniam facilis at. Soluta doloribus rem odit sit voluptatem nobis maxime qui eos doloremque? Sequi dolore amet consequuntur iste excepturi reprehenderit.&lt;/div&gt;
		&lt;div&gt;4&lt;/div&gt;
		&lt;div&gt;5&lt;/div&gt;
		&lt;div&gt;6&lt;/div&gt;
		&lt;div&gt;7&lt;/div&gt;
		&lt;div&gt;8&lt;/div&gt;
		&lt;div&gt;9&lt;/div&gt;

	&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;
</code></pre>



<h4>屬性更新說明</h4>



<p>grid-column-gap, grid-row-gap and grid-gap are obsolete and replaced with column-gap, row-gap and gap</p>



<h2>#4 – Grid Lines</h2>



<p>In this CSS grid tutorial I’ll show you how to use CSS grid lines to position elements on a grid wherever you want within the grid, regardless of it’s position inside your HTML markup.</p>



<figure class="wp-block-image size-full"><img loading="lazy" width="1123" height="959" src="/wordpress_blog/wp-content/uploads/2022/04/grid-lines.jpg" alt="" class="wp-image-488"/><figcaption>Grid Lines</figcaption></figure>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
	&lt;title&gt;Using CSS Grid&lt;/title&gt;
	&lt;style&gt;
		body{
			color: #fff;
			font-family: 'Nunito Semibold';
			text-align: center;
		}
		#content{
			display: grid;
			grid-template-columns: repeat(6, 1fr);
			grid-template-rows: repeat(4, minmax(150px, auto));
			gap: 10px;
			max-width: 960px;
			margin: 0 auto;
		}
		#content div{
			background: #3bbced;
			padding: 30px;
		}
		#content div:nth-child(even){
			background: #777;
			padding: 30px;
		}
		.one{
			/* grid-column-start: 1;
			grid-column-end: 3; */
			grid-column: 1 / 3;
		}
		.two{
			grid-column: 3 / 7;
		}
		.three{
			grid-column: 1 / 4;
			grid-row: 2 / 4;
		}
		.four{
			grid-column: 4 / 7;
			grid-row: 2 / 4;
		}
		.five{
			grid-column: 3 / 7;
		}
		.six{
			grid-column: 1 / 3;
			grid-row: 4;
		}
	&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

	&lt;div id="content"&gt;

		&lt;div class="one"&gt;1&lt;/div&gt;
		&lt;div class="two"&gt;2&lt;/div&gt;
		&lt;div class="three"&gt;3&lt;/div&gt;
		&lt;div class="four"&gt;4&lt;/div&gt;
		&lt;div class="five"&gt;5&lt;/div&gt;
		&lt;div class="six"&gt;6&lt;/div&gt;

	&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;
</code></pre>



<h2>#5 – Nested Grids</h2>



<p>In this CSS grid tutorial I’ll show you how we can nest grids within each other. Very simply.</p>



<pre class="wp-block-code"><code>// index.html - 1

&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
	&lt;title&gt;Using CSS Grid&lt;/title&gt;
	&lt;style&gt;
		body{
			color: #fff;
			font-family: 'Nunito Semibold';
			text-align: center;
		}
		#content{
			display: grid;
			grid-template-columns: repeat(3, 1fr);
			gap: 10px;
			max-width: 960px;
			margin: 0 auto;
		}
		#content div{
			background: #3bbced;
			padding: 30px;
		}
		#content div:nth-child(even){
			background: #777;
		}
		.nested{
			display: grid;
			grid-template-columns: 1fr 1fr;
			gap: 10px;
		}
		.nested p{
			border: 1px solid #fff;
			padding: 20px;
			margin: 0;
		}
	&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

	&lt;div id="content"&gt;

		&lt;div&gt;1&lt;/div&gt;
		&lt;div&gt;2&lt;/div&gt;
		&lt;div&gt;3&lt;/div&gt;
		&lt;div class="nested"&gt;
			&lt;p&gt;1&lt;/p&gt;
			&lt;p&gt;2&lt;/p&gt;
			&lt;p&gt;3&lt;/p&gt;
			&lt;p&gt;4&lt;/p&gt;
		&lt;/div&gt;
		&lt;div&gt;5&lt;/div&gt;
		&lt;div&gt;6&lt;/div&gt;

	&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;
</code></pre>



<pre class="wp-block-code"><code>// index.html - 2

&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
	&lt;title&gt;Using CSS Grid&lt;/title&gt;
	&lt;style&gt;
		body{
			color: #fff;
			font-family: 'Nunito Semibold';
			text-align: center;
		}
		#content{
			display: grid;
			grid-template-columns: repeat(3, 1fr);
			gap: 10px;
			max-width: 960px;
			margin: 0 auto;
		}
		#content div{
			background: #3bbced;
			padding: 30px;
		}
		#content div:nth-child(even){
			background: #777;
		}
		.nested{
			display: grid;
			grid-template-columns: 1fr 1fr;
			gap: 10px;
			grid-column: span 3;
		}
		.nested p{
			border: 1px solid #fff;
			padding: 20px;
			margin: 0;
		}
	&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

	&lt;div id="content"&gt;

		&lt;div&gt;1&lt;/div&gt;
		&lt;div&gt;2&lt;/div&gt;
		&lt;div&gt;3&lt;/div&gt;
		&lt;div class="nested"&gt;
			&lt;p&gt;1&lt;/p&gt;
			&lt;p&gt;2&lt;/p&gt;
			&lt;p&gt;3&lt;/p&gt;
			&lt;p&gt;4&lt;/p&gt;
		&lt;/div&gt;
		&lt;div&gt;5&lt;/div&gt;
		&lt;div&gt;6&lt;/div&gt;

	&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;
</code></pre>



<h2>#6 – Aligning &amp; Justifying Items</h2>



<h4>align-items</h4>



<ul><li>start</li><li>end</li><li>stretch</li></ul>



<h4>justify-items</h4>



<ul><li>start</li><li>end</li></ul>



<h4>justify-self</h4>



<ul><li>start</li><li>end</li><li>center</li></ul>



<h4>align-self</h4>



<ul><li>start</li><li>end</li><li>center</li></ul>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
	&lt;title&gt;Using CSS Grid&lt;/title&gt;
	&lt;style&gt;
		body{
			color: #fff;
			font-family: 'Nunito Semibold';
			text-align: center;
		}
		#content{
			display: grid;
			grid-template-columns: repeat(3, 1fr);
			grid-auto-rows: minmax(150px, auto);
			gap: 10px;
			max-width: 960px;
			margin: 0 auto;
			/* align-items: start;
			justify-items: end; */
		}
		#content div{
			background: #3bbced;
			padding: 30px;
		}
		#content div:nth-child(even){
			background: #777;
		}
		.one{
			justify-self: end;
			align-self: end;
		}
		.two{
			justify-self: center;
			align-self: center;
		}
		.three{
			align-self: start;
			justify-self: start;
		}
	&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

	&lt;div id="content"&gt;

		&lt;div class="one"&gt;1&lt;/div&gt;
		&lt;div class="two"&gt;2&lt;/div&gt;
		&lt;div class="three"&gt;3&lt;/div&gt;
		&lt;div class="four"&gt;4&lt;/div&gt;
		&lt;div class="five"&gt;5&lt;/div&gt;
		&lt;div class="six"&gt;6&lt;/div&gt;

	&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;
</code></pre>



<h2 class="has-background" style="background-color:#ff6663">#7 – Create a 12-Column Grid</h2>



<p>In this CSS grid tutorial, I’ll show you how we can create a 12-column grid using the CSS grid properties I’ve shown you so far. I’ll also show you how to create a grid overlay so you can visualize the grid on the page.</p>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
	&lt;title&gt;Using CSS Grid&lt;/title&gt;
	&lt;style&gt;
		body{
			color: #fff;
			font-family: 'Nunito Semibold';
			text-align: center;
		}
		#content{
			display: grid;
			grid-template-columns: repeat(12, 1fr);
			grid-auto-rows: minmax(100px, auto);
			gap: 10px;
			max-width: 960px;
			margin: 0 auto;
			position: relative;
		}
		#content &gt; *{
			background: #3bbced;
			padding: 30px;
		}
		header{
			grid-column: 1 / 13;
		}
		main{
			grid-column: 4 / 13;
			grid-row: 2 / 4;
		}
		aside{
			grid-column: 1 / 4;
		}
		section{
			grid-column: 1 / 13;
			grid-row: 4 / 6;
		}
		nav{
			grid-column: 1 / 4;
		}
		footer{
			grid-column: 1 / 13;
		}
		#grid{
			display: grid;
			position: absolute;
			top: 0;
			left: 0;
			grid-template-columns: repeat(12, 1fr);
			grid-auto-rows: minmax(100%, auto);
			width: 100%;
			height: 100%;
			background: transparent;
			padding: 0;
			display: none;
		}
		#grid p{
			border: 1px solid;
			background: #000;
			margin: 0;
			opacity: 0.2;
		}
		input:checked + #content #grid{
			display: grid;
		}
	&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

	&lt;input type="checkbox"&gt;
	&lt;div id="content"&gt;

		&lt;div id="grid"&gt;
			&lt;p&gt;&lt;/p&gt;
			&lt;p&gt;&lt;/p&gt;
			&lt;p&gt;&lt;/p&gt;
			&lt;p&gt;&lt;/p&gt;
			&lt;p&gt;&lt;/p&gt;
			&lt;p&gt;&lt;/p&gt;
			&lt;p&gt;&lt;/p&gt;
			&lt;p&gt;&lt;/p&gt;
			&lt;p&gt;&lt;/p&gt;
			&lt;p&gt;&lt;/p&gt;
			&lt;p&gt;&lt;/p&gt;
			&lt;p&gt;&lt;/p&gt;
		&lt;/div&gt;

		&lt;header&gt;Header&lt;/header&gt;
		&lt;main&gt;Main&lt;/main&gt;
		&lt;section&gt;Section&lt;/section&gt;
		&lt;aside&gt;Aside&lt;/aside&gt;
		&lt;nav&gt;Nav&lt;/nav&gt;
		&lt;footer&gt;Footer&lt;/footer&gt;

	&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;
</code></pre>



<h2>#8 – Mosaic Layout</h2>



<p>In this CSS grid tutorial I’ll show you how to make a mosaic layout using CSS grid techniques we’ve already learnt.</p>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
	&lt;title&gt;Using CSS Grid&lt;/title&gt;
	&lt;style&gt;
		body{
			color: #fff;
			font-family: 'Nunito Semibold';
			text-align: center;
		}
		#content{
			display: grid;
			grid-template-columns: repeat(6, 1fr);
			grid-auto-rows: minmax(150px, auto);
			gap: 10px;
			max-width: 960px;
			margin: 0 auto;
		}
		#content div{
			background: #333;
			padding: 30px;
		}
		.one{
			grid-column: 1 / 3;
			grid-row: 1 / 5;
		}
		.two{
			grid-column: 3 / 7;
			grid-row: 1 / 3;
		}
		.three{
			grid-column: 3 / 5;
			grid-row: 3 / 5;
		}
		.four{
			grid-column: 5 / 7;
			grid-row: 3 / 7;
		}
		.five{
			grid-column: 1 / 5;
			grid-row: 5 / 7;
		}
		#content{
			transform: rotateZ(45deg)scale(0.7);
		}
	&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

	&lt;div id="content"&gt;

		&lt;div class="one"&gt;1&lt;/div&gt;
		&lt;div class="two"&gt;2&lt;/div&gt;
		&lt;div class="three"&gt;3&lt;/div&gt;
		&lt;div class="four"&gt;4&lt;/div&gt;
		&lt;div class="five"&gt;5&lt;/div&gt;

	&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;
</code></pre>



<h2 class="has-background" style="background-color:#ff6663">#9 – Grid Areas</h2>



<p>In this CSS grid tutorial I want to show you how we can create a grid-like structure using grid areas and the grid-template-areas property.</p>



<pre class="wp-block-code"><code>// index.html - 1

&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
	&lt;title&gt;Using CSS Grid&lt;/title&gt;
	&lt;style&gt;
		body{
			color: #fff;
			font-family: 'Nunito Semibold';
			text-align: center;
		}
		#content{
			display: grid;
			grid-template-columns: repeat(4, 1fr);
			grid-auto-rows: minmax(100px, auto);
			gap: 10px;
			max-width: 960px;
			margin: 0 auto;
			grid-template-areas:
			"header header header header"
			"aside aside main main"
			"nav nav main main"
			"section section section section"
			"section section section section"
			"footer footer footer footer";
		}
		#content &gt; *{
			background: #3bbced;
			padding: 30px;
		}
		header{
			grid-area: header;
		}
		main{
			grid-area: main;
		}
		section{
			grid-area: section;
		}
		aside{
			grid-area: aside;
		}
		nav{
			grid-area: nav;
		}
		footer{
			grid-area: footer;
		}
	&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

	&lt;div id="content"&gt;

		&lt;header&gt;Header&lt;/header&gt;
		&lt;main&gt;Main&lt;/main&gt;
		&lt;section&gt;Section&lt;/section&gt;
		&lt;aside&gt;Aside&lt;/aside&gt;
		&lt;nav&gt;Nav&lt;/nav&gt;
		&lt;footer&gt;Footer&lt;/footer&gt;

	&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;
</code></pre>



<h4>使用 . 產生空白區域</h4>



<pre class="wp-block-code"><code>// index.html - 2

&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
	&lt;title&gt;Using CSS Grid&lt;/title&gt;
	&lt;style&gt;
		body{
			color: #fff;
			font-family: 'Nunito Semibold';
			text-align: center;
		}
		#content{
			display: grid;
			grid-template-columns: repeat(4, 1fr);
			grid-auto-rows: minmax(100px, auto);
			gap: 10px;
			max-width: 960px;
			margin: 0 auto;
			grid-template-areas:
			"header header header header"
			"aside . main main"
			"nav . main main"
			"section section section section"
			"section section section section"
			"footer footer footer footer";
		}
		#content &gt; *{
			background: #3bbced;
			padding: 30px;
		}
		header{
			grid-area: header;
		}
		main{
			grid-area: main;
		}
		section{
			grid-area: section;
		}
		aside{
			grid-area: aside;
		}
		nav{
			grid-area: nav;
		}
		footer{
			grid-area: footer;
		}
	&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

	&lt;div id="content"&gt;

		&lt;header&gt;Header&lt;/header&gt;
		&lt;main&gt;Main&lt;/main&gt;
		&lt;section&gt;Section&lt;/section&gt;
		&lt;aside&gt;Aside&lt;/aside&gt;
		&lt;nav&gt;Nav&lt;/nav&gt;
		&lt;footer&gt;Footer&lt;/footer&gt;

	&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;
</code></pre>



<h2 class="has-background" style="background-color:#ff6663">#10 – Responsive Grid Example</h2>



<p>In this CSS grid tutorial I’ll demonstrate how we can use media queries and grid areas to make a full responsive CSS grid.</p>



<pre class="wp-block-code"><code>// index.html

&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
	&lt;title&gt;Using CSS Grid&lt;/title&gt;
	&lt;style&gt;
		body{
			color: #fff;
			font-family: 'Nunito Semibold';
			text-align: center;
		}
		#content{
			display: grid;
			grid-template-columns: repeat(4, 1fr);
			grid-auto-rows: minmax(100px, auto);
			gap: 10px;
			max-width: 960px;
			margin: 0 auto;
			grid-template-areas:
			"header header header header"
			"aside aside main main"
			"nav nav main main"
			"section section section section"
			"section section section section"
			"footer footer footer footer";
		}
		/* desktop grid */
		@media screen and (min-width: 760px){
			#content{
				display: grid;
				grid-template-columns: repeat(4, 1fr);
				grid-auto-rows: minmax(100px, auto);
				gap: 10px;
				max-width: 960px;
				margin: 0 auto;
				grid-template-areas:
				"header header header header"
				"footer footer footer footer"
				"main main main main"
				"main main main main"
				"aside aside nav nav"
				"section section section section"
				"section section section section";
			}
		}
		#content &gt; *{
			background: #3bbced;
			padding: 30px;
		}
		header{
			grid-area: header;
		}
		main{
			grid-area: main;
		}
		section{
			grid-area: section;
		}
		aside{
			grid-area: aside;
		}
		nav{
			grid-area: nav;
		}
		footer{
			grid-area: footer;
		}
	&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

	&lt;div id="content"&gt;

		&lt;header&gt;Header&lt;/header&gt;
		&lt;main&gt;Main&lt;/main&gt;
		&lt;section&gt;Section&lt;/section&gt;
		&lt;aside&gt;Aside&lt;/aside&gt;
		&lt;nav&gt;Nav&lt;/nav&gt;
		&lt;footer&gt;Footer&lt;/footer&gt;

	&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Web Development In 2022 &#8211; A Practical Guide</title>
		<link>/wordpress_blog/web-development-in-2022/</link>
		
		<dc:creator><![CDATA[gee.hsu]]></dc:creator>
		<pubDate>Thu, 13 Jan 2022 02:48:00 +0000</pubDate>
				<category><![CDATA[Youtube]]></category>
		<guid isPermaLink="false">/wordpress_blog/?p=480</guid>

					<description><![CDATA[學習資源:&#160;Traversy Media Thank  [&#8230;]]]></description>
										<content:encoded><![CDATA[
<blockquote class="wp-block-quote"><p>學習資源:&nbsp;<a href="https://www.youtube.com/watch?v=EqzUcMzfV1w" target="_blank" rel="noreferrer noopener">Traversy Media</a></p><cite>Thank you.</cite></blockquote>



<p>This is my annual guide to take you from start to finish when it comes to the web development technologies that are available for frontend, backend, and full-stack developers.</p>



<p>Timestamps:</p>



<p>00:00:00 – Intro<br>00:01:32 – What Is Your Goal?<br>00:03:54 – Types of Web Developers<br>00:05:40 – Basic Necessities/Tools<br>00:09:17 – HTML &amp; CSS<br>00:11:33 – Sass &amp; PostCSS<br>00:13:09 – CSS Frameworks<br>00:16:56 – UI Design Principles<br>00:18:23 – JavaScript<br>00:22:02 – Extra Programming Tools<br>00:25:20 – Deploying Frontend Projects<br>00:27:19 – Basic Frontend Developer Checklist<br>00:28:58 – Where To Go From Here<br>00:31:25 – Frontend Frameworks<br>00:35:20 – TypeScript<br>00:36:53 – UI Kits &amp; Libraries<br>00:39:04 – Testing<br>00:40:38 – Server-Side Rendering<br>00:43:28 – Static Site Generators<br>00:45:59 – Headless CMS<br>00:48:30 – The Jamstack<br>00:50:20 – Frontend Superstar Checklist<br>00:51:51 – Server-Side Languages<br>00:56:40 – Server-Side Web Frameworks<br>01:04:05 – Databases<br>01:10:30 – REST APIs<br>01:11:21 – GraphQL<br>01:12:48 – Authentication &amp; Authorization<br>01:15:25 – WordPress<br>01:16:36 – Deploying Full Stack Projects<br>01:20:42 – Backend &amp; Full Stack Checklist<br>01:21:54 – Mobile App Development<br>01:23:56 – Web3<br>01:28:20 – Web Assembly<br>01:29:18 – Artificial Intelligence<br>01:30:36 – Thank You!</p>



<h2>Why Learn To Code?</h2>



<p>There are many reasons to learn to code. Figure out what you want to do with this skill.</p>



<ul><li>Work as a developer for a company</li><li>Freelance or run your own business</li><li>Build your own products or SaaS (Software as a Service)</li><li>Create educational content</li><li>Code as a hobby</li></ul>



<h2>Types Of Web Developers</h2>



<h3>Fronted Developer</h3>



<p>Works on the client side / browser and creates user interfaces.<br>They use tools like HTML, CSS, JS, DOM, FE frameworks, etc.</p>



<h3>Backend Developer</h3>



<p>Works on the server and deals with databases.<br>They use languages like JS, Python, PHP, etc. Databases like Postgres, MongoDB. HTTP, server configuration, deployment, etc.</p>



<h3>Full Stack Developer</h3>



<p>Works on the frontend and backend and works with a combination of the tools above.</p>



<h2>Tools: The Necessities</h2>



<p>Basic tools that every web developer uses</p>



<ul><li>Computer &amp; OS<ul><li><strong>MacOS</strong>&nbsp;| Windows | Linux | WSL</li></ul></li><li>Web Browser<ul><li><strong>Chrome</strong>&nbsp;| Firefox | Brave | Edge | Safari</li></ul></li><li>Text Editor / IDE<ul><li><strong>VS Code</strong>&nbsp;| Sublime Text | Vim | Webstorm</li></ul></li><li>Terminal<ul><li>Default |&nbsp;<strong>iTerm2</strong>&nbsp;| Powershell | Git Bash | Hyper</li></ul></li><li>Design Software<ul><li>Figma |&nbsp;<strong>Adobe XD</strong>&nbsp;| Sketch</li></ul></li></ul>



<h2>HTML &amp; CSS</h2>



<p>HTML &amp; CSS are the building blocks of web development</p>



<ul><li>HTML5 Basic &amp; Semantic Tags (Page Layout)</li><li>CSS Fundamentals</li><li>CSS Alignment (Flexbox &amp; CSS Grid)</li><li>Media Queries / Responsive Design</li><li>Simple Animations / Transitions</li></ul>



<h2>Sass &amp; PostCSS</h2>



<p>Sass is a CSS pre-processor that adds to the functionality of CSS. It offers variables, nesting, mixins, functions, etc.</p>



<p>PostCSS is a tool for transforming CSS with JavaScript. There are plugins to add the stuff Sass offers and more.</p>



<h2>CSS Frameworks (Choose One)</h2>



<p>CSS frameworks give you predefined classes/components to style elements. The can rapidly speed up the process of creating layouts.</p>



<ul><li><strong>Bootstrap 5</strong><ul><li>Popular, high level framework</li></ul></li><li>Tailwind CSS<ul><li>Low-level, utility based framework</li></ul></li><li>Materialize<ul><li>Based on material design</li></ul></li><li>Bulma<ul><li>Mobile-first, modular framework</li></ul></li><li>Foundation<ul><li>Advanced CSS framework</li></ul></li></ul>



<h2>UI Design Principles</h2>



<p>Frontend devs &amp; web designers should know some basic design principles.</p>



<ul><li>Color &amp; Contrast<ul><li>Text should be readable</li></ul></li><li>Whitespace<ul><li>Check space between elements</li></ul></li><li>Scale<ul><li>Relative element sizing</li></ul></li><li>Visual Hierarchy (視覺層級)<ul><li>Arrange in order of importance</li></ul></li><li>Typography<ul><li>Typeface, sizing, etc</li></ul></li></ul>



<h2>JavaScript</h2>



<p>JavaScript is the language of the browser.</p>



<p>Every web developer should have some level of JS knowledge.</p>



<ul><li>JS Basics<ul><li>Data types, data structures, functions, loops</li></ul></li><li>DOM<ul><li>Document object model</li></ul></li><li>Async JS<ul><li>Promises, Async/Await</li></ul></li><li>Fetch API &amp; HTTP<ul><li>Make requests to API’s &amp; understand HTTP</li></ul></li><li>Array Methods<ul><li>map, filter, reduce, etc</li></ul></li></ul>



<h2>Extra Programming Tools</h2>



<ul><li>GIT is a popular version control system. It is used with remote repositories such as GitHub, GitLab and BitBucket.</li><li>NPM is a package manager used to install packages into your project. NPM requires Node.js to be installed.</li><li>Browser dev tools are important for all types of developers Element selector, console, storage, network activity, etc.</li><li>Emmet, Live Server, Prettier, ESLint, GitHub Copilot, etc.</li></ul>



<h2>Deploying Frontend Projects</h2>



<h3>Popular Platforms</h3>



<ul><li>netlify</li><li>Vercel</li><li>cPanel</li><li>amazon $3</li></ul>



<h3>Domain Name Registrars</h3>



<ul><li>namecheap</li><li>DOMAIN.COM</li><li>bluehost</li><li>GoDaddy</li></ul>



<p>There are multiple ways to deploy to a hosting platform<br><br>GIT, SSH, FTP/SFTP</p>



<h2 class="has-background" style="background-color:#ff6663">Basic Frontend Developer</h2>



<p>A basic frontend developer should be able to do the following…</p>



<ul><li>Create website layouts with HTML/CSS</li><li>Understand some basic design principles</li><li>Know JavaScript and how to work with the DOM</li><li>Create basic interactive frontend applications</li><li>Connect to APIs and make requests via Fetch</li><li>Work with GIT and use version control</li><li>Deploy and manage small production projects</li></ul>



<h2>Where To Go From Here (Choose one)</h2>



<ul><li>Web Design<ul><li>Learn More Design</li><li>Get Better at CSS</li><li>Simple Websites</li></ul></li><li><strong>Frontend Framework</strong><ul><li>React, Vue, Svelte</li><li>State Managers</li><li>Server-Side Rendering</li></ul></li><li>Backend<ul><li>Node.js, Python, PHP, C#, Go</li><li>Databases – Postgres, MongoDB</li><li>HTTP &amp; API Development</li></ul></li><li>Advanced JS<ul><li>Module Bundlers</li><li>Testing</li><li>Design Patterns</li></ul></li></ul>



<h2 class="has-background" style="background-color:#ff6663">Frontend Frameworks (Choose One)</h2>



<p>Frontend JS frameworks used for SPAs (Single Page Apps)</p>



<h3>React</h3>



<ul><li>Created &amp; Maintained by Facebook</li><li>Most Popular Framework / Library</li><li>Moderate Learning Curve</li></ul>



<p>React Router, JSX, Hooks, Context API, Redux</p>



<h3>Vue</h3>



<ul><li>Second Most Popular Framework</li><li>Great Community</li><li>Low Learning Curve</li></ul>



<p>Vue CLI, Vue Router, Composition API, Vuex</p>



<h3>Angular</h3>



<ul><li>Created &amp; Maintained by Google</li><li>Popular in Enterprise</li><li>Steep Learning Curve</li></ul>



<p>Angular CLI, Services, TypeScript, Observables</p>



<h3>Svelte</h3>



<ul><li>Gaining Popularity</li><li>Lightweight &amp; Performant Compiler</li><li>Lowest Learning Curve</li></ul>



<p>SvelteKit, Stores</p>



<h2>TypeScript</h2>



<p>Superset of JavaScript that adds static typing and other features</p>



<ul><li>Static-Type Checking</li><li>Class &amp; Module Support</li><li>Other ES6+ Features</li><li>Code less prone to errors</li><li>Code is more robust and definitive</li></ul>



<h2 class="has-background" style="background-color:#ff6663">UI Kits (Choose One)</h2>



<p>Reusable design elements / components</p>



<h3>React</h3>



<ul><li><strong>Material UI</strong></li><li>Onsen UI</li><li>Chakra UI</li><li>React Bootstrap</li></ul>



<h3>Vue</h3>



<ul><li><strong>Vuetify</strong></li><li>Buefy</li><li>Vue Material</li><li>Bootstrap Vue</li></ul>



<h3>Angular</h3>



<ul><li><strong>Angular Material</strong></li><li>Ng-Zorro</li><li>Ng-Bootstrap</li><li>MD Bootstrap</li></ul>



<h3>Svelte</h3>



<ul><li><strong>Svelte Material UI</strong></li><li>Materialify</li><li>Smelte</li><li>Sveltestrap</li></ul>



<h2>Testing</h2>



<p>Common types of testing in programming</p>



<ul><li>Unit Testing – Test blocks of code (functions, modules, classes)</li><li>Integration Testing – Modules are combined and tested together</li><li>E2E Testing – Emulating a user</li></ul>



<p>JS testing tools include Jest , Cypress and Puppeteer.</p>



<p>Other languages have testing tools as well</p>



<h2 class="has-background" style="background-color:#ff6663">Server-Side Rendering (Choose One)</h2>



<p>Unlike with a SPA, React/Vue/Svelte apps render on the server-side</p>



<h3 class="has-background" style="background-color:#ff6663">Next.js</h3>



<ul><li>React Based</li><li>Data Fetching Methods</li><li>Image Optimization, SEO, etc</li></ul>



<h3>Nuxt.js</h3>



<ul><li>Vue Based</li><li>Data Fetching</li><li>Automatic transpilation &amp; Bundling</li></ul>



<h3>Remix</h3>



<ul><li>React Based</li><li>Loaders &amp; Actions</li><li>Most Control Over HTTP Request/Response</li></ul>



<h3>SvelteKit</h3>



<ul><li>Svelte Based</li><li>Advanced Routing</li><li>Code Splitting &amp; Other features</li></ul>



<h2 class="has-background" style="background-color:#ff6663">Static Site Generators (Choose One)</h2>



<p>Static sites have a lot of benefits such as performance, SEO and more</p>



<h3>Gatsby</h3>



<ul><li>React Based</li><li>GraphQL Data Layer</li><li>Image Optimization, Code Splitting &amp; More</li></ul>



<h3 class="has-background" style="background-color:#ff6663">Next.js</h3>



<ul><li>React Based</li><li>Exports Fast Static Websites</li><li>Data Fetching Methods</li></ul>



<h3>Gridsome</h3>



<ul><li>Vue Based</li><li>PWA Ready</li><li>SEO Benefits</li></ul>



<h3>Jekyll</h3>



<ul><li>Built on Ruby</li><li>Been Around a While</li><li>Liquid Template Engine</li></ul>



<h2 class="has-background" style="background-color:#ff6663">Headless CMS (Choose One)</h2>



<p>Content management systmes for creating APIs with no frontend</p>



<h3 class="has-background" style="background-color:#ff6663">Strapi</h3>



<ul><li>Open Source, Based on Node.js</li><li>Customizable</li><li>Self hosted</li></ul>



<h3>Sanity.io</h3>



<ul><li>Powerful &amp; Flexible Platform</li><li>Great for Collaboration</li><li>Sanity Studio Toolkit</li></ul>



<h3>ContentFul</h3>



<ul><li>Great for Teams</li><li>Optimized for Speed</li><li>Great for Large Businesses</li></ul>



<h3>GraphCMS</h3>



<ul><li>Build a GraphQI API instantly</li><li>Lightweight &amp; Intuitive</li><li>UI Extensions</li></ul>



<h2>The JamStack</h2>



<p>Broad term to refer to an architectural approach for building websites.</p>



<ul><li>Variety Of Tools / Tecknologies</li><li>Decoupled</li><li>Static-First</li><li>Serverless Functions</li><li>High Performance, Secure &amp; Affordable</li></ul>



<h2 class="has-background" style="background-color:#ff6663">Frontend Superstar</h2>



<p>We have gone over just about everything a FE developer could do</p>



<ul><li>Build user interfaces with a frontend framework</li><li>Understand how to work with local and global state</li><li>Work with REST APIs &amp; HTTP</li></ul>



<p>Added Skills</p>



<ul><li>Create applications with TypeScript</li><li>Work with SSR &amp; Jamstack technologies (SSG, headless CMS)</li><li>Write unit, integration &amp; e2e tests</li></ul>



<h2 class="has-background" style="background-color:#ff6663">Server-Side Language (Choose One)</h2>



<p>Many different languages can be used on the server for web development</p>



<ul><li><strong>Node.js</strong></li><li>GoLang</li><li>Python</li><li>PHP</li><li>C#</li><li>GoLang</li><li>Ruby</li><li>Java</li><li>Kotlin</li><li>Rust</li><li>Scala</li><li>R</li><li>Swift</li></ul>



<h2 class="has-background" style="background-color:#ff6663">Server-Side Web Framework (Choose One)</h2>



<h3>Node.js</h3>



<ul><li>Express</li><li>Fastify</li><li>Koa</li><li>Nest.js</li></ul>



<h3>Python</h3>



<ul><li>Django</li><li>Flask</li><li>FastAPI</li></ul>



<h3>PHP</h3>



<ul><li>Laravel</li><li>Symfony</li><li>Slim</li></ul>



<h3>C#</h3>



<ul><li>ASP.NET</li><li>ASP.NET MVC</li></ul>



<h3>GoLang</h3>



<ul><li>Gin</li><li>Beego</li></ul>



<h3>Ruby</h3>



<ul><li>Ruby on Rails</li><li>Sinatra</li></ul>



<h3>Java</h3>



<ul><li>Spring</li><li>Struts</li></ul>



<h3>Kotlin</h3>



<ul><li>Spring</li><li>Vert.x</li></ul>



<h3>Scala</h3>



<ul><li>Play</li><li>Lift</li></ul>



<h3>Rust</h3>



<ul><li>Rocket</li><li>Actix Web</li></ul>



<h2>Databases (Choose One)</h2>



<p>Backend &amp; full stack developers work with various databases &amp; tools</p>



<ul><li><strong>PostgreSQL</strong></li><li>MySQL</li><li>MS SQL Server</li><li>SQLite</li><li><strong>MongoDB</strong></li><li>Firebase</li><li>Supabase</li><li>Redis</li></ul>



<h3>ORMs</h3>



<ul><li>Sequelize</li><li>TypeORM</li><li>Mongoose</li><li>Prisma</li><li>SQLAlchemy</li><li>Doctrine</li></ul>



<h2>REST APIs</h2>



<p>APIs that conform to the REST architectural style and interacts with RESTful services</p>



<ul><li>Representational State Transfer</li><li>HTTP requests work with data/resources</li><li>Specific URL structure for endpoints</li></ul>



<p>GET /api/todos<br>POST /api/todos<br>PUT /api/todos/100<br>DELETE /api/todos/100</p>



<h2>GraphQL</h2>



<p>Data query &amp; manipulation language for APIs</p>



<ul><li>Request specific data points</li><li>Strongly typed</li><li>Less maintenance than REST</li><li>Apollo is a popular GraphQL client</li></ul>



<h2>Authentication &amp; Authorization</h2>



<p>Authentication is the process of identifying an individual and authorization pertains to the permissions that individual has.</p>



<ul><li>JSON Web Tokens</li><li>Cookies &amp; Sessions</li><li>OAuth (Login via Google, Twitter, GitHub)</li><li>Authentication libraries (Passport, Grant, etc)</li><li>Password hashing (Bcrypt)</li><li>Protecting endpoints and routes</li></ul>



<h2>WordPress</h2>



<p>Full-featured PHP content management system</p>



<ul><li>WordPress is still widely used</li><li>It is great for freelancing</li><li>Small business clients like it</li><li>It can also be used as a headless CMS</li></ul>



<h2>Deploying Full Stack Projects &amp; DevOps</h2>



<h3>Hosting Platforms</h3>



<ul><li>aws</li><li>heroku</li><li>DigitalOcean</li></ul>



<h3>Server Software</h3>



<ul><li>APACHE</li><li>NGINX</li></ul>



<h3>Containers &amp; Virtualization</h3>



<ul><li>docker</li><li>kubernetes</li></ul>



<p>Image &amp; Video</p>



<ul><li>Cloudinary</li><li>Amazon S3</li></ul>



<h2 class="has-background" style="background-color:#ff6663">Backend &amp; Full Stack Web Developer</h2>



<p>A backend web developer should know how to do the following…</p>



<ul><li>Comfortable with a server-side programming language</li><li>Know how to setup and manage a database &amp; ORM / ODM</li><li>Know how to create REST APIs and implement authentication</li><li>Comfortable with the terminal and Unix commands</li><li>Know how to deploy projects and work with servers</li></ul>



<p>A&nbsp;<strong>full stack developer</strong>&nbsp;can do this as well as frontend tasks</p>



<h2 class="has-background" style="background-color:#ff6663">Mobile Development (Choose One)</h2>



<p>There are many web technologies that allow us to create mobile apps</p>



<h3 class="has-background" style="background-color:#ff6663">React Native</h3>



<ul><li>React Based</li><li>Code Reusability</li><li>Large Community</li></ul>



<h3>Flutter</h3>



<ul><li>Dart Programming Language</li><li>Extremely Fast</li><li>Strong Documentation</li></ul>



<h3>Ionic</h3>



<ul><li>Use Any Framework</li><li>Pre-Designed UI Components</li><li>Developer-Friendly Tooling</li></ul>



<h3>Xamarin</h3>



<ul><li>Mobile Apps With .NET &amp; C#</li><li>Cross-Platform Apps</li><li>High Performance</li></ul>



<h3>Web3</h3>



<p>Web3 opens up a whole new possibility of decentralized apps (Dapps) that offer benefits usch as transparency, security, anonymity and more.</p>



<ul><li>Blockchain</li><li>Ethereum &amp; Smart Contracts</li><li>Solidity Programming</li><li>NFTs (Non-Fungible Tokens)</li></ul>



<h2>Web Assembly</h2>



<p>A low-level assembly-like language or bytecode for the web</p>



<ul><li>Develop high-performance web applications</li><li>Write programs in Rust, C, C++ and compile to WASM</li><li>AssemblyScript is a TypeScript variant</li><li>NOT a replacement for JS!</li></ul>



<h2>Artificial Intelligence</h2>



<p>Machine Learning and AI have a role in web development</p>



<ul><li>Programming Tools (GitHub Copilot)</li><li>Testing Tools</li><li>ML APIs</li><li>Chatbots, Spam Filters, Suggestions, etc</li></ul>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
